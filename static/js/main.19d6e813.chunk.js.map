{"version":3,"sources":["components/common/Box/index.js","components/common/Box/Title.js","components/common/Input/index.js","components/common/Select/index.js","components/common/CalendarPicker/index.js","utils/date.js","reducers/creditParams.js","components/CreditForm/Prepayments.js","utils/common.js","calc/common.js","calc/credit.js","reducers/creditData.js","components/CreditForm/index.js","components/common/Summary/index.js","components/CreditSummary/index.js","components/CreditDataTable/index.js","reducers/depositParams.js","calc/deposit.js","reducers/depositData.js","components/DepositForm/index.js","components/DepositSummary/index.js","components/DepositDataTable/index.js","components/common/Input/LargeInput.js","components/common/Input/NumberInput.js","reducers/credits.js","components/MultiCreditForm/components/CreditForm.js","components/MultiCreditForm/index.js","routes.js","pages/Main/index.js","pages/Deposit/index.js","pages/CompareCredits/index.js","pages/SavedCredits/index.js","components/Header/index.js","components/Menu/index.js","components/Footer/index.js","App.js","index.js","store.js"],"names":["Box","children","props","Paper","className","Title","component","variant","color","paragraph","Input","TextField","size","fullWidth","Select","otherProps","select","CalendarPicker","value","onChange","label","disableToolbar","format","margin","normalizeDate","date","resultDate","Date","setUTCHours","formatDateISO","toISOString","substr","formatDate","splittedDate","split","getNextMonth","newDate","day","getDate","setMonth","getMonth","setDate","getDaysCountInYear","year","getDaysCountBetweenDates","start","end","CALCULATING_TYPE","PREPAYMENT_REPEAT","MONTHLY","id","name","NONE","createNewPrepayment","now","payment","repeat","setPrepaymentParam","type","initialCreditParams","calculatingType","creditSum","creditPercent","paymentPerMonth","creditPeriod","prepayments","creditParams","state","action","filter","prepayment","map","Prepayments","useSelector","useState","length","isOpen","setIsOpen","dispatch","useDispatch","container","spacing","item","xs","md","lg","onClick","key","onDateChange","target","parseFloat","Object","values","removePrepayment","removePrepaymentHandler","fontSize","priceFormat","Math","round","toLocaleString","replace","roundValue","removeItem","array","current","addItemIfNotExists","includes","concat","removeProperty","object","property","result","calculatePercentage","base","calculateMoneyByPercentage","sum","percentage","startDate","endDate","daysCountInPreviousYear","getFullYear","daysCountInCurrentYear","paymentByPercents","addFormattedFields","row","dateFormatted","paymentRounded","paymentByPercentsRounded","paymentByCreditRounded","paymentByCredit","overpaymentRounded","overpayment","creditLeftRounded","creditLeft","Credit","this","period","sort","a","b","creditData","monthCount","currentPaymentDate","nextPaymentDate","currentPrepayments","prepaymentEveryMonth","find","nextRepeatedDate","push","i","calculateSomePayment","checkCreditEnd","isPrepayment","previousPayment","currentPayment","number","percentageInMonth","pow","annuityPayment","ceil","calculateAnnuityPayment","makePrepayments","firstPayment","lastPayment","table","summary","overpaymentPercent","lastPaymentDate","onPercentage","calculateCredit","params","calculate","setCreditData","data","initialState","calculatePayments","CreditForm","setCreditParam","onSubmit","event","preventDefault","noValidate","autoComplete","justify","Summary","icon","iconType","title","units","footer","classnames","CreditSummary","CreditDataTable","useMemo","stickyHeader","align","initialDepositParams","initialSum","depositParams","Deposit","depositeDate","previousMonth","currentMonth","income","totalIncome","totalSum","calculateDeposit","depositData","setDepositParam","DepositSummary","DepositDataTable","index","LargeInput","withStyles","input","NumberInput","step","shiftStep","minValue","maxValue","valueProcessor","parsedValue","floatValue","isNaN","startAdornment","position","style","marginLeft","aria-label","shiftKey","max","disabled","endAdornment","marginRight","min","defaultProps","Infinity","propTypes","PropTypes","string","func","months","locked","initialCredits","names","active","creditByName","default","scheduleByName","credits","payload","field","creditSchedule","isActive","hasOwnProperty","elevation","direction","mt","isRequired","creditNameCounter","MultiCreditForm","mb","routes","path","menuIcon","Header","route","exact","Menu","open","button","Link","to","primary","Footer","Dashboard","maxWidth","store","createStore","combineReducers","window","__REDUX_DEVTOOLS_EXTENSION__","configureStore","ReactDOM","render","StrictMode","utils","DateFnsUtils","document","getElementById"],"mappings":"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","file":"static/js/main.19d6e813.chunk.js","sourcesContent":["import React from 'react';\nimport { Paper } from '@material-ui/core';\n\nimport 'src/components/common/Box/Box.css';\n\nexport default function Box({ children, ...props }) {\n    return (\n        <Paper className=\"box\" {...props}>\n            {children}\n        </Paper>\n    );\n}\n","import React from 'react';\nimport MuiTypography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n    return (\n        <MuiTypography component=\"h2\" variant=\"h6\" color=\"primary\" paragraph>\n            {props.children}\n        </MuiTypography>\n    );\n}\n","import React from 'react';\nimport { TextField } from '@material-ui/core';\n\nexport default function Input(props) {\n    return <TextField size=\"small\" fullWidth {...props} />;\n}\n","import React from 'react';\nimport MuiTextField from '@material-ui/core/TextField';\n\nexport default function Select({ children, ...otherProps }) {\n    return (\n        <MuiTextField select size=\"small\" fullWidth {...otherProps}>\n            {children}\n        </MuiTextField>\n    );\n}\n","import React from 'react';\nimport { KeyboardDatePicker } from '@material-ui/pickers';\nimport 'src/components/common/CalendarPicker/CalendarPicker.css';\n\nexport default function CalendarPicker({ value, onChange, label }) {\n    return (\n        <div className=\"calendar-picker-wrapper\">\n            <KeyboardDatePicker\n                disableToolbar\n                variant=\"inline\"\n                format=\"dd.MM.yyyy\"\n                margin=\"normal\"\n                label={label}\n                value={value}\n                onChange={onChange}\n            />\n        </div>\n    );\n}\n","const MILLISECONDS_IN_DAY = 1000 * 60 * 60 * 24;\n\n// возвращает объект даты с установленным временем 00:00:00\nexport const normalizeDate = (date) => {\n    const resultDate = new Date(date);\n    resultDate.setUTCHours(0, 0, 0, 0);\n    return resultDate;\n};\n\nexport const formatDateISO = (date) => date.toISOString().substr(0, 10);\n\nexport const formatDate = (date) => {\n    const strDate = formatDateISO(date);\n    const splittedDate = strDate.split('-');\n    return `${splittedDate[2]}.${splittedDate[1]}.${splittedDate[0]}`;\n};\n\nexport const getNextMonth = (date) => {\n    const newDate = new Date(date);\n    const day = date.getDate();\n    newDate.setMonth(date.getMonth() + 1);\n    if (newDate.getDate() !== day) {\n        newDate.setDate(0);\n    }\n    return newDate;\n};\n\nexport const getDaysCountInYear = (year) => {\n    if (year % 4 === 0) {\n        return 366;\n    }\n    return 365;\n};\n\nexport const getDaysCountBetweenDates = (start, end) => (end - start) / MILLISECONDS_IN_DAY;\n","import { formatDateISO } from 'src/utils/date';\n\nconst SET_CREDIT_PARAM = 'SET_CREDIT_PARAM';\nconst ADD_EMPTY_PREPAYMENT = 'ADD_EMPTY_PREPAYMENT';\nconst REMOVE_PREPAYMENT = 'REMOVE_PREPAYMENT';\nconst SET_PREPAYMENT_PARAM = 'SET_PREPAYMENT_PARAM';\n\nexport const CALCULATING_TYPE = {\n    BY_PERIOD: 'by_period',\n    BY_PAYMENT: 'by_payment',\n};\n\nexport const PREPAYMENT_REPEAT = {\n    MONTHLY: {\n        id: 'monthly',\n        name: 'Раз в месяц',\n    },\n    NONE: {\n        id: 'none',\n        name: 'один раз',\n    },\n};\n\nconst createNewPrepayment = () => ({\n    id: Date.now(),\n    date: formatDateISO(new Date()),\n    payment: 1000,\n    repeat: PREPAYMENT_REPEAT.NONE.id,\n});\n\nexport function setCreditParam(name, value) {\n    return {\n        type: SET_CREDIT_PARAM,\n        name,\n        value,\n    };\n}\n\nexport function addEmptyPrepayment() {\n    return {\n        type: ADD_EMPTY_PREPAYMENT,\n    };\n}\n\nexport function removePrepayment(id) {\n    return {\n        type: REMOVE_PREPAYMENT,\n        id,\n    };\n}\n\nexport function setPrepaymentParam(id, name, value) {\n    return {\n        type: SET_PREPAYMENT_PARAM,\n        id,\n        name,\n        value,\n    };\n}\n\nexport const initialCreditParams = {\n    calculatingType: CALCULATING_TYPE.BY_PAYMENT,\n    creditSum: 200000,\n    creditPercent: 10,\n    paymentPerMonth: 10000,\n    creditPeriod: 60,\n    prepayments: [\n        // {\n        //     id: '1',\n        //     date: '2020-06-15',\n        //     payment: 5000,\n        //     repeat: PREPAYMENT_REPEAT.MONTHLY.id,\n        // },\n        // {\n        //     id: '2',\n        //     date: '2020-07-10',\n        //     payment: 3000,\n        //     repeat: PREPAYMENT_REPEAT.NONE.id,\n        // },\n    ],\n};\n\nexport default function creditParams(state = initialCreditParams, action) {\n    switch (action.type) {\n        case SET_CREDIT_PARAM:\n            return {\n                ...state,\n                [action.name]: action.value,\n            };\n        case ADD_EMPTY_PREPAYMENT:\n            return {\n                ...state,\n                prepayments: [...state.prepayments, createNewPrepayment()],\n            };\n        case REMOVE_PREPAYMENT:\n            return {\n                ...state,\n                prepayments: state.prepayments.filter((prepayment) => prepayment.id !== action.id),\n            };\n        case SET_PREPAYMENT_PARAM:\n            return {\n                ...state,\n                prepayments: state.prepayments.map((prepayment) => {\n                    if (prepayment.id === action.id) {\n                        return {\n                            ...prepayment,\n                            [action.name]: action.value,\n                        };\n                    }\n                    return prepayment;\n                }),\n            };\n        default:\n            return state;\n    }\n}\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport MuiGrid from '@material-ui/core/Grid';\nimport MuiMenuItem from '@material-ui/core/MenuItem';\nimport MuiButton from '@material-ui/core/Button';\nimport MuiIconButton from '@material-ui/core/IconButton';\nimport MuiDeleteIcon from '@material-ui/icons/Delete';\n\nimport Input from 'src/components/common/Input';\nimport Select from 'src/components/common/Select';\nimport CalendarPicker from 'src/components/common/CalendarPicker';\nimport { PREPAYMENT_REPEAT, addEmptyPrepayment, removePrepayment, setPrepaymentParam } from 'src/reducers/creditParams';\nimport { formatDateISO } from 'src/utils/date';\n\nexport default function Prepayments() {\n    const { creditParams } = useSelector((state) => state);\n    const [isOpen, setIsOpen] = useState(creditParams.prepayments.length > 0);\n    const dispatch = useDispatch();\n\n    const togglePrepayments = () => {\n        if (!isOpen && creditParams.prepayments.length === 0) {\n            dispatch(addEmptyPrepayment());\n        }\n        setIsOpen(!isOpen);\n    };\n\n    const onChange = (id, name, value) => {\n        dispatch(setPrepaymentParam(id, name, value));\n    };\n\n    const onDateChange = (id, value) => {\n        dispatch(setPrepaymentParam(id, 'date', formatDateISO(value)));\n    };\n\n    const addPrepaymentHandler = () => {\n        dispatch(addEmptyPrepayment());\n    };\n\n    const removePrepaymentHandler = (id) => {\n        dispatch(removePrepayment(id));\n    };\n\n    return (\n        <>\n            <MuiGrid container spacing={3}>\n                <MuiGrid item xs={12} md={12} lg={12}>\n                    <MuiButton color=\"primary\" onClick={togglePrepayments}>\n                        Досрочные платежи\n                    </MuiButton>\n                    {creditParams.prepayments.length > 0 && !isOpen && (\n                        <div>есть {creditParams.prepayments.length} досрочных платежа</div>\n                    )}\n                </MuiGrid>\n            </MuiGrid>\n            {isOpen && (\n                <>\n                    {creditParams.prepayments.map(({ id, date, payment, repeat }) => (\n                        <MuiGrid key={id} container spacing={3}>\n                            <MuiGrid item xs={12} md={3} lg={3}>\n                                <CalendarPicker\n                                    value={date}\n                                    onChange={(value) => onDateChange(id, value)}\n                                    label=\"Дата\"\n                                />\n                            </MuiGrid>\n                            <MuiGrid item xs={12} md={3} lg={3}>\n                                <Input\n                                    value={payment}\n                                    onChange={({ target }) => onChange(id, 'payment', parseFloat(target.value))}\n                                    label=\"Платеж, руб.\"\n                                />\n                            </MuiGrid>\n                            <MuiGrid item xs={12} md={3} lg={3}>\n                                <Select\n                                    value={repeat}\n                                    onChange={({ target }) => onChange(id, 'repeat', target.value)}\n                                    label=\"Периодичность\"\n                                >\n                                    {Object.values(PREPAYMENT_REPEAT).map((repeat) => (\n                                        <MuiMenuItem key={repeat.id} value={repeat.id}>\n                                            {repeat.name}\n                                        </MuiMenuItem>\n                                    ))}\n                                </Select>\n                            </MuiGrid>\n                            <MuiGrid item xs={12} md={3} lg={3}>\n                                <MuiIconButton onClick={() => removePrepaymentHandler(id)}>\n                                    <MuiDeleteIcon fontSize=\"small\" />\n                                </MuiIconButton>\n                            </MuiGrid>\n                        </MuiGrid>\n                    ))}\n                    <MuiGrid container spacing={3}>\n                        <MuiGrid item xs={12} md={3} lg={3}>\n                            <MuiButton variant=\"contained\" color=\"secondary\" fullWidth onClick={addPrepaymentHandler}>\n                                Добавить платеж\n                            </MuiButton>\n                        </MuiGrid>\n                    </MuiGrid>\n                </>\n            )}\n        </>\n    );\n}\n","export function priceFormat(value) {\n    const roundedValue = Math.round(value);\n    return roundedValue.toLocaleString('ru-RU').replace(/\\s/g, '\\u2009');\n}\n\nexport function roundValue(value) {\n    return Math.round(value);\n}\n\nexport function numConversion(number, words) {\n    const textCases = [2, 0, 1, 1, 1, 2];\n    const textInt = number % 100 > 4 && number % 100 < 20 ? 2 : textCases[Math.min(number % 10, 5)];\n    return words[textInt];\n}\n\nexport function removeItem(array, item) {\n    return array.filter((current) => current !== item);\n}\n\nexport function addItemIfNotExists(array, item) {\n    return array.includes(item) ? array : array.concat(item);\n}\n\nexport function removeProperty(object, property) {\n    const result = { ...object };\n    delete result[property];\n    return result;\n}\n","/* eslint-disable import/prefer-default-export */\nimport { getDaysCountBetweenDates, getDaysCountInYear } from 'src/utils/date';\n\nexport function calculatePercentage(value, base) {\n    return Math.round((value / base) * 10000) / 100;\n}\n\nexport function calculateMoneyByPercentage(sum, percentage, startDate, endDate) {\n    const daysCountInPreviousYear = getDaysCountInYear(startDate.getFullYear());\n    const daysCountInCurrentYear = getDaysCountInYear(endDate.getFullYear());\n    let paymentByPercents = 0;\n    // Случай, когда одна часть платежного периода находится в невисокосном году, а вторая в високосном или наоборот\n    // В таком случае стоимость одного дня кредита будет разной для каждой части\n    if (startDate.getMonth() === 11 && endDate.getMonth() === 0 && daysCountInPreviousYear !== daysCountInCurrentYear) {\n        const daysCountInPreviousMonth = getDaysCountBetweenDates(\n            startDate,\n            new Date(`${startDate.getFullYear()}-12-31`)\n        );\n        const daysCountInCurrentMonth = getDaysCountBetweenDates(new Date(`${startDate.getFullYear()}-12-31`), endDate);\n\n        const oneDayCreditCostForPreviousMonth = (sum * percentage) / daysCountInPreviousYear;\n        const oneDayCreditCostForCurrentMonth = (sum * percentage) / daysCountInCurrentYear;\n\n        paymentByPercents =\n            oneDayCreditCostForPreviousMonth * daysCountInPreviousMonth +\n            oneDayCreditCostForCurrentMonth * daysCountInCurrentMonth;\n    } else {\n        // обычный случай\n        const oneDayCreditCost = (sum * percentage) / daysCountInPreviousYear;\n        paymentByPercents = oneDayCreditCost * getDaysCountBetweenDates(startDate, endDate);\n    }\n\n    return paymentByPercents;\n}\n","import { normalizeDate, getNextMonth, formatDate, formatDateISO } from 'src/utils/date';\nimport { roundValue } from 'src/utils/common';\nimport { calculatePercentage, calculateMoneyByPercentage } from 'src/calc/common';\nimport { CALCULATING_TYPE, PREPAYMENT_REPEAT } from 'src/reducers/creditParams';\n\nconst MAX_MONTHS_COUNT = 360;\nconst startDate = normalizeDate(new Date());\n\nfunction addFormattedFields(row) {\n    row.dateFormatted = formatDate(row.date);\n    row.paymentRounded = roundValue(row.payment);\n    row.paymentByPercentsRounded = roundValue(row.paymentByPercents);\n    row.paymentByCreditRounded = roundValue(row.paymentByCredit);\n    row.overpaymentRounded = roundValue(row.overpayment);\n    row.creditLeftRounded = roundValue(row.creditLeft);\n}\n\nfunction calculateAnnuityPayment(sum, percentage, period) {\n    const percentageInMonth = percentage / 12;\n    const pow = Math.pow(1 + percentageInMonth, period);\n    const annuityFactor = (percentageInMonth * pow) / (pow - 1);\n    const annuityPayment = sum * annuityFactor;\n    return Math.ceil(annuityPayment);\n}\n\nclass Credit {\n    constructor({\n        calculatingType = CALCULATING_TYPE.BY_PAYMENT,\n        creditSum,\n        creditPercent,\n        creditPeriod = 1,\n        paymentPerMonth,\n        prepayments = [],\n    }) {\n        this.calculatingType = calculatingType;\n        this.creditSum = creditSum;\n        this.percentage = creditPercent / 100;\n        this.period = creditPeriod;\n        this.payment = paymentPerMonth;\n        this.prepayments = prepayments.sort((a, b) => (a.date > b.date ? 1 : -1));\n\n        this.creditData = [];\n        this.creditLeft = creditSum;\n\n        this.monthCount = 0;\n        this.currentPaymentDate = new Date(startDate);\n        this.nextPaymentDate = getNextMonth(this.currentPaymentDate);\n    }\n\n    checkCreditEnd() {\n        return this.creditLeft <= 0 || this.monthCount > MAX_MONTHS_COUNT;\n    }\n\n    makePrepayments() {\n        const currentPaymentDate = formatDateISO(this.currentPaymentDate);\n        const nextPaymentDate = formatDateISO(this.nextPaymentDate);\n\n        // досрочные платежи, которые нужно учесть между платежными датами по графику платежей\n        const currentPrepayments = this.prepayments.filter((prepayment) => {\n            return currentPaymentDate <= prepayment.date && prepayment.date < nextPaymentDate;\n        });\n\n        // периодичные досрочные платежи, которые нужно учесть между платежными датами по графику платежей\n        const prepaymentEveryMonth = this.prepayments.find((prepayment) => {\n            return (\n                prepayment.repeat === PREPAYMENT_REPEAT.MONTHLY.id &&\n                prepayment.date < nextPaymentDate &&\n                !(currentPaymentDate <= prepayment.date && prepayment.date < nextPaymentDate)\n            );\n        });\n\n        // добавляем в список текущих досрочных платежей периодичные досрочные платежи\n        if (prepaymentEveryMonth) {\n            let nextRepeatedDate;\n            const date = normalizeDate(new Date(prepaymentEveryMonth.date));\n            const day = date.getDate();\n\n            if (day >= this.currentPaymentDate.getDate()) {\n                nextRepeatedDate = new Date(\n                    this.currentPaymentDate.getFullYear(),\n                    this.currentPaymentDate.getMonth(),\n                    day + 1\n                );\n            } else {\n                nextRepeatedDate = new Date(\n                    this.nextPaymentDate.getFullYear(),\n                    this.nextPaymentDate.getMonth(),\n                    day + 1\n                );\n            }\n\n            const prepayment = {\n                date: formatDateISO(nextRepeatedDate),\n                payment: prepaymentEveryMonth.payment,\n            };\n            currentPrepayments.push(prepayment);\n        }\n\n        for (let i = 0; i < currentPrepayments.length; i++) {\n            const { date, payment } = currentPrepayments[i];\n            this.calculateSomePayment(normalizeDate(date), payment, true);\n            if (this.checkCreditEnd()) {\n                break;\n            }\n        }\n    }\n\n    calculateSomePayment(date, payment, isPrepayment) {\n        const previousPayment = this.creditData[this.creditData.length - 1];\n        const currentPayment = {\n            number: previousPayment.number + 1,\n            date,\n            payment,\n            isPrepayment,\n        };\n\n        const paymentByPercents = calculateMoneyByPercentage(\n            previousPayment.creditLeft,\n            this.percentage,\n            previousPayment.date,\n            currentPayment.date\n        );\n\n        // последний платежный месяц\n        if (previousPayment.creditLeft <= payment) {\n            currentPayment.payment = previousPayment.creditLeft + paymentByPercents;\n        }\n\n        const paymentByCredit = currentPayment.payment - paymentByPercents;\n\n        currentPayment.paymentByPercents = paymentByPercents;\n        currentPayment.paymentByCredit = paymentByCredit;\n        currentPayment.overpayment = previousPayment.overpayment + paymentByPercents;\n        currentPayment.creditLeft = previousPayment.creditLeft - paymentByCredit;\n\n        addFormattedFields(currentPayment);\n        this.creditData.push(currentPayment);\n        this.creditLeft = currentPayment.creditLeft;\n    }\n\n    calculate() {\n        if (this.calculatingType === CALCULATING_TYPE.BY_PERIOD) {\n            this.payment = calculateAnnuityPayment(this.creditSum, this.percentage, this.period);\n        }\n\n        this.creditData[0] = {\n            number: 0,\n            date: startDate,\n            payment: 0,\n            paymentByPercents: 0,\n            paymentByCredit: 0,\n            overpayment: 0,\n            creditLeft: this.creditSum,\n        };\n\n        addFormattedFields(this.creditData[0]);\n\n        while (!this.checkCreditEnd()) {\n            this.makePrepayments();\n            if (this.checkCreditEnd()) {\n                break;\n            }\n            this.calculateSomePayment(this.nextPaymentDate, this.payment);\n            this.monthCount += 1;\n            this.currentPaymentDate = new Date(this.nextPaymentDate);\n            this.nextPaymentDate = getNextMonth(this.nextPaymentDate);\n        }\n\n        const firstPayment = this.creditData[1];\n        const lastPayment = this.creditData[this.creditData.length - 1];\n\n        return {\n            table: this.creditData,\n            summary: {\n                overpayment: lastPayment.overpayment,\n                overpaymentPercent: calculatePercentage(lastPayment.overpayment, this.creditSum),\n                monthCount: this.monthCount,\n                lastPaymentDate: lastPayment.date,\n                payment: this.payment,\n                onPercentage: calculatePercentage(firstPayment.paymentByPercents, this.payment),\n            },\n        };\n    }\n}\n\nexport default function calculateCredit(params) {\n    const credit = new Credit(params);\n    return credit.calculate();\n}\n","import calculatePayments from 'src/calc/credit';\nimport { initialCreditParams } from 'src/reducers/creditParams';\n\nconst SET_CREDIT_DATA = 'SET_CREDIT_DATA';\n\nexport function setCreditData(data) {\n    return {\n        type: SET_CREDIT_DATA,\n        data,\n    };\n}\n\nconst initialState = calculatePayments(initialCreditParams);\n\nexport default function creditData(state = initialState, action) {\n    switch (action.type) {\n        case SET_CREDIT_DATA:\n            return action.data;\n        default:\n            return state;\n    }\n}\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport MuiButton from '@material-ui/core/Button';\nimport MuiGrid from '@material-ui/core/Grid';\nimport MuiMenuItem from '@material-ui/core/MenuItem';\n\nimport Box from 'src/components/common/Box';\nimport BoxTitle from 'src/components/common/Box/Title';\nimport Input from 'src/components/common/Input';\nimport Select from 'src/components/common/Select';\nimport Prepayments from 'src/components/CreditForm/Prepayments';\nimport { CALCULATING_TYPE, setCreditParam } from 'src/reducers/creditParams';\nimport { setCreditData } from 'src/reducers/creditData';\nimport calculateCredit from 'src/calc/credit';\n\nexport default function CreditForm() {\n    const { creditParams } = useSelector((state) => state);\n    const dispatch = useDispatch();\n\n    const onChange = (name, value) => {\n        dispatch(setCreditParam(name, value));\n    };\n\n    const onSubmit = (event) => {\n        event.preventDefault();\n        const creditData = calculateCredit(creditParams);\n        dispatch(setCreditData(creditData));\n    };\n\n    return (\n        <>\n            <BoxTitle>Параметры кредита</BoxTitle>\n            <Box>\n                <form onSubmit={onSubmit} noValidate autoComplete=\"off\">\n                    <MuiGrid container spacing={3}>\n                        <MuiGrid item xs={12} md={3} lg={3}>\n                            <Select\n                                value={creditParams.calculatingType}\n                                onChange={({ target }) => onChange('calculatingType', target.value)}\n                                label=\"Способ расчета\"\n                            >\n                                <MuiMenuItem value={CALCULATING_TYPE.BY_PAYMENT}>По сумме платежа</MuiMenuItem>\n                                <MuiMenuItem value={CALCULATING_TYPE.BY_PERIOD}>По сроку кредита</MuiMenuItem>\n                            </Select>\n                        </MuiGrid>\n                        <MuiGrid item xs={12} md={3} lg={3}>\n                            <Input\n                                value={creditParams.creditSum}\n                                onChange={({ target }) => onChange('creditSum', parseFloat(target.value))}\n                                label=\"Сумма кредита\"\n                            />\n                        </MuiGrid>\n                        <MuiGrid item xs={12} md={3} lg={3}>\n                            <Input\n                                value={creditParams.creditPercent}\n                                onChange={({ target }) => onChange('creditPercent', parseFloat(target.value))}\n                                label=\"Процентная ставка\"\n                            />\n                        </MuiGrid>\n                        <MuiGrid item xs={12} md={3} lg={3}>\n                            {creditParams.calculatingType === CALCULATING_TYPE.BY_PAYMENT && (\n                                <Input\n                                    value={creditParams.paymentPerMonth}\n                                    onChange={({ target }) => onChange('paymentPerMonth', parseFloat(target.value))}\n                                    label=\"Ежемесячный платеж\"\n                                />\n                            )}\n                            {creditParams.calculatingType === CALCULATING_TYPE.BY_PERIOD && (\n                                <Input\n                                    value={creditParams.creditPeriod}\n                                    onChange={({ target }) => onChange('creditPeriod', parseFloat(target.value))}\n                                    label=\"Срок кредита, мес.\"\n                                />\n                            )}\n                        </MuiGrid>\n                    </MuiGrid>\n                    <Prepayments />\n                    <MuiGrid container justify=\"flex-end\" spacing={3}>\n                        <MuiGrid item xs={12} md={3} lg={3}>\n                            <MuiButton variant=\"contained\" color=\"primary\" fullWidth type=\"submit\" onClick={onSubmit}>\n                                Рассчитать\n                            </MuiButton>\n                        </MuiGrid>\n                    </MuiGrid>\n                </form>\n            </Box>\n        </>\n    );\n}\n","import React from 'react';\nimport classnames from 'classnames';\nimport MuiTypography from '@material-ui/core/Typography';\nimport MuiDivider from '@material-ui/core/Divider';\n\nimport 'src/components/common/Summary/Summary.css';\nimport Box from 'src/components/common/Box';\n\nexport default function Summary({ icon, iconType, title, value, units, footer }) {\n    return (\n        <Box>\n            <div\n                className={classnames('summary__icon', {\n                    [`summary__icon_${iconType}`]: iconType,\n                })}\n            >\n                {icon}\n            </div>\n            <div className=\"summary__content\">\n                <div className=\"summary__title\">\n                    <MuiTypography component=\"h3\" variant=\"body1\" color=\"textSecondary\">\n                        {title}\n                    </MuiTypography>\n                </div>\n                <MuiTypography component=\"p\" variant=\"h3\">\n                    {value}\n                    <MuiTypography component=\"span\" variant=\"h5\">\n                        {' '}\n                        {units}\n                    </MuiTypography>\n                </MuiTypography>\n            </div>\n            <MuiDivider />\n            <div className=\"summary__footer\">\n                <MuiTypography component=\"p\" color=\"textSecondary\" variant=\"body2\">\n                    {footer}\n                </MuiTypography>\n            </div>\n        </Box>\n    );\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport MuiGrid from '@material-ui/core/Grid';\nimport MuiEventAvailableIcon from '@material-ui/icons/EventAvailable';\nimport MuiAttachMoneyIcon from '@material-ui/icons/AttachMoney';\nimport MuiAccountBalanceWalletIcon from '@material-ui/icons/AccountBalanceWallet';\n\nimport Summary from 'src/components/common/Summary';\nimport { formatDate } from 'src/utils/date';\nimport { priceFormat } from 'src/utils/common';\n\nexport default function CreditSummary() {\n    const {\n        creditData: { summary },\n    } = useSelector((state) => state);\n    return (\n        <MuiGrid container spacing={4}>\n            <MuiGrid item xs={12} md={4} lg={4}>\n                <Summary\n                    title=\"Срок кредита\"\n                    icon={<MuiEventAvailableIcon />}\n                    value={summary.monthCount}\n                    units=\"мес.\"\n                    footer={`Последний платеж – ${formatDate(summary.lastPaymentDate)}`}\n                    iconType=\"success\"\n                />\n            </MuiGrid>\n            <MuiGrid item xs={12} md={4} lg={4}>\n                <Summary\n                    title=\"Минимальный платеж\"\n                    icon={<MuiAccountBalanceWalletIcon />}\n                    value={priceFormat(summary.payment)}\n                    units=\"руб.\"\n                    footer={`${summary.onPercentage}% от этой суммы уйдет на погашение процентов в первый месяц`}\n                    iconType=\"info\"\n                />\n            </MuiGrid>\n            <MuiGrid item xs={12} md={4} lg={4}>\n                <Summary\n                    title=\"Переплата\"\n                    icon={<MuiAttachMoneyIcon />}\n                    value={`${priceFormat(summary.overpayment)}`}\n                    units=\"руб.\"\n                    footer={`Это ${summary.overpaymentPercent}% от суммы кредита`}\n                    iconType=\"warning\"\n                />\n            </MuiGrid>\n        </MuiGrid>\n    );\n}\n","import React, { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport MuiTable from '@material-ui/core/Table';\nimport MuiTableBody from '@material-ui/core/TableBody';\nimport MuiTableCell from '@material-ui/core/TableCell';\nimport MuiTableHead from '@material-ui/core/TableHead';\nimport MuiTableRow from '@material-ui/core/TableRow';\n\nimport 'src/components/CreditDataTable/CreditDataTable.css';\nimport Box from 'src/components/common/Box';\nimport BoxTitle from 'src/components/common/Box/Title';\nimport { priceFormat } from 'src/utils/common';\nimport { formatDate } from 'src/utils/date';\n\nexport default function CreditDataTable() {\n    const { creditData } = useSelector((state) => state);\n\n    return useMemo(\n        () => (\n            <Box>\n                <BoxTitle>График платежей</BoxTitle>\n                <MuiTable size=\"small\" stickyHeader>\n                    <MuiTableHead>\n                        <MuiTableRow>\n                            <MuiTableCell>№</MuiTableCell>\n                            <MuiTableCell>Дата</MuiTableCell>\n                            <MuiTableCell align=\"right\">Платеж</MuiTableCell>\n                            <MuiTableCell align=\"right\">По процентам</MuiTableCell>\n                            <MuiTableCell align=\"right\">По кредиту</MuiTableCell>\n                            <MuiTableCell align=\"right\">Переплата</MuiTableCell>\n                            <MuiTableCell align=\"right\">Остаток долга</MuiTableCell>\n                        </MuiTableRow>\n                    </MuiTableHead>\n                    <MuiTableBody>\n                        {creditData.table.map((row) => (\n                            <MuiTableRow key={row.number}>\n                                <MuiTableCell>{row.number}.</MuiTableCell>\n                                <MuiTableCell>\n                                    {formatDate(row.date)}\n                                    &nbsp;\n                                    {row.isPrepayment && '*'}\n                                </MuiTableCell>\n                                <MuiTableCell align=\"right\">{priceFormat(row.payment)}</MuiTableCell>\n                                <MuiTableCell align=\"right\">{priceFormat(row.paymentByPercents)}</MuiTableCell>\n                                <MuiTableCell align=\"right\">{priceFormat(row.paymentByCredit)}</MuiTableCell>\n                                <MuiTableCell align=\"right\">{priceFormat(row.overpayment)}</MuiTableCell>\n                                <MuiTableCell align=\"right\">{priceFormat(row.creditLeft)}</MuiTableCell>\n                            </MuiTableRow>\n                        ))}\n                    </MuiTableBody>\n                </MuiTable>\n            </Box>\n        ),\n        [creditData]\n    );\n}\n","const SET_DEPOSIT_PARAM = 'SET_DEPOSIT_PARAM';\n\nexport function setDepositParam(name, value) {\n    return {\n        type: SET_DEPOSIT_PARAM,\n        name,\n        value,\n    };\n}\n\nexport const initialDepositParams = {\n    initialSum: 0,\n    percentage: 5,\n    payment: 50000,\n    period: 12,\n};\n\nexport default function depositParams(state = initialDepositParams, action) {\n    switch (action.type) {\n        case SET_DEPOSIT_PARAM:\n            return {\n                ...state,\n                [action.name]: action.value,\n            };\n        default:\n            return state;\n    }\n}\n","import { calculateMoneyByPercentage } from 'src/calc/common';\n\nimport { normalizeDate, getNextMonth } from 'src/utils/date';\n\nconst startDate = normalizeDate(new Date());\n\nclass Deposit {\n    constructor({ initialSum, percentage, payment, period }) {\n        this.sum = initialSum;\n        this.percentage = percentage / 100;\n        this.payment = payment;\n        this.period = period;\n\n        this.depositeDate = [];\n    }\n\n    calculateSomePayment() {\n        const previousMonth = this.depositeDate[this.depositeDate.length - 1];\n        const currentMonth = {\n            number: previousMonth.number + 1,\n            date: getNextMonth(previousMonth.date),\n            payment: this.payment,\n        };\n\n        const income = calculateMoneyByPercentage(\n            previousMonth.sum,\n            this.percentage,\n            previousMonth.date,\n            currentMonth.date\n        );\n\n        currentMonth.income = income;\n        currentMonth.totalIncome = previousMonth.totalIncome + income;\n        currentMonth.sum = previousMonth.sum + income + this.payment;\n\n        this.depositeDate.push(currentMonth);\n    }\n\n    calculate() {\n        this.depositeDate[0] = {\n            number: 0,\n            date: startDate,\n            sum: this.sum,\n            income: 0,\n            totalIncome: 0,\n            payment: 0,\n        };\n\n        while (this.period) {\n            this.calculateSomePayment();\n            this.period -= 1;\n        }\n\n        const lastPayment = this.depositeDate[this.depositeDate.length - 1];\n\n        return {\n            table: this.depositeDate,\n            summary: {\n                period: this.depositeDate.length - 1,\n                endDate: lastPayment.date,\n                totalIncome: lastPayment.totalIncome,\n                totalSum: lastPayment.sum,\n            },\n        };\n    }\n}\n\nexport default function calculateDeposit(params) {\n    const deposit = new Deposit(params);\n    return deposit.calculate();\n}\n","import calculateDeposit from 'src/calc/deposit';\nimport { initialDepositParams } from 'src/reducers/depositParams';\n\nconst SET_DEPOSIT_DATA = 'SET_DEPOSIT_DATA';\n\nexport function setDepositData(data) {\n    return {\n        type: SET_DEPOSIT_DATA,\n        data,\n    };\n}\n\nconst initialState = calculateDeposit(initialDepositParams);\n\nexport default function depositData(state = initialState, action) {\n    switch (action.type) {\n        case SET_DEPOSIT_DATA:\n            return action.data;\n        default:\n            return state;\n    }\n}\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport MuiButton from '@material-ui/core/Button';\nimport MuiGrid from '@material-ui/core/Grid';\n\nimport Box from 'src/components/common/Box';\nimport BoxTitle from 'src/components/common/Box/Title';\nimport Input from 'src/components/common/Input';\nimport { setDepositParam } from 'src/reducers/depositParams';\nimport { setDepositData } from 'src/reducers/depositData';\nimport calculateDeposit from 'src/calc/deposit';\n\nexport default function CreditForm() {\n    const { depositParams } = useSelector((state) => state);\n    const dispatch = useDispatch();\n\n    const onChange = (name, value) => {\n        dispatch(setDepositParam(name, value));\n    };\n\n    const onSubmit = (event) => {\n        event.preventDefault();\n        const depositData = calculateDeposit(depositParams);\n        dispatch(setDepositData(depositData));\n    };\n\n    return (\n        <>\n            <BoxTitle>Параметры вклада</BoxTitle>\n            <Box>\n                <form onSubmit={onSubmit} noValidate autoComplete=\"off\">\n                    <MuiGrid container spacing={3}>\n                        <MuiGrid item xs={12} md={3} lg={3}>\n                            <Input\n                                value={depositParams.initialSum}\n                                onChange={({ target }) => onChange('initialSum', parseFloat(target.value))}\n                                label=\"Первоначальный вклад\"\n                            />\n                        </MuiGrid>\n                        <MuiGrid item xs={12} md={3} lg={3}>\n                            <Input\n                                value={depositParams.percentage}\n                                onChange={({ target }) => onChange('percentage', parseFloat(target.value))}\n                                label=\"Процентная ставка\"\n                            />\n                        </MuiGrid>\n                        <MuiGrid item xs={12} md={3} lg={3}>\n                            <Input\n                                value={depositParams.payment}\n                                onChange={({ target }) => onChange('payment', parseFloat(target.value))}\n                                label=\"Ежемесячное пополнение\"\n                            />\n                        </MuiGrid>\n                        <MuiGrid item xs={12} md={3} lg={3}>\n                            <Input\n                                value={depositParams.period}\n                                onChange={({ target }) => onChange('period', parseFloat(target.value))}\n                                label=\"Срок вклада, мес.\"\n                            />\n                        </MuiGrid>\n                    </MuiGrid>\n                    <MuiGrid container justify=\"flex-end\" spacing={3}>\n                        <MuiGrid item xs={12} md={3} lg={3}>\n                            <MuiButton variant=\"contained\" color=\"primary\" fullWidth type=\"submit\" onClick={onSubmit}>\n                                Рассчитать\n                            </MuiButton>\n                        </MuiGrid>\n                    </MuiGrid>\n                </form>\n            </Box>\n        </>\n    );\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport MuiGrid from '@material-ui/core/Grid';\nimport MuiEventAvailableIcon from '@material-ui/icons/EventAvailable';\nimport MuiAttachMoneyIcon from '@material-ui/icons/AttachMoney';\nimport MuiAccountBalanceWalletIcon from '@material-ui/icons/AccountBalanceWallet';\n\nimport Summary from 'src/components/common/Summary';\nimport { formatDate } from 'src/utils/date';\nimport { priceFormat } from 'src/utils/common';\n\nexport default function DepositSummary() {\n    const {\n        depositData: { summary },\n    } = useSelector((state) => state);\n\n    return (\n        <MuiGrid container spacing={4}>\n            <MuiGrid item xs={12} md={4} lg={4}>\n                <Summary\n                    title=\"Срок кредита\"\n                    icon={<MuiEventAvailableIcon />}\n                    value={summary.period}\n                    units=\"мес.\"\n                    footer={`Дата выплаты вклада – ${formatDate(summary.endDate)}`}\n                    iconType=\"success\"\n                />\n            </MuiGrid>\n            <MuiGrid item xs={12} md={4} lg={4}>\n                <Summary\n                    title=\"Доход от процентов\"\n                    icon={<MuiAccountBalanceWalletIcon />}\n                    value={priceFormat(summary.totalIncome)}\n                    units=\"руб.\"\n                    iconType=\"info\"\n                />\n            </MuiGrid>\n            <MuiGrid item xs={12} md={4} lg={4}>\n                <Summary\n                    title=\"Итоговая сумма вклада\"\n                    icon={<MuiAttachMoneyIcon />}\n                    value={priceFormat(summary.totalSum)}\n                    units=\"руб.\"\n                    iconType=\"warning\"\n                />\n            </MuiGrid>\n        </MuiGrid>\n    );\n}\n","import React, { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport MuiTable from '@material-ui/core/Table';\nimport MuiTableBody from '@material-ui/core/TableBody';\nimport MuiTableCell from '@material-ui/core/TableCell';\nimport MuiTableHead from '@material-ui/core/TableHead';\nimport MuiTableRow from '@material-ui/core/TableRow';\n\nimport Box from 'src/components/common/Box';\nimport BoxTitle from 'src/components/common/Box/Title';\nimport { priceFormat } from 'src/utils/common';\nimport { formatDate } from 'src/utils/date';\n\nexport default function DepositDataTable() {\n    const { depositData } = useSelector((state) => state);\n\n    return useMemo(\n        () => (\n            <>\n                <BoxTitle>Вклад по месяцам</BoxTitle>\n                <Box>\n                    <MuiTable size=\"small\" stickyHeader>\n                        <MuiTableHead>\n                            <MuiTableRow>\n                                <MuiTableCell>№</MuiTableCell>\n                                <MuiTableCell>Дата</MuiTableCell>\n                                <MuiTableCell align=\"right\">Пополнение</MuiTableCell>\n                                <MuiTableCell align=\"right\">Доход по процентам</MuiTableCell>\n                                <MuiTableCell align=\"right\">Сумма вклада</MuiTableCell>\n                            </MuiTableRow>\n                        </MuiTableHead>\n                        <MuiTableBody>\n                            {depositData.table.map((row, index) => (\n                                <MuiTableRow key={index}>\n                                    <MuiTableCell />\n                                    <MuiTableCell>{formatDate(row.date)}</MuiTableCell>\n                                    <MuiTableCell align=\"right\">{priceFormat(row.payment)}</MuiTableCell>\n                                    <MuiTableCell align=\"right\">{priceFormat(row.income)}</MuiTableCell>\n                                    <MuiTableCell align=\"right\">{priceFormat(row.sum)}</MuiTableCell>\n                                </MuiTableRow>\n                            ))}\n                        </MuiTableBody>\n                    </MuiTable>\n                </Box>\n            </>\n        ),\n        [depositData]\n    );\n}\n","import { withStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\n\nconst LargeInput = withStyles(() => ({ input: { fontSize: 24 } }))(Input);\n\nexport default LargeInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport MuiInputLabel from '@material-ui/core/InputLabel';\nimport MuiFormControl from '@material-ui/core/FormControl';\n\nimport LargeInput from 'src/components/common/Input/LargeInput';\nimport MuiInputAdornment from '@material-ui/core/InputAdornment';\nimport MuiIconButton from '@material-ui/core/IconButton';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\n\nconst NumberInput = ({\n    label,\n    onChange,\n    units,\n    step,\n    shiftStep,\n    value,\n    minValue,\n    maxValue,\n    valueProcessor,\n    ...props\n}) => {\n    const parsedValue = valueProcessor(parseFloat(value));\n    const onInputChange = ({ target: { value } }) => {\n        const floatValue = parseFloat(value);\n        if (!isNaN(floatValue)) {\n            onChange(floatValue);\n        }\n    };\n    const onDecrease = ({ shiftKey }) => {\n        if (!isNaN(parsedValue)) {\n            onChange(Math.max(parsedValue - (shiftKey ? shiftStep : step), minValue));\n        }\n    };\n    const onIncrease = ({ shiftKey }) => {\n        if (!isNaN(parsedValue)) {\n            onChange(Math.min(parsedValue + (shiftKey ? shiftStep : step), maxValue));\n        }\n    };\n    return (\n        <MuiFormControl fullWidth>\n            <MuiInputLabel>{label}</MuiInputLabel>\n            <LargeInput\n                {...props}\n                value={valueProcessor(value)}\n                onChange={onInputChange}\n                startAdornment={\n                    <MuiInputAdornment position=\"start\">\n                        <MuiIconButton\n                            style={{ marginLeft: -15 }}\n                            aria-label={`Уменьшить`}\n                            onClick={onDecrease}\n                            disabled={isNaN(parsedValue)}\n                        >\n                            <RemoveIcon />\n                        </MuiIconButton>\n                    </MuiInputAdornment>\n                }\n                endAdornment={\n                    <MuiInputAdornment position=\"end\">\n                        <MuiIconButton\n                            style={{ marginRight: -15 }}\n                            aria-label={`Увеличить`}\n                            onClick={onIncrease}\n                            disabled={isNaN(parsedValue)}\n                        >\n                            <AddIcon />\n                        </MuiIconButton>\n                    </MuiInputAdornment>\n                }\n            />\n        </MuiFormControl>\n    );\n};\n\nNumberInput.defaultProps = {\n    valueProcessor: (value) => value,\n    minValue: 0,\n    maxValue: Infinity,\n};\n\nNumberInput.propTypes = {\n    label: PropTypes.string,\n    value: PropTypes.string,\n    minValue: PropTypes.number,\n    maxValue: PropTypes.number,\n    step: PropTypes.number,\n    onChange: PropTypes.func,\n};\n\nexport default NumberInput;\n","import { addItemIfNotExists, removeItem, removeProperty } from 'src/utils/common';\nimport calculatePayments from 'src/calc/credit';\n\nconst SAVE_CREDIT = 'SAVE_CREDIT';\nconst LOCK_FIELD = 'LOCK_FIELD';\nconst ADD_CREDIT = 'ADD_CREDIT';\nconst REMOVE_CREDIT = 'REMOVE_CREDIT';\nconst SET_ACTIVE = 'SET_ACTIVE';\n\nexport function addCredit(payload) {\n    return {\n        type: SAVE_CREDIT,\n        payload,\n    };\n}\n\nexport function saveCredit(payload) {\n    return {\n        type: SAVE_CREDIT,\n        payload,\n    };\n}\n\nexport function lockField({ name, field, value }) {\n    return {\n        type: LOCK_FIELD,\n        payload: { name, field, value },\n    };\n}\n\nexport function setActive({ name }) {\n    return {\n        type: SET_ACTIVE,\n        payload: { name },\n    };\n}\n\nexport const initialCreditParams = {\n    creditSum: 5000000,\n    creditPercent: 9.5,\n    paymentPerMonth: 50000,\n    months: null,\n    overpayment: null,\n    locked: {\n        creditSum: true,\n        creditPercent: true,\n        paymentPerMonth: true,\n        months: false,\n        overpayment: false,\n    },\n};\n\nconst DEFAULT_NAME = 'default';\n\nexport const initialCredits = {\n    names: [DEFAULT_NAME],\n    active: DEFAULT_NAME,\n    creditByName: {\n        default: { ...initialCreditParams, name: DEFAULT_NAME },\n    },\n    scheduleByName: {\n        default: calculatePayments(initialCreditParams),\n    },\n};\n\nexport default function credits(state = initialCredits, { type, payload }) {\n    switch (type) {\n        case ADD_CREDIT:\n        case SAVE_CREDIT: {\n            const creditParams = { ...payload };\n            return {\n                ...state,\n                names: addItemIfNotExists(state.names, payload.name),\n                creditByName: { ...state.creditByName, [payload.name]: creditParams },\n                scheduleByName: {\n                    ...state.scheduleByName,\n                    [payload.name]: calculatePayments(creditParams),\n                },\n            };\n        }\n        case REMOVE_CREDIT:\n            return {\n                ...state,\n                names: removeItem(state.names, payload.name),\n                creditByName: removeProperty(state.creditByName, payload.name),\n                scheduleByName: removeProperty(state.scheduleByName, payload.name),\n                active: state.active === payload.name ? null : state.active,\n            };\n        case LOCK_FIELD:\n            return {\n                ...state,\n                creditByName: {\n                    ...state.creditByName,\n                    [payload.name]: {\n                        ...state.creditByName[payload.name],\n                        locked: { ...state.creditByName[payload.name].locked, [payload.field]: payload.value },\n                    },\n                },\n            };\n        case SET_ACTIVE:\n            return {\n                ...state,\n                active: payload.name,\n            };\n        default:\n            return state;\n    }\n}\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport MuiBox from '@material-ui/core/Box';\nimport MuiGrid from '@material-ui/core/Grid';\nimport MuiButton from '@material-ui/core/Button';\nimport MuiTypography from '@material-ui/core/Typography';\n\nimport Box from 'src/components/common/Box';\nimport NumberInput from 'src/components/common/Input/NumberInput';\nimport { saveCredit, setActive } from 'src/reducers/credits';\nimport { setCreditData } from 'src/reducers/creditData';\nimport { numConversion, priceFormat } from 'src/utils/common';\n\nexport default function CreditForm({ name }) {\n    const { creditByName, scheduleByName, active } = useSelector(({ credits }) => credits);\n    const creditParams = creditByName[name];\n    const creditSchedule = scheduleByName[name];\n    const isActive = active === creditParams.name;\n    const dispatch = useDispatch();\n\n    const onChange = (field, value) => {\n        if (creditParams.hasOwnProperty(field) && !isNaN(value)) {\n            dispatch(\n                saveCredit({\n                    ...creditParams,\n                    name,\n                    [field]: value,\n                    locked: {\n                        ...creditParams.locked,\n                        [field]: true,\n                    },\n                })\n            );\n        }\n    };\n\n    const onSubmit = (event) => {\n        event.preventDefault();\n        dispatch(setActive({ name: creditParams.name }));\n        dispatch(setCreditData(scheduleByName[creditParams.name]));\n    };\n\n    return (\n        <Box elevation={isActive ? 10 : 2}>\n            <form onSubmit={onSubmit} noValidate autoComplete=\"off\">\n                <MuiGrid container spacing={3} direction=\"column\">\n                    <MuiGrid item xs={12}>\n                        <NumberInput\n                            value={creditParams.creditPercent}\n                            onChange={(value) => onChange('creditPercent', value)}\n                            label=\"Процентная ставка\"\n                            units=\"%\"\n                            step={0.5}\n                            shiftStep={0.1}\n                            minValue={0}\n                            maxValue={100}\n                            valueProcessor={(value) => Math.round(value * 10) / 10}\n                        />\n                    </MuiGrid>\n                    <MuiGrid item xs={12}>\n                        <NumberInput\n                            value={creditParams.creditSum}\n                            onChange={(value) => onChange('creditSum', value)}\n                            label=\"Сумма кредита\"\n                            units=\"₽\"\n                            step={500000}\n                            shiftStep={100000}\n                            minValue={50000}\n                            maxValue={100000000}\n                        />\n                    </MuiGrid>\n                    <MuiGrid item xs={12}>\n                        <NumberInput\n                            value={creditParams.paymentPerMonth}\n                            onChange={(value) => onChange('paymentPerMonth', value)}\n                            label=\"Платёж в месяц\"\n                            units=\"₽\"\n                            step={5000}\n                            shiftStep={1000}\n                            minValue={1000}\n                            maxValue={100000000}\n                        />\n                    </MuiGrid>\n                    <MuiGrid item xs={12}>\n                        <MuiTypography component=\"h3\" variant=\"subtitle1\" color=\"textSecondary\">\n                            Срок кредита\n                        </MuiTypography>\n                        <MuiTypography component=\"span\" variant=\"h4\">\n                            {creditSchedule.summary.monthCount}&thinsp;\n                        </MuiTypography>\n                        <MuiTypography component=\"span\" variant=\"h5\">\n                            {numConversion(creditSchedule.summary.monthCount, ['месяц', 'месяца', 'месяцев'])}\n                        </MuiTypography>\n                    </MuiGrid>\n                    <MuiGrid item xs={12}>\n                        <MuiBox mt={-2}>\n                            <MuiTypography component=\"h3\" variant=\"subtitle1\" color=\"textSecondary\">\n                                Переплата\n                            </MuiTypography>\n                            <MuiTypography component=\"span\" variant=\"h4\">\n                                {priceFormat(creditSchedule.summary.overpayment)}&thinsp;\n                            </MuiTypography>\n                            <MuiTypography component=\"span\" variant=\"h5\">\n                                ₽\n                            </MuiTypography>\n                        </MuiBox>\n                    </MuiGrid>\n                    <MuiGrid item xs={12}>\n                        <MuiButton\n                            size=\"large\"\n                            variant=\"contained\"\n                            color={isActive ? 'primary' : 'default'}\n                            fullWidth\n                            type=\"submit\"\n                        >\n                            Рассчитать\n                        </MuiButton>\n                    </MuiGrid>\n                </MuiGrid>\n            </form>\n        </Box>\n    );\n}\n\nCreditForm.propTypes = {\n    name: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport MuiGrid from '@material-ui/core/Grid';\nimport MuiBox from '@material-ui/core/Box';\nimport MuiIconButton from '@material-ui/core/IconButton';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\n\nimport BoxTitle from 'src/components/common/Box/Title';\nimport CreditForm from 'src/components/MultiCreditForm/components/CreditForm';\nimport { addCredit } from 'src/reducers/credits';\n\nlet creditNameCounter = 1;\n\nexport default function MultiCreditForm() {\n    const { names, creditByName } = useSelector((state) => state.credits);\n    const dispatch = useDispatch();\n\n    const addOneMoreCredit = () => {\n        dispatch(addCredit({ ...creditByName[names[names.length - 1]], name: `credit${creditNameCounter}` }));\n        creditNameCounter += 1;\n    };\n\n    return (\n        <MuiBox mb={2}>\n            <BoxTitle>Параметры кредита</BoxTitle>\n            <MuiGrid container xs={12} spacing={3}>\n                {names.map((name) => (\n                    <MuiGrid key={name} item xs={12} md={3} lg={3}>\n                        <CreditForm name={name} />\n                    </MuiGrid>\n                ))}\n                <MuiGrid key={name} item xs={12} md={3} lg={3}>\n                    <MuiIconButton aria-label={`Добавить кредит`} onClick={addOneMoreCredit}>\n                        <AddCircleIcon fontSize=\"large\" style={{ fontSize: 50 }} color=\"primary\" />\n                    </MuiIconButton>\n                </MuiGrid>\n            </MuiGrid>\n        </MuiBox>\n    );\n}\n","import React from 'react';\nimport CreditCardIcon from '@material-ui/icons/CreditCard';\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\nimport CompareArrowsIcon from '@material-ui/icons/CompareArrows';\nimport BookmarksIcon from '@material-ui/icons/Bookmarks';\n\nimport MainPage from 'src/pages/Main';\nimport DepositPage from 'src/pages/Deposit';\nimport SavedCreditsPage from 'src/pages/SavedCredits';\nimport CompareCreditsPage from 'src/pages/CompareCredits';\n\nconst routes = [\n    {\n        path: '/',\n        component: MainPage(),\n        title: 'Кредитный калькулятор',\n        menuIcon: <CreditCardIcon />,\n    },\n    {\n        path: '/deposit',\n        component: DepositPage(),\n        title: 'Калькулятор вклада',\n        menuIcon: <MonetizationOnIcon />,\n    },\n    {\n        path: '/compare-credits',\n        component: CompareCreditsPage(),\n        title: 'Сравнение кредитов',\n        menuIcon: <CompareArrowsIcon />,\n    },\n    {\n        path: '/saved-credits',\n        component: SavedCreditsPage(),\n        title: 'Сохраненные кредиты',\n        menuIcon: <BookmarksIcon />,\n    },\n];\n\nexport default routes;\n","import React from 'react';\nimport MuiGrid from '@material-ui/core/Grid';\n\nimport CreditForm from 'src/components/CreditForm';\nimport CreditSummary from 'src/components/CreditSummary';\nimport CreditDataTable from 'src/components/CreditDataTable';\n\nexport default function MainPage() {\n    return (\n        <>\n            <MuiGrid container spacing={4}>\n                <MuiGrid item xs={12} md={12} lg={12}>\n                    <CreditForm />\n                </MuiGrid>\n            </MuiGrid>\n            <CreditSummary />\n            <MuiGrid container spacing={4}>\n                <MuiGrid item xs={12}>\n                    <CreditDataTable />\n                </MuiGrid>\n            </MuiGrid>\n        </>\n    );\n}\n","import React from 'react';\nimport MuiGrid from '@material-ui/core/Grid';\n\nimport DepositForm from 'src/components/DepositForm';\nimport DepositSummary from 'src/components/DepositSummary';\nimport DepositDataTable from 'src/components/DepositDataTable';\n\nexport default function DepositPage() {\n    return (\n        <>\n            <MuiGrid container spacing={4}>\n                <MuiGrid item xs={12} md={12} lg={12}>\n                    <DepositForm />\n                </MuiGrid>\n            </MuiGrid>\n            <DepositSummary />\n            <MuiGrid container spacing={4}>\n                <MuiGrid item xs={12} md={12} lg={12}>\n                    <DepositDataTable />\n                </MuiGrid>\n            </MuiGrid>\n        </>\n    );\n}\n","import React from 'react';\nimport MuiGrid from '@material-ui/core/Grid';\n\nimport MultiCreditForm from 'src/components/MultiCreditForm';\nimport CreditSummary from 'src/components/CreditSummary';\nimport CreditDataTable from 'src/components/CreditDataTable';\n\nexport default function MainPage() {\n    return (\n        <>\n            <MuiGrid container spacing={4}>\n                <MuiGrid item xs={12} md={12} lg={12}>\n                    <MultiCreditForm />\n                </MuiGrid>\n            </MuiGrid>\n            <CreditSummary />\n            <MuiGrid container spacing={4}>\n                <MuiGrid item xs={12}>\n                    <CreditDataTable />\n                </MuiGrid>\n            </MuiGrid>\n        </>\n    );\n}\n","import React from 'react';\n\nexport default function SavedCreditsPage() {\n    return <div>SavedCreditsPage</div>;\n}\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport MuiBox from '@material-ui/core/Box';\nimport MuiToolbar from '@material-ui/core/Toolbar';\nimport MuiTypography from '@material-ui/core/Typography';\nimport MuiAppBar from '@material-ui/core/AppBar/AppBar';\n\nimport routes from 'src/routes';\n\nexport default function Header() {\n    return (\n        <MuiBox mb={4}>\n            <MuiAppBar position=\"static\">\n                <MuiToolbar>\n                    <MuiTypography component=\"h1\" variant=\"h5\" color=\"inherit\">\n                        <Switch>\n                            {routes.map((route, index) => (\n                                <Route key={index} path={route.path} exact>\n                                    {route.title}\n                                </Route>\n                            ))}\n                        </Switch>\n                    </MuiTypography>\n                </MuiToolbar>\n            </MuiAppBar>\n        </MuiBox>\n    );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport MuiDivider from '@material-ui/core/Divider';\nimport MuiList from '@material-ui/core/List';\nimport MuiDrawer from '@material-ui/core/Drawer/Drawer';\nimport MuiListItem from '@material-ui/core/ListItem';\nimport MuiListItemIcon from '@material-ui/core/ListItemIcon/ListItemIcon';\nimport MuiListItemText from '@material-ui/core/ListItemText/ListItemText';\n\nimport 'src/components/Menu/Menu.css';\nimport routes from 'src/routes';\n\nexport default function Menu() {\n    return (\n        <MuiDrawer variant=\"permanent\" className=\"menu\" open={true}>\n            <div className=\"menu__toolbar\" />\n            <MuiDivider />\n            <MuiList>\n                {routes.map((route, index) => (\n                    <MuiListItem key={index} button component={Link} to={route.path}>\n                        <MuiListItemIcon>{route.menuIcon}</MuiListItemIcon>\n                        <MuiListItemText primary={route.title} />\n                    </MuiListItem>\n                ))}\n            </MuiList>\n        </MuiDrawer>\n    );\n}\n","import React from 'react';\nimport MuiTypography from '@material-ui/core/Typography';\nimport MuiBox from '@material-ui/core/Box';\n\nexport default function Footer() {\n    return (\n        <MuiBox mt={4} mb={4}>\n            <MuiTypography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n                {'Copyright © '}\n                Calculator {new Date().getFullYear()}\n            </MuiTypography>\n        </MuiBox>\n    );\n}\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport 'src/App.css';\n\nimport MuiCssBaseline from '@material-ui/core/CssBaseline';\nimport MuiContainer from '@material-ui/core/Container';\n\nimport routes from 'src/routes';\nimport Header from 'src/components/Header';\nimport Menu from 'src/components/Menu';\nimport Footer from 'src/components/Footer';\n\nexport default function Dashboard() {\n    return (\n        <Router>\n            <div className=\"app-container\">\n                <MuiCssBaseline />\n                <Menu />\n                <div className=\"app-content\">\n                    <Header />\n                    <main>\n                        <MuiContainer maxWidth=\"lg\">\n                            <Switch>\n                                {routes.map((route, index) => (\n                                    <Route key={index} path={route.path} exact>\n                                        {route.component}\n                                    </Route>\n                                ))}\n                            </Switch>\n                            <Footer />\n                        </MuiContainer>\n                    </main>\n                </div>\n            </div>\n        </Router>\n    );\n}\n","import 'date-fns';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport 'src/index.css';\nimport App from 'src/App';\n\nimport configureStore from 'src/store';\n\nconst store = configureStore();\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <App />\n            </MuiPickersUtilsProvider>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n","import { createStore, combineReducers } from 'redux';\nimport credits from 'src/reducers/credits';\nimport creditParams from 'src/reducers/creditParams';\nimport creditData from 'src/reducers/creditData';\nimport depositParams from 'src/reducers/depositParams';\nimport depositData from 'src/reducers/depositData';\n\nconst configureStore = () => {\n    return createStore(\n        combineReducers({\n            credits,\n            creditParams,\n            creditData,\n            depositParams,\n            depositData,\n        }),\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    );\n};\n\nexport default configureStore;\n"],"sourceRoot":""}