{"version":3,"sources":["components/common/Box/index.js","components/common/Box/Title.js","components/common/Input/index.js","components/common/Select/index.js","reducers/creditParams.js","utils/date.js","utils/common.js","utils/calculatePayments.js","reducers/credits.js","reducers/paymentSchedule.js","components/CreditForm/index.js","components/common/Summary/index.js","components/SummaryMonthCount/index.js","components/SummaryPayment/index.js","components/SummaryOverpayment/index.js","components/PaymentsChart/index.js","components/OverpaymentChart/index.js","components/PaymentScheduleTable/index.js","components/common/Input/LargeInput.js","components/common/Input/NumberInput.js","components/MultiCreditForm/components/CreditForm.js","components/MultiCreditForm/index.js","routes.js","pages/Main/index.js","pages/CompareCredits/index.js","pages/SavedCredits/index.js","components/Header/index.js","components/Menu/index.js","components/Footer/index.js","App.js","index.js","store.js"],"names":["Box","children","props","Paper","className","Title","component","variant","color","paragraph","Input","TextField","size","fullWidth","Select","otherProps","select","CALCULATING_TYPE","initialCreditParams","calculatingType","creditSum","creditPercent","paymentPerMonth","creditPeriod","creditParams","state","action","type","params","formatDate","date","splittedDate","toISOString","substr","split","getNextMonth","newDate","Date","day","getDate","setMonth","getMonth","setDate","getDaysCountInYear","year","getDaysCountBetweenDates","start","end","priceFormat","value","Math","round","toLocaleString","replace","roundValue","calculatePercentage","base","removeItem","array","item","filter","current","addItemIfNotExists","includes","concat","removeProperty","object","property","result","startDate","addFormattedFields","row","dateFormatted","paymentRounded","payment","paymentByPercentsRounded","paymentByPercents","paymentByCreditRounded","paymentByCredit","overpaymentRounded","overpayment","creditLeftRounded","creditLeft","calculateOnePayment","previousRow","percentage","currentRow","number","daysCountInPreviousYear","getFullYear","daysCountInCurrentYear","daysCountInPreviousMonth","daysCountInCurrentMonth","calculatePayments","paymentSchedule","creditPercentInMonth","pow","calculateAnnuityPayment","monthCount","length","nextPayment","push","firstPaymentRow","lastRow","dataByMonths","summary","overpaymentPercent","lastPaymentDate","onPercentage","months","locked","initialCredits","names","active","creditByName","default","name","scheduleByName","credits","payload","field","setPaymentSchedule","data","initialState","CreditForm","useSelector","dispatch","useDispatch","onSubmit","values","parseFloat","initialValues","render","handleSubmit","noValidate","autoComplete","container","spacing","xs","md","lg","input","label","justify","Summary","icon","iconType","title","units","footer","classnames","SummaryMonthCount","SummaryPayment","SummaryOverpayment","PaymentsChart","chartData","index","style","width","height","barCategoryGap","dataKey","unit","stackId","fill","OverpaymentChart","PaymentScheduleTable","useMemo","stickyHeader","align","map","key","LargeInput","withStyles","fontSize","NumberInput","onChange","step","shiftStep","minValue","maxValue","valueProcessor","parsedValue","target","floatValue","isNaN","startAdornment","position","marginLeft","aria-label","onClick","shiftKey","max","disabled","endAdornment","marginRight","min","defaultProps","Infinity","propTypes","PropTypes","string","func","creditSchedule","isActive","hasOwnProperty","elevation","event","preventDefault","direction","mt","isRequired","creditNameCounter","MultiCreditForm","mb","routes","path","menuIcon","Header","route","exact","Menu","open","button","Link","to","primary","Footer","Dashboard","maxWidth","store","createStore","combineReducers","window","__REDUX_DEVTOOLS_EXTENSION__","configureStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.19293fcd.chunk.js","sourcesContent":["import React from 'react';\nimport { Paper } from '@material-ui/core';\n\nimport 'src/components/common/Box/Box.css';\n\nexport default function Box({ children, ...props }) {\n    return (\n        <Paper className=\"box\" {...props}>\n            {children}\n        </Paper>\n    );\n}\n","import React from 'react';\nimport MuiTypography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n    return (\n        <MuiTypography component=\"h2\" variant=\"h6\" color=\"primary\" paragraph>\n            {props.children}\n        </MuiTypography>\n    );\n}\n","import React from 'react';\nimport { TextField } from '@material-ui/core';\n\nexport default function Input(props) {\n    return <TextField variant=\"outlined\" size=\"small\" fullWidth {...props} />;\n}\n","import React from 'react';\nimport MuiTextField from '@material-ui/core/TextField';\n\nexport default function Select({ children, ...otherProps }) {\n    return (\n        <MuiTextField select variant=\"outlined\" size=\"small\" fullWidth {...otherProps}>\n            {children}\n        </MuiTextField>\n    );\n}\n","const SET_CREDIT_PARAMS = 'SET_CREDIT_PARAMS';\n\nexport const CALCULATING_TYPE = {\n    BY_PERIOD: 'by_period',\n    BY_PAYMENT: 'by_payment',\n};\n\nexport function setCreditParams(params) {\n    return {\n        type: SET_CREDIT_PARAMS,\n        params,\n    };\n}\n\nexport const initialCreditParams = {\n    calculatingType: CALCULATING_TYPE.BY_PAYMENT,\n    creditSum: 1000000,\n    creditPercent: 9.5,\n    paymentPerMonth: 50000,\n    creditPeriod: 60,\n};\n\nexport default function creditParams(state = initialCreditParams, action) {\n    switch (action.type) {\n        case SET_CREDIT_PARAMS:\n            return { ...action.params };\n        default:\n            return state;\n    }\n}\n","const MILLISECONDS_IN_DAY = 1000 * 60 * 60 * 24;\n\nexport const formatDate = (date) => {\n    const strDate = date.toISOString().substr(0, 10);\n    const splittedDate = strDate.split('-');\n    return `${splittedDate[2]}.${splittedDate[1]}.${splittedDate[0]}`;\n};\n\nexport const getNextMonth = (date) => {\n    const newDate = new Date(date);\n    const day = date.getDate();\n    newDate.setMonth(date.getMonth() + 1);\n    if (newDate.getDate() !== day) {\n        newDate.setDate(0);\n    }\n    return newDate;\n};\n\nexport const getDaysCountInYear = (year) => {\n    if (year % 4 === 0) {\n        return 366;\n    }\n    return 365;\n};\n\nexport const getDaysCountBetweenDates = (start, end) => (end - start) / MILLISECONDS_IN_DAY;\n","export function priceFormat(value) {\n    const roundedValue = Math.round(value);\n    return roundedValue.toLocaleString('ru-RU').replace(/\\s/g, '\\u2009');\n}\n\nexport function roundValue(value) {\n    return Math.round(value);\n}\n\nexport function calculatePercentage(value, base) {\n    return Math.round((value / base) * 10000) / 100;\n}\n\nexport function numConversion(number, words) {\n    const textCases = [2, 0, 1, 1, 1, 2];\n    const textInt = number % 100 > 4 && number % 100 < 20 ? 2 : textCases[Math.min(number % 10, 5)];\n    return words[textInt];\n}\n\nexport function removeItem(array, item) {\n    return array.filter((current) => current !== item);\n}\n\nexport function addItemIfNotExists(array, item) {\n    return array.includes(item) ? array : array.concat(item);\n}\n\nexport function removeProperty(object, property) {\n    const result = { ...object };\n    delete result[property];\n    return result;\n}\n","import { getNextMonth, getDaysCountInYear, getDaysCountBetweenDates, formatDate } from 'src/utils/date';\nimport { roundValue, calculatePercentage } from 'src/utils/common';\nimport { CALCULATING_TYPE } from 'src/reducers/creditParams';\n\nconst MAX_MONTHS_COUNT = 360;\nconst startDate = new Date();\n\nfunction addFormattedFields(row) {\n    row.dateFormatted = formatDate(row.date);\n    row.paymentRounded = roundValue(row.payment);\n    row.paymentByPercentsRounded = roundValue(row.paymentByPercents);\n    row.paymentByCreditRounded = roundValue(row.paymentByCredit);\n    row.overpaymentRounded = roundValue(row.overpayment);\n    row.creditLeftRounded = roundValue(row.creditLeft);\n}\n\nfunction calculateOnePayment(previousRow, payment, percentage) {\n    const currentRow = {\n        number: previousRow.number + 1,\n        date: getNextMonth(previousRow.date),\n        payment,\n    };\n\n    const daysCountInPreviousYear = getDaysCountInYear(previousRow.date.getFullYear());\n    const daysCountInCurrentYear = getDaysCountInYear(currentRow.date.getFullYear());\n    let paymentByPercents = 0;\n    // Случай, когда платежный месяц выпадает на границу високосного и невисокоснова годов\n    // В таком случае стоимость одного дня для платежного месяца рассчитывается по разному\n    if (previousRow.date.getMonth() === 11 && daysCountInPreviousYear !== daysCountInCurrentYear) {\n        const daysCountInPreviousMonth = getDaysCountBetweenDates(\n            previousRow.date,\n            new Date(`${previousRow.date.getFullYear()}-12-31`)\n        );\n        const daysCountInCurrentMonth =\n            getDaysCountBetweenDates(new Date(`${currentRow.date.getFullYear()}-01-01`), currentRow.date) + 1;\n\n        const oneDayCreditCostForPreviousMonth = (previousRow.creditLeft * percentage) / daysCountInPreviousYear;\n        const oneDayCreditCostForCurrentMonth = (previousRow.creditLeft * percentage) / daysCountInCurrentYear;\n\n        paymentByPercents =\n            oneDayCreditCostForPreviousMonth * daysCountInPreviousMonth +\n            oneDayCreditCostForCurrentMonth * daysCountInCurrentMonth;\n    } else {\n        // обычный случай\n        const oneDayCreditCost = (previousRow.creditLeft * percentage) / daysCountInPreviousYear;\n        paymentByPercents = oneDayCreditCost * getDaysCountBetweenDates(previousRow.date, currentRow.date);\n    }\n\n    // последний платежный месяц\n    if (previousRow.creditLeft <= payment) {\n        currentRow.payment = previousRow.creditLeft + paymentByPercents;\n    }\n\n    const paymentByCredit = currentRow.payment - paymentByPercents;\n\n    currentRow.paymentByPercents = paymentByPercents;\n    currentRow.paymentByCredit = paymentByCredit;\n    currentRow.overpayment = previousRow.overpayment + paymentByPercents;\n    currentRow.creditLeft = previousRow.creditLeft - paymentByCredit;\n\n    addFormattedFields(currentRow);\n\n    return currentRow;\n}\n\nexport default function calculatePayments({\n    calculatingType = CALCULATING_TYPE.BY_PAYMENT,\n    creditSum,\n    creditPercent,\n    creditPeriod = 1,\n    paymentPerMonth,\n}) {\n    const paymentSchedule = [];\n    const percentage = creditPercent / 100;\n\n    if (calculatingType === CALCULATING_TYPE.BY_PERIOD) {\n        paymentPerMonth = calculateAnnuityPayment({ creditSum, creditPercent, creditPeriod });\n    }\n\n    paymentSchedule[0] = {\n        number: 0,\n        date: startDate,\n        payment: 0,\n        paymentByPercents: 0,\n        paymentByCredit: 0,\n        overpayment: 0,\n        creditLeft: creditSum,\n    };\n\n    addFormattedFields(paymentSchedule[0]);\n\n    let creditLeft = creditSum;\n    let monthCount = 0;\n\n    while (paymentSchedule.length < MAX_MONTHS_COUNT && creditLeft > 0) {\n        const nextPayment = calculateOnePayment(paymentSchedule[monthCount], paymentPerMonth, percentage);\n        paymentSchedule.push(nextPayment);\n        creditLeft = nextPayment.creditLeft;\n        monthCount += 1;\n    }\n\n    const firstPaymentRow = paymentSchedule[1];\n    const lastRow = paymentSchedule[paymentSchedule.length - 1];\n\n    return {\n        dataByMonths: paymentSchedule,\n        summary: {\n            overpayment: lastRow.overpayment,\n            overpaymentPercent: calculatePercentage(lastRow.overpayment, creditSum),\n            monthCount: paymentSchedule.length - 1, // вычитаем первую строку с датой начала кредита\n            lastPaymentDate: lastRow.date,\n            payment: paymentPerMonth,\n            onPercentage: calculatePercentage(firstPaymentRow.paymentByPercents, paymentPerMonth),\n        },\n    };\n}\n\nfunction calculateAnnuityPayment({ creditSum, creditPercent, creditPeriod }) {\n    const creditPercentInMonth = creditPercent / 12 / 100;\n    const pow = Math.pow(1 + creditPercentInMonth, creditPeriod);\n    const annuityFactor = (creditPercentInMonth * pow) / (pow - 1);\n    const annuityPayment = creditSum * annuityFactor;\n    return roundValue(annuityPayment);\n}\n","import { addItemIfNotExists, removeItem, removeProperty } from 'src/utils/common';\nimport calculatePayments from 'src/utils/calculatePayments';\n\nconst SAVE_CREDIT = 'SAVE_CREDIT';\nconst LOCK_FIELD = 'LOCK_FIELD';\nconst ADD_CREDIT = 'ADD_CREDIT';\nconst REMOVE_CREDIT = 'REMOVE_CREDIT';\nconst SET_ACTIVE = 'SET_ACTIVE';\n\nexport function addCredit(payload) {\n    return {\n        type: SAVE_CREDIT,\n        payload,\n    };\n}\n\nexport function saveCredit(payload) {\n    return {\n        type: SAVE_CREDIT,\n        payload,\n    };\n}\n\nexport function lockField({ name, field, value }) {\n    return {\n        type: LOCK_FIELD,\n        payload: { name, field, value },\n    };\n}\n\nexport function setActive({ name }) {\n    return {\n        type: SET_ACTIVE,\n        payload: { name },\n    };\n}\n\nexport const initialCreditParams = {\n    creditSum: 5000000,\n    creditPercent: 9.5,\n    paymentPerMonth: 50000,\n    months: null,\n    overpayment: null,\n    locked: {\n        creditSum: true,\n        creditPercent: true,\n        paymentPerMonth: true,\n        months: false,\n        overpayment: false,\n    },\n};\n\nconst DEFAULT_NAME = 'default';\n\nexport const initialCredits = {\n    names: [DEFAULT_NAME],\n    active: DEFAULT_NAME,\n    creditByName: {\n        default: { ...initialCreditParams, name: DEFAULT_NAME },\n    },\n    scheduleByName: {\n        default: calculatePayments(initialCreditParams),\n    },\n};\n\nexport default function credits(state = initialCredits, { type, payload }) {\n    switch (type) {\n        case ADD_CREDIT:\n        case SAVE_CREDIT: {\n            const creditParams = { ...payload };\n            return {\n                ...state,\n                names: addItemIfNotExists(state.names, payload.name),\n                creditByName: { ...state.creditByName, [payload.name]: creditParams },\n                scheduleByName: {\n                    ...state.scheduleByName,\n                    [payload.name]: calculatePayments(creditParams),\n                },\n            };\n        }\n        case REMOVE_CREDIT:\n            return {\n                ...state,\n                names: removeItem(state.names, payload.name),\n                creditByName: removeProperty(state.creditByName, payload.name),\n                scheduleByName: removeProperty(state.scheduleByName, payload.name),\n                active: state.active === payload.name ? null : state.active,\n            };\n        case LOCK_FIELD:\n            return {\n                ...state,\n                creditByName: {\n                    ...state.creditByName,\n                    [payload.name]: {\n                        ...state.creditByName[payload.name],\n                        locked: { ...state.creditByName[payload.name].locked, [payload.field]: payload.value },\n                    },\n                },\n            };\n        case SET_ACTIVE:\n            return {\n                ...state,\n                active: payload.name,\n            };\n        default:\n            return state;\n    }\n}\n","import calculatePayments from 'src/utils/calculatePayments';\nimport { initialCreditParams } from 'src/reducers/credits';\n\nconst SET_PAYMENT_SCHEDULE = 'SET_PAYMENT_SCHEDULE';\n\nexport function setPaymentSchedule(data) {\n    return {\n        type: SET_PAYMENT_SCHEDULE,\n        data,\n    };\n}\n\nconst initialState = calculatePayments(initialCreditParams);\n\nexport default function paymentSchedule(state = initialState, action) {\n    switch (action.type) {\n        case SET_PAYMENT_SCHEDULE:\n            return action.data;\n        default:\n            return state;\n    }\n}\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Form, Field } from 'react-final-form';\nimport MuiButton from '@material-ui/core/Button';\nimport MuiGrid from '@material-ui/core/Grid';\nimport MuiMenuItem from '@material-ui/core/MenuItem';\n\nimport Box from 'src/components/common/Box';\nimport BoxTitle from 'src/components/common/Box/Title';\nimport Input from 'src/components/common/Input';\nimport Select from 'src/components/common/Select';\nimport { CALCULATING_TYPE } from 'src/reducers/creditParams';\nimport { setPaymentSchedule } from 'src/reducers/paymentSchedule';\nimport calculatePayments from 'src/utils/calculatePayments';\n\nexport default function CreditForm() {\n    const { creditParams } = useSelector((state) => state);\n    const dispatch = useDispatch();\n\n    const onSubmit = (values) => {\n        const creditSum = parseFloat(values.creditSum);\n        const creditPercent = parseFloat(values.creditPercent);\n        const paymentPerMonth = parseFloat(values.paymentPerMonth);\n        const creditPeriod = parseFloat(values.creditPeriod);\n\n        const paymentSchedule = calculatePayments({\n            calculatingType: values.calculatingType,\n            creditSum,\n            creditPercent,\n            paymentPerMonth,\n            creditPeriod,\n        });\n        dispatch(setPaymentSchedule(paymentSchedule));\n    };\n\n    return (\n        <>\n            <BoxTitle>Параметры кредита</BoxTitle>\n            <Box>\n                <Form\n                    onSubmit={onSubmit}\n                    initialValues={creditParams}\n                    render={({ handleSubmit, values }) => (\n                        <form onSubmit={handleSubmit} noValidate autoComplete=\"off\">\n                            <MuiGrid container spacing={3}>\n                                <MuiGrid item xs={12} md={3} lg={3}>\n                                    <Field name=\"calculatingType\">\n                                        {({ input }) => (\n                                            <Select {...input} label=\"Способ расчета\">\n                                                <MuiMenuItem value={CALCULATING_TYPE.BY_PAYMENT}>\n                                                    По сумме платежа\n                                                </MuiMenuItem>\n                                                <MuiMenuItem value={CALCULATING_TYPE.BY_PERIOD}>\n                                                    По сроку кредита\n                                                </MuiMenuItem>\n                                            </Select>\n                                        )}\n                                    </Field>\n                                </MuiGrid>\n                                <MuiGrid item xs={12} md={3} lg={3}>\n                                    <Field name=\"creditSum\">\n                                        {({ input }) => <Input {...input} label=\"Сумма кредита\" />}\n                                    </Field>\n                                </MuiGrid>\n                                <MuiGrid item xs={12} md={3} lg={3}>\n                                    <Field name=\"creditPercent\">\n                                        {({ input }) => <Input {...input} label=\"Процентная ставка\" />}\n                                    </Field>\n                                </MuiGrid>\n                                <MuiGrid item xs={12} md={3} lg={3}>\n                                    {values.calculatingType === CALCULATING_TYPE.BY_PAYMENT && (\n                                        <Field name=\"paymentPerMonth\">\n                                            {({ input }) => <Input {...input} label=\"Ежемесячный платеж\" />}\n                                        </Field>\n                                    )}\n                                    {values.calculatingType === CALCULATING_TYPE.BY_PERIOD && (\n                                        <Field name=\"creditPeriod\">\n                                            {({ input }) => <Input {...input} label=\"Срок кредита, мес.\" />}\n                                        </Field>\n                                    )}\n                                </MuiGrid>\n                            </MuiGrid>\n                            <MuiGrid container justify=\"flex-end\" spacing={3}>\n                                <MuiGrid item xs={12} md={3} lg={3}>\n                                    <MuiButton variant=\"contained\" color=\"primary\" fullWidth type=\"submit\">\n                                        Рассчитать\n                                    </MuiButton>\n                                </MuiGrid>\n                            </MuiGrid>\n                        </form>\n                    )}\n                />\n            </Box>\n        </>\n    );\n}\n","import React from 'react';\nimport classnames from 'classnames';\nimport MuiTypography from '@material-ui/core/Typography';\nimport MuiDivider from '@material-ui/core/Divider';\n\nimport 'src/components/common/Summary/Summary.css';\nimport Box from 'src/components/common/Box';\n\nexport default function Summary({ icon, iconType, title, value, units, footer }) {\n    return (\n        <Box>\n            <div\n                className={classnames('summary__icon', {\n                    [`summary__icon_${iconType}`]: iconType,\n                })}\n            >\n                {icon}\n            </div>\n            <div className=\"summary__content\">\n                <div className=\"summary__title\">\n                    <MuiTypography component=\"h3\" variant=\"body1\" color=\"textSecondary\">\n                        {title}\n                    </MuiTypography>\n                </div>\n                <MuiTypography component=\"p\" variant=\"h3\">\n                    {value}\n                    <MuiTypography component=\"span\" variant=\"h5\">\n                        {' '}\n                        {units}\n                    </MuiTypography>\n                </MuiTypography>\n            </div>\n            <MuiDivider />\n            <div className=\"summary__footer\">\n                <MuiTypography component=\"p\" color=\"textSecondary\" variant=\"body2\">\n                    {footer}\n                </MuiTypography>\n            </div>\n        </Box>\n    );\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport MuiEventAvailableIcon from '@material-ui/icons/EventAvailable';\n\nimport Summary from 'src/components/common/Summary';\nimport { formatDate } from 'src/utils/date';\n\nexport default function SummaryMonthCount() {\n    const {\n        paymentSchedule: { summary },\n    } = useSelector((state) => state);\n    return (\n        <Summary\n            title=\"Срок кредита\"\n            icon={<MuiEventAvailableIcon />}\n            value={summary.monthCount}\n            units=\"мес.\"\n            footer={`Последний платеж – ${formatDate(summary.lastPaymentDate)}`}\n            iconType=\"success\"\n        />\n    );\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport MuiAccountBalanceWalletIcon from '@material-ui/icons/AccountBalanceWallet';\n\nimport Summary from 'src/components/common/Summary';\nimport { priceFormat } from 'src/utils/common';\n\nexport default function SummaryPayment() {\n    const {\n        paymentSchedule: { summary },\n    } = useSelector((state) => state);\n    return (\n        <Summary\n            title=\"Минимальный платеж\"\n            icon={<MuiAccountBalanceWalletIcon />}\n            value={priceFormat(summary.payment)}\n            units=\"руб.\"\n            footer={`${summary.onPercentage}% от этой суммы уйдет на погашение процентов в первый месяц`}\n            iconType=\"info\"\n        />\n    );\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport MuiAttachMoneyIcon from '@material-ui/icons/AttachMoney';\n\nimport Summary from 'src/components/common/Summary';\nimport { priceFormat } from 'src/utils/common';\n\nexport default function SummaryOverpayment() {\n    const {\n        paymentSchedule: { summary },\n    } = useSelector((state) => state);\n    return (\n        <Summary\n            title=\"Переплата\"\n            icon={<MuiAttachMoneyIcon />}\n            value={`${priceFormat(summary.overpayment)}`}\n            units=\"руб.\"\n            footer={`Это ${summary.overpaymentPercent}% от суммы кредита`}\n            iconType=\"warning\"\n        />\n    );\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, Legend, ResponsiveContainer } from 'recharts';\n\nimport Box from 'src/components/common/Box';\nimport BoxTitle from 'src/components/common/Box/Title';\n\nexport default function PaymentsChart() {\n    const { paymentSchedule } = useSelector((state) => state);\n\n    const chartData = paymentSchedule.dataByMonths.filter((item, index) => index !== 0);\n\n    return (\n        <>\n            <BoxTitle>Распределение ежемесячного платежа</BoxTitle>\n            <Box>\n                <div style={{ width: '100%', height: 300 }}>\n                    <ResponsiveContainer>\n                        <BarChart barCategoryGap=\"2%\" data={chartData}>\n                            <XAxis dataKey=\"dateFormatted\" />\n                            <YAxis />\n                            <Tooltip />\n                            <Legend />\n                            <Bar\n                                name=\"На погашение процентов\"\n                                unit=\" руб.\"\n                                dataKey=\"paymentByPercentsRounded\"\n                                stackId=\"a\"\n                                fill=\"#8884d8\"\n                            />\n                            <Bar\n                                name=\"На уменьшение суммы кредита\"\n                                unit=\" руб.\"\n                                dataKey=\"paymentByCreditRounded\"\n                                stackId=\"a\"\n                                fill=\"#82ca9d\"\n                            />\n                        </BarChart>\n                    </ResponsiveContainer>\n                </div>\n            </Box>\n        </>\n    );\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { XAxis, YAxis, Tooltip, Legend, ResponsiveContainer, AreaChart, Area } from 'recharts';\n\nimport Box from 'src/components/common/Box';\nimport BoxTitle from 'src/components/common/Box/Title';\n\nexport default function OverpaymentChart() {\n    const { paymentSchedule } = useSelector((state) => state);\n\n    const chartData = paymentSchedule.dataByMonths.filter((item, index) => index !== 0);\n\n    return (\n        <>\n            <BoxTitle>График переплаты</BoxTitle>\n            <Box>\n                <div style={{ width: '100%', height: 300 }}>\n                    <ResponsiveContainer>\n                        <AreaChart data={chartData}>\n                            <XAxis dataKey=\"dateFormatted\" />\n                            <YAxis />\n                            <Tooltip />\n                            <Legend />\n                            <Area name=\"Переплата\" unit=\" руб.\" dataKey=\"overpaymentRounded\" />\n                        </AreaChart>\n                    </ResponsiveContainer>\n                </div>\n            </Box>\n        </>\n    );\n}\n","import React, { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport MuiTable from '@material-ui/core/Table';\nimport MuiTableBody from '@material-ui/core/TableBody';\nimport MuiTableCell from '@material-ui/core/TableCell';\nimport MuiTableHead from '@material-ui/core/TableHead';\nimport MuiTableRow from '@material-ui/core/TableRow';\n\nimport 'src/components/PaymentScheduleTable/PaymentScheduleTable.css';\nimport Box from 'src/components/common/Box';\nimport BoxTitle from 'src/components/common/Box/Title';\nimport { priceFormat } from 'src/utils/common';\nimport { formatDate } from 'src/utils/date';\n\nexport default function PaymentScheduleTable() {\n    const { paymentSchedule } = useSelector((state) => state);\n\n    return useMemo(\n        () => (\n            <>\n                <BoxTitle>График платежей</BoxTitle>\n                <Box>\n                    <MuiTable size=\"small\" stickyHeader>\n                        <MuiTableHead>\n                            <MuiTableRow>\n                                <MuiTableCell>№</MuiTableCell>\n                                <MuiTableCell>Дата</MuiTableCell>\n                                <MuiTableCell align=\"right\">Платеж</MuiTableCell>\n                                <MuiTableCell align=\"right\">По процентам</MuiTableCell>\n                                <MuiTableCell align=\"right\">По кредиту</MuiTableCell>\n                                <MuiTableCell align=\"right\">Переплата</MuiTableCell>\n                                <MuiTableCell align=\"right\">Остаток долга</MuiTableCell>\n                            </MuiTableRow>\n                        </MuiTableHead>\n                        <MuiTableBody>\n                            {paymentSchedule.dataByMonths.map((row) => (\n                                <MuiTableRow key={row.number}>\n                                    <MuiTableCell>{row.number}.</MuiTableCell>\n                                    <MuiTableCell>{formatDate(row.date)}</MuiTableCell>\n                                    <MuiTableCell align=\"right\">{priceFormat(row.payment)}</MuiTableCell>\n                                    <MuiTableCell align=\"right\">{priceFormat(row.paymentByPercents)}</MuiTableCell>\n                                    <MuiTableCell align=\"right\">{priceFormat(row.paymentByCredit)}</MuiTableCell>\n                                    <MuiTableCell align=\"right\">{priceFormat(row.overpayment)}</MuiTableCell>\n                                    <MuiTableCell align=\"right\">{priceFormat(row.creditLeft)}</MuiTableCell>\n                                </MuiTableRow>\n                            ))}\n                        </MuiTableBody>\n                    </MuiTable>\n                </Box>\n            </>\n        ),\n        [paymentSchedule]\n    );\n}\n","import { withStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\n\nconst LargeInput = withStyles(() => ({ input: { fontSize: 24 } }))(Input);\n\nexport default LargeInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport MuiInputLabel from '@material-ui/core/InputLabel';\nimport MuiFormControl from '@material-ui/core/FormControl';\n\nimport LargeInput from 'src/components/common/Input/LargeInput';\nimport MuiInputAdornment from '@material-ui/core/InputAdornment';\nimport MuiIconButton from '@material-ui/core/IconButton';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\n\nconst NumberInput = ({\n    label,\n    onChange,\n    units,\n    step,\n    shiftStep,\n    value,\n    minValue,\n    maxValue,\n    valueProcessor,\n    ...props\n}) => {\n    const parsedValue = valueProcessor(parseFloat(value));\n    const onInputChange = ({ target: { value } }) => {\n        const floatValue = parseFloat(value);\n        if (!isNaN(floatValue)) {\n            onChange(floatValue);\n        }\n    };\n    const onDecrease = ({ shiftKey }) => {\n        if (!isNaN(parsedValue)) {\n            onChange(Math.max(parsedValue - (shiftKey ? shiftStep : step), minValue));\n        }\n    };\n    const onIncrease = ({ shiftKey }) => {\n        if (!isNaN(parsedValue)) {\n            onChange(Math.min(parsedValue + (shiftKey ? shiftStep : step), maxValue));\n        }\n    };\n    return (\n        <MuiFormControl fullWidth>\n            <MuiInputLabel>{label}</MuiInputLabel>\n            <LargeInput\n                {...props}\n                value={valueProcessor(value)}\n                onChange={onInputChange}\n                startAdornment={\n                    <MuiInputAdornment position=\"start\">\n                        <MuiIconButton\n                            style={{ marginLeft: -15 }}\n                            aria-label={`Уменьшить`}\n                            onClick={onDecrease}\n                            disabled={isNaN(parsedValue)}\n                        >\n                            <RemoveIcon />\n                        </MuiIconButton>\n                    </MuiInputAdornment>\n                }\n                endAdornment={\n                    <MuiInputAdornment position=\"end\">\n                        <MuiIconButton\n                            style={{ marginRight: -15 }}\n                            aria-label={`Увеличить`}\n                            onClick={onIncrease}\n                            disabled={isNaN(parsedValue)}\n                        >\n                            <AddIcon />\n                        </MuiIconButton>\n                    </MuiInputAdornment>\n                }\n            />\n        </MuiFormControl>\n    );\n};\n\nNumberInput.defaultProps = {\n    valueProcessor: (value) => value,\n    minValue: 0,\n    maxValue: Infinity,\n};\n\nNumberInput.propTypes = {\n    label: PropTypes.string,\n    value: PropTypes.string,\n    minValue: PropTypes.number,\n    maxValue: PropTypes.number,\n    step: PropTypes.number,\n    onChange: PropTypes.func,\n};\n\nexport default NumberInput;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport MuiBox from '@material-ui/core/Box';\nimport MuiGrid from '@material-ui/core/Grid';\nimport MuiButton from '@material-ui/core/Button';\nimport MuiTypography from '@material-ui/core/Typography';\n\nimport Box from 'src/components/common/Box';\nimport NumberInput from 'src/components/common/Input/NumberInput';\nimport { saveCredit, setActive } from 'src/reducers/credits';\nimport { setPaymentSchedule } from 'src/reducers/paymentSchedule';\nimport { numConversion, priceFormat } from 'src/utils/common';\n\nexport default function CreditForm({ name }) {\n    const { creditByName, scheduleByName, active } = useSelector(({ credits }) => credits);\n    const creditParams = creditByName[name];\n    const creditSchedule = scheduleByName[name];\n    const isActive = active === creditParams.name;\n    const dispatch = useDispatch();\n\n    const onChange = (field, value) => {\n        if (creditParams.hasOwnProperty(field) && !isNaN(value)) {\n            dispatch(\n                saveCredit({\n                    ...creditParams,\n                    name,\n                    [field]: value,\n                    locked: {\n                        ...creditParams.locked,\n                        [field]: true,\n                    },\n                })\n            );\n        }\n    };\n\n    const onSubmit = (event) => {\n        event.preventDefault();\n        dispatch(setActive({ name: creditParams.name }));\n        dispatch(setPaymentSchedule(scheduleByName[creditParams.name]));\n    };\n\n    return (\n        <Box elevation={isActive ? 10 : 2}>\n            <form onSubmit={onSubmit} noValidate autoComplete=\"off\">\n                <MuiGrid container spacing={3} direction=\"column\">\n                    <MuiGrid item xs={12}>\n                        <NumberInput\n                            value={creditParams.creditPercent}\n                            onChange={(value) => onChange('creditPercent', value)}\n                            label=\"Процентная ставка\"\n                            units=\"%\"\n                            step={0.5}\n                            shiftStep={0.1}\n                            minValue={0}\n                            maxValue={100}\n                            valueProcessor={(value) => Math.round(value * 10) / 10}\n                        />\n                    </MuiGrid>\n                    <MuiGrid item xs={12}>\n                        <NumberInput\n                            value={creditParams.creditSum}\n                            onChange={(value) => onChange('creditSum', value)}\n                            label=\"Сумма кредита\"\n                            units=\"₽\"\n                            step={500000}\n                            shiftStep={100000}\n                            minValue={50000}\n                            maxValue={100000000}\n                        />\n                    </MuiGrid>\n                    <MuiGrid item xs={12}>\n                        <NumberInput\n                            value={creditParams.paymentPerMonth}\n                            onChange={(value) => onChange('paymentPerMonth', value)}\n                            label=\"Платёж в месяц\"\n                            units=\"₽\"\n                            step={5000}\n                            shiftStep={1000}\n                            minValue={1000}\n                            maxValue={100000000}\n                        />\n                    </MuiGrid>\n                    <MuiGrid item xs={12}>\n                        <MuiTypography component=\"h3\" variant=\"subtitle1\" color=\"textSecondary\">\n                            Срок кредита\n                        </MuiTypography>\n                        <MuiTypography component=\"span\" variant=\"h4\">\n                            {creditSchedule.summary.monthCount}&thinsp;\n                        </MuiTypography>\n                        <MuiTypography component=\"span\" variant=\"h5\">\n                            {numConversion(creditSchedule.summary.monthCount, ['месяц', 'месяца', 'месяцев'])}\n                        </MuiTypography>\n                    </MuiGrid>\n                    <MuiGrid item xs={12}>\n                        <MuiBox mt={-2}>\n                            <MuiTypography component=\"h3\" variant=\"subtitle1\" color=\"textSecondary\">\n                                Переплата\n                            </MuiTypography>\n                            <MuiTypography component=\"span\" variant=\"h4\">\n                                {priceFormat(creditSchedule.summary.overpayment)}&thinsp;\n                            </MuiTypography>\n                            <MuiTypography component=\"span\" variant=\"h5\">\n                                ₽\n                            </MuiTypography>\n                        </MuiBox>\n                    </MuiGrid>\n                    <MuiGrid item xs={12}>\n                        <MuiButton\n                            size=\"large\"\n                            variant=\"contained\"\n                            color={isActive ? 'primary' : 'default'}\n                            fullWidth\n                            type=\"submit\"\n                        >\n                            Рассчитать\n                        </MuiButton>\n                    </MuiGrid>\n                </MuiGrid>\n            </form>\n        </Box>\n    );\n}\n\nCreditForm.propTypes = {\n    name: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport MuiGrid from '@material-ui/core/Grid';\nimport MuiBox from '@material-ui/core/Box';\nimport MuiIconButton from '@material-ui/core/IconButton';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\n\nimport BoxTitle from 'src/components/common/Box/Title';\nimport CreditForm from 'src/components/MultiCreditForm/components/CreditForm';\nimport { addCredit } from 'src/reducers/credits';\n\nlet creditNameCounter = 1;\n\nexport default function MultiCreditForm() {\n    const { names, creditByName } = useSelector((state) => state.credits);\n    const dispatch = useDispatch();\n\n    const addOneMoreCredit = () => {\n        dispatch(addCredit({ ...creditByName[names[names.length - 1]], name: `credit${creditNameCounter}` }));\n        creditNameCounter += 1;\n    };\n\n    return (\n        <MuiBox mb={2}>\n            <BoxTitle>Параметры кредита</BoxTitle>\n            <MuiGrid container xs={12} spacing={3}>\n                {names.map((name) => (\n                    <MuiGrid key={name} item xs={12} md={3} lg={3}>\n                        <CreditForm name={name} />\n                    </MuiGrid>\n                ))}\n                <MuiGrid key={name} item xs={12} md={3} lg={3}>\n                    <MuiIconButton aria-label={`Добавить кредит`} onClick={addOneMoreCredit}>\n                        <AddCircleIcon fontSize=\"large\" style={{ fontSize: 50 }} color=\"primary\" />\n                    </MuiIconButton>\n                </MuiGrid>\n            </MuiGrid>\n        </MuiBox>\n    );\n}\n","import React from 'react';\nimport MuiDashboardIcon from '@material-ui/icons/Dashboard';\nimport MuiBookmarksIcon from '@material-ui/icons/Bookmarks';\n\nimport MainPage from 'src/pages/Main';\nimport SavedCreditsPage from 'src/pages/SavedCredits';\nimport CompareCreditsPage from 'src/pages/CompareCredits';\nimport CompareArrowsIcon from '@material-ui/icons/CompareArrows';\n\nconst routes = [\n    {\n        path: '/',\n        component: MainPage(),\n        title: 'Кредитный калькулятор',\n        menuIcon: <MuiDashboardIcon />,\n    },\n    {\n        path: '/compare-credits',\n        component: CompareCreditsPage(),\n        title: 'Сравнение кредитов',\n        menuIcon: <CompareArrowsIcon />,\n    },\n    {\n        path: '/saved-credits',\n        component: SavedCreditsPage(),\n        title: 'Сохраненные кредиты',\n        menuIcon: <MuiBookmarksIcon />,\n    },\n];\n\nexport default routes;\n","import React from 'react';\nimport MuiGrid from '@material-ui/core/Grid';\n\nimport CreditForm from 'src/components/CreditForm';\nimport SummaryMonthCount from 'src/components/SummaryMonthCount';\nimport SummaryPayment from 'src/components/SummaryPayment';\nimport SummaryOverpayment from 'src/components/SummaryOverpayment';\nimport PaymentsChart from 'src/components/PaymentsChart';\nimport OverpaymentChart from 'src/components/OverpaymentChart';\nimport PaymentScheduleTable from 'src/components/PaymentScheduleTable';\n\nexport default function MainPage() {\n    return (\n        <>\n            <MuiGrid container spacing={4}>\n                <MuiGrid item xs={12} md={12} lg={12}>\n                    <CreditForm />\n                </MuiGrid>\n            </MuiGrid>\n            <MuiGrid container spacing={4}>\n                <MuiGrid item xs={12} md={4} lg={4}>\n                    <SummaryMonthCount />\n                </MuiGrid>\n                <MuiGrid item xs={12} md={4} lg={4}>\n                    <SummaryPayment />\n                </MuiGrid>\n                <MuiGrid item xs={12} md={4} lg={4}>\n                    <SummaryOverpayment />\n                </MuiGrid>\n            </MuiGrid>\n            <MuiGrid container spacing={4}>\n                <MuiGrid item xs={12}>\n                    <OverpaymentChart />\n                </MuiGrid>\n            </MuiGrid>\n            <MuiGrid container spacing={4}>\n                <MuiGrid item xs={12}>\n                    <PaymentsChart />\n                </MuiGrid>\n            </MuiGrid>\n            <MuiGrid container spacing={4}>\n                <MuiGrid item xs={12}>\n                    <PaymentScheduleTable />\n                </MuiGrid>\n            </MuiGrid>\n        </>\n    );\n}\n","import React from 'react';\nimport MuiGrid from '@material-ui/core/Grid';\n\nimport MultiCreditForm from 'src/components/MultiCreditForm';\nimport SummaryMonthCount from 'src/components/SummaryMonthCount';\nimport SummaryOverpayment from 'src/components/SummaryOverpayment';\nimport PaymentsChart from 'src/components/PaymentsChart';\nimport OverpaymentChart from 'src/components/OverpaymentChart';\nimport PaymentScheduleTable from 'src/components/PaymentScheduleTable';\n\nexport default function MainPage() {\n    return (\n        <>\n            <MuiGrid container spacing={4}>\n                <MuiGrid item xs={12} md={12} lg={12}>\n                    <MultiCreditForm />\n                </MuiGrid>\n            </MuiGrid>\n            <MuiGrid container spacing={4}>\n                <MuiGrid item xs={12} md={6} lg={6}>\n                    <SummaryMonthCount />\n                </MuiGrid>\n                <MuiGrid item xs={12} md={6} lg={6}>\n                    <SummaryOverpayment />\n                </MuiGrid>\n            </MuiGrid>\n            <MuiGrid container spacing={4}>\n                <MuiGrid item xs={12}>\n                    <OverpaymentChart />\n                </MuiGrid>\n            </MuiGrid>\n            <MuiGrid container spacing={4}>\n                <MuiGrid item xs={12}>\n                    <PaymentsChart />\n                </MuiGrid>\n            </MuiGrid>\n            <MuiGrid container spacing={4}>\n                <MuiGrid item xs={12}>\n                    <PaymentScheduleTable />\n                </MuiGrid>\n            </MuiGrid>\n        </>\n    );\n}\n","import React from 'react';\n\nexport default function SavedCreditsPage() {\n    return <div>SavedCreditsPage</div>;\n}\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport MuiBox from '@material-ui/core/Box';\nimport MuiToolbar from '@material-ui/core/Toolbar';\nimport MuiTypography from '@material-ui/core/Typography';\nimport MuiAppBar from '@material-ui/core/AppBar/AppBar';\n\nimport routes from 'src/routes';\n\nexport default function Header() {\n    return (\n        <MuiBox mb={4}>\n            <MuiAppBar position=\"static\">\n                <MuiToolbar>\n                    <MuiTypography component=\"h1\" variant=\"h5\" color=\"inherit\">\n                        <Switch>\n                            {routes.map((route, index) => (\n                                <Route key={index} path={route.path} exact>\n                                    {route.title}\n                                </Route>\n                            ))}\n                        </Switch>\n                    </MuiTypography>\n                </MuiToolbar>\n            </MuiAppBar>\n        </MuiBox>\n    );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport MuiDivider from '@material-ui/core/Divider';\nimport MuiList from '@material-ui/core/List';\nimport MuiDrawer from '@material-ui/core/Drawer/Drawer';\nimport MuiListItem from '@material-ui/core/ListItem';\nimport MuiListItemIcon from '@material-ui/core/ListItemIcon/ListItemIcon';\nimport MuiListItemText from '@material-ui/core/ListItemText/ListItemText';\n\nimport 'src/components/Menu/Menu.css';\nimport routes from 'src/routes';\n\nexport default function Menu() {\n    return (\n        <MuiDrawer variant=\"permanent\" className=\"menu\" open={true}>\n            <div className=\"menu__toolbar\" />\n            <MuiDivider />\n            <MuiList>\n                {routes.map((route, index) => (\n                    <MuiListItem key={index} button component={Link} to={route.path}>\n                        <MuiListItemIcon>{route.menuIcon}</MuiListItemIcon>\n                        <MuiListItemText primary={route.title} />\n                    </MuiListItem>\n                ))}\n            </MuiList>\n        </MuiDrawer>\n    );\n}\n","import React from 'react';\nimport MuiTypography from '@material-ui/core/Typography';\nimport MuiBox from '@material-ui/core/Box';\n\nexport default function Footer() {\n    return (\n        <MuiBox mt={4} mb={4}>\n            <MuiTypography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n                {'Copyright © '}\n                Calculator {new Date().getFullYear()}\n            </MuiTypography>\n        </MuiBox>\n    );\n}\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport 'src/App.css';\n\nimport MuiCssBaseline from '@material-ui/core/CssBaseline';\nimport MuiContainer from '@material-ui/core/Container';\n\nimport routes from 'src/routes';\nimport Header from 'src/components/Header';\nimport Menu from 'src/components/Menu';\nimport Footer from 'src/components/Footer';\n\nexport default function Dashboard() {\n    return (\n        <Router>\n            <div className=\"app-container\">\n                <MuiCssBaseline />\n                <Menu />\n                <div className=\"app-content\">\n                    <Header />\n                    <main>\n                        <MuiContainer maxWidth=\"lg\">\n                            <Switch>\n                                {routes.map((route, index) => (\n                                    <Route key={index} path={route.path} exact>\n                                        {route.component}\n                                    </Route>\n                                ))}\n                            </Switch>\n                            <Footer />\n                        </MuiContainer>\n                    </main>\n                </div>\n            </div>\n        </Router>\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport 'src/index.css';\nimport App from 'src/App';\n\nimport configureStore from 'src/store';\n\nconst store = configureStore();\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n","import { createStore, combineReducers } from 'redux';\nimport credits from 'src/reducers/credits';\nimport creditParams from 'src/reducers/creditParams';\nimport paymentSchedule from 'src/reducers/paymentSchedule';\n\nconst configureStore = () => {\n    return createStore(\n        combineReducers({\n            credits,\n            creditParams,\n            paymentSchedule,\n        }),\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    );\n};\n\nexport default configureStore;\n"],"sourceRoot":""}