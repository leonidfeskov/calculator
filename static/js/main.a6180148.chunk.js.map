{"version":3,"sources":["components/common/Box/index.js","components/common/Box/Title.js","components/common/Input/index.js","components/common/Select/index.js","components/common/CalendarPicker/index.js","utils/date.js","reducers/creditParams.js","components/CreditForm/Prepayments.js","utils/common.js","calc/common.js","calc/credit.js","reducers/creditData.js","components/CreditForm/index.js","components/common/Summary/index.js","components/CreditSummary/index.js","components/CreditDataTable/index.js","components/CreditCalculation/index.js","reducers/depositParams.js","calc/deposit.js","reducers/depositData.js","components/DepositForm/index.js","components/DepositSummary/index.js","components/DepositDataTable/index.js","components/CreditStrategyForm/index.js","components/common/Input/LargeInput.js","components/common/Input/NumberInput.js","components/common/Select/LargeSelect.js","components/common/Wtf/index.js","reducers/credits.js","components/MultiCreditForm/components/CreditForm.js","components/MultiCreditForm/index.js","routes.js","pages/Main/index.js","pages/Deposit/index.js","pages/CompareCredits/index.js","pages/CreditStrategy/index.js","pages/SavedCredits/index.js","components/Header/index.js","components/Menu/index.js","components/Footer/index.js","App.js","index.js","store.js"],"names":["Box","children","props","Paper","className","Title","component","variant","color","paragraph","Input","TextField","size","fullWidth","Select","otherProps","select","CalendarPicker","value","onChange","label","disableToolbar","format","margin","normalizeDate","date","resultDate","Date","setUTCHours","formatDateISO","toISOString","substr","formatDate","splittedDate","split","getNextMonth","newDate","day","getDate","setMonth","getMonth","setDate","getDaysCountInYear","year","getDaysCountBetweenDates","start","end","getDateAfterXMonth","x","splitDate","parseInt","CALCULATING_TYPE","PREPAYMENT_REPEAT","NONE","id","name","EVERY_MONTH","EVERY_THREE_MONTHS","EVERY_HALF_YEAR","EVERY_YEAR","createNewPrepayment","now","payment","repeat","setPrepaymentParam","type","initialCreditParams","calculatingType","creditSum","creditPercent","paymentPerMonth","creditPeriod","prepayments","creditParams","state","action","filter","prepayment","map","Prepayments","useSelector","useState","length","isOpen","setIsOpen","dispatch","useDispatch","container","spacing","item","xs","md","lg","onClick","key","onDateChange","target","parseFloat","Object","values","removePrepayment","removePrepaymentHandler","fontSize","priceFormat","Math","round","toLocaleString","replace","roundValue","removeItem","array","current","addItemIfNotExists","includes","concat","removeProperty","object","property","result","calculatePercentage","base","calculateMoneyByPercentage","sum","percentage","startDate","endDate","daysCountInPreviousYear","getFullYear","daysCountInCurrentYear","paymentByPercents","addFormattedFields","row","dateFormatted","paymentRounded","paymentByPercentsRounded","paymentByCreditRounded","paymentByCredit","overpaymentRounded","overpayment","creditLeftRounded","creditLeft","Credit","this","period","forEach","i","push","creditData","monthCount","currentPaymentDate","nextPaymentDate","error","currentPrepayments","calculateSomePayment","checkCreditEnd","isPrepayment","previousPayment","currentPayment","number","debtByPercents","min","max","percentageInMonth","pow","annuityPayment","ceil","calculateAnnuityPayment","makePrepayments","firstPayment","lastPayment","table","summary","overpaymentPercent","lastPaymentDate","onPercentage","calcApproximateCreditSummary","y","log","calculateCredit","params","calculate","setCreditData","data","initialState","calculatePayments","CreditForm","setCreditParam","onSubmit","event","preventDefault","noValidate","autoComplete","justify","Summary","icon","iconType","title","units","footer","classnames","CreditSummary","CreditDataTable","visibleRows","setVisibleRows","useEffect","rows","slice","totalRows","restOfRows","nextRows","MONTHS_PER_PAGE","showMoreRows","useCallback","useMemo","stickyHeader","align","CreditCalculation","severity","initialDepositParams","initialSum","depositParams","Deposit","depositeDate","previousMonth","currentMonth","income","totalIncome","totalSum","calculateDeposit","depositData","setDepositParam","DepositSummary","DepositDataTable","index","CreditStrategyForm","setCreditSum","creditPercentage","setCreditPercentage","creditPayment","setCreditPayment","depositPercentage","setDepositPercentage","depositPayment","setDepositPayment","strategyOnlyCredit","setStrategyOnlyCredit","strategyCreditAndDeposit","setStrategyCreditAndDeposit","strategyRepayCreditWithDeposit","setStrategyRepayCreditWithDeposit","totalPayment","strategy2","strategy2Deposit","calcApproximateDepositSummary","depositSum","strategy1","strategy3","console","LargeInput","withStyles","input","NumberInput","step","shiftStep","minValue","maxValue","valueProcessor","parsedValue","floatValue","isNaN","startAdornment","position","style","marginLeft","aria-label","shiftKey","disabled","endAdornment","marginRight","defaultProps","Infinity","propTypes","PropTypes","string","func","LargeSelect","useStylesBootstrap","makeStyles","theme","arrow","palette","common","black","tooltip","backgroundColor","BootstrapTooltip","classes","Wtf","initialPayments","initialCredits","names","active","creditByName","default","scheduleByName","credits","payload","creditSchedule","isActive","field","hasOwnProperty","elevation","setActive","direction","String","mt","isRequired","creditNameCounter","MultiCreditForm","mb","routes","path","menuIcon","Header","route","exact","Menu","open","button","Link","to","primary","Footer","Dashboard","maxWidth","store","createStore","combineReducers","window","__REDUX_DEVTOOLS_EXTENSION__","configureStore","ReactDOM","render","utils","DateFnsUtils","document","getElementById"],"mappings":"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","file":"static/js/main.a6180148.chunk.js","sourcesContent":["import React from 'react';\nimport { Paper } from '@material-ui/core';\n\nimport 'src/components/common/Box/Box.css';\n\nexport default function Box({ children, ...props }) {\n    return (\n        <Paper className=\"box\" {...props}>\n            {children}\n        </Paper>\n    );\n}\n","import React from 'react';\nimport MuiTypography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n    return (\n        <MuiTypography component=\"h2\" variant=\"h6\" color=\"primary\" paragraph>\n            {props.children}\n        </MuiTypography>\n    );\n}\n","import React from 'react';\nimport { TextField } from '@material-ui/core';\n\nexport default function Input(props) {\n    return <TextField size=\"small\" fullWidth {...props} />;\n}\n","import React from 'react';\nimport MuiTextField from '@material-ui/core/TextField';\n\nexport default function Select({ children, ...otherProps }) {\n    return (\n        <MuiTextField select size=\"small\" fullWidth {...otherProps}>\n            {children}\n        </MuiTextField>\n    );\n}\n","import React from 'react';\nimport { KeyboardDatePicker } from '@material-ui/pickers';\nimport 'src/components/common/CalendarPicker/CalendarPicker.css';\n\nexport default function CalendarPicker({ value, onChange, label }) {\n    return (\n        <div className=\"calendar-picker-wrapper\">\n            <KeyboardDatePicker\n                disableToolbar\n                variant=\"inline\"\n                format=\"dd.MM.yyyy\"\n                margin=\"normal\"\n                label={label}\n                value={value}\n                onChange={onChange}\n            />\n        </div>\n    );\n}\n","const MILLISECONDS_IN_DAY = 1000 * 60 * 60 * 24;\n\n// возвращает объект даты с установленным временем 00:00:00\nexport const normalizeDate = (date) => {\n    const resultDate = new Date(date);\n    resultDate.setUTCHours(0, 0, 0, 0);\n    return resultDate;\n};\n\nexport const formatDateISO = (date) => date.toISOString().substr(0, 10);\n\nexport const formatDate = (date) => {\n    const strDate = formatDateISO(date);\n    const splittedDate = strDate.split('-');\n    return `${splittedDate[2]}.${splittedDate[1]}.${splittedDate[0]}`;\n};\n\nexport const getNextMonth = (date) => {\n    const newDate = new Date(date);\n    const day = date.getDate();\n    newDate.setMonth(date.getMonth() + 1);\n    if (newDate.getDate() !== day) {\n        newDate.setDate(0);\n    }\n    return newDate;\n};\n\nexport const getDaysCountInYear = (year) => {\n    if (year % 4 === 0) {\n        return 366;\n    }\n    return 365;\n};\n\nexport const getDaysCountBetweenDates = (start, end) => (end - start) / MILLISECONDS_IN_DAY;\n\nexport const getDateAfterXMonth = (date, x) => {\n    const splitDate = date.split('-');\n    return formatDateISO(\n        normalizeDate(new Date(splitDate[0], parseInt(splitDate[1], 10) - 1 + x, parseInt(splitDate[2], 10)))\n    );\n};\n","import { formatDateISO } from 'src/utils/date';\n\nconst SET_CREDIT_PARAM = 'SET_CREDIT_PARAM';\nconst ADD_EMPTY_PREPAYMENT = 'ADD_EMPTY_PREPAYMENT';\nconst REMOVE_PREPAYMENT = 'REMOVE_PREPAYMENT';\nconst SET_PREPAYMENT_PARAM = 'SET_PREPAYMENT_PARAM';\n\nexport const CALCULATING_TYPE = {\n    BY_PERIOD: 'by_period',\n    BY_PAYMENT: 'by_payment',\n};\n\nexport const PREPAYMENT_REPEAT = {\n    NONE: {\n        id: 'none',\n        name: 'один раз',\n    },\n    EVERY_MONTH: {\n        id: 'everyMonth',\n        name: 'Каждый месяц',\n    },\n    EVERY_THREE_MONTHS: {\n        id: 'everyThreeMonth',\n        name: 'Каждые 3 месяца',\n    },\n    EVERY_HALF_YEAR: {\n        id: 'everyHalfYear',\n        name: 'Каждые полгода',\n    },\n    EVERY_YEAR: {\n        id: 'everyYear',\n        name: 'Каждый год',\n    },\n};\n\nconst createNewPrepayment = () => ({\n    id: Date.now(),\n    date: formatDateISO(new Date()),\n    payment: 1000,\n    repeat: PREPAYMENT_REPEAT.NONE.id,\n});\n\nexport function setCreditParam(name, value) {\n    return {\n        type: SET_CREDIT_PARAM,\n        name,\n        value,\n    };\n}\n\nexport function addEmptyPrepayment() {\n    return {\n        type: ADD_EMPTY_PREPAYMENT,\n    };\n}\n\nexport function removePrepayment(id) {\n    return {\n        type: REMOVE_PREPAYMENT,\n        id,\n    };\n}\n\nexport function setPrepaymentParam(id, name, value) {\n    return {\n        type: SET_PREPAYMENT_PARAM,\n        id,\n        name,\n        value,\n    };\n}\n\nexport const initialCreditParams = {\n    calculatingType: CALCULATING_TYPE.BY_PAYMENT,\n    creditSum: 2000000,\n    creditPercent: 9.5,\n    paymentPerMonth: 35000,\n    creditPeriod: 60,\n    prepayments: [\n        // {\n        //     id: '1',\n        //     date: '2020-07-10',\n        //     payment: 3000,\n        //     repeat: PREPAYMENT_REPEAT.NONE.id,\n        // },\n        // {\n        //     id: '2',\n        //     date: '2020-08-10',\n        //     payment: 3000,\n        //     repeat: PREPAYMENT_REPEAT.NONE.id,\n        // },\n        // {\n        //     id: '3',\n        //     date: '2020-06-15',\n        //     payment: 5000,\n        //     repeat: PREPAYMENT_REPEAT.EVERY_MONTH.id,\n        // },\n        {\n            id: '4',\n            date: '2020-06-17',\n            payment: 2000,\n            repeat: PREPAYMENT_REPEAT.EVERY_THREE_MONTHS.id,\n        },\n    ],\n};\n\nexport default function creditParams(state = initialCreditParams, action) {\n    switch (action.type) {\n        case SET_CREDIT_PARAM:\n            return {\n                ...state,\n                [action.name]: action.value,\n            };\n        case ADD_EMPTY_PREPAYMENT:\n            return {\n                ...state,\n                prepayments: [...state.prepayments, createNewPrepayment()],\n            };\n        case REMOVE_PREPAYMENT:\n            return {\n                ...state,\n                prepayments: state.prepayments.filter((prepayment) => prepayment.id !== action.id),\n            };\n        case SET_PREPAYMENT_PARAM:\n            return {\n                ...state,\n                prepayments: state.prepayments.map((prepayment) => {\n                    if (prepayment.id === action.id) {\n                        return {\n                            ...prepayment,\n                            [action.name]: action.value,\n                        };\n                    }\n                    return prepayment;\n                }),\n            };\n        default:\n            return state;\n    }\n}\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport MuiGrid from '@material-ui/core/Grid';\nimport MuiMenuItem from '@material-ui/core/MenuItem';\nimport MuiButton from '@material-ui/core/Button';\nimport MuiIconButton from '@material-ui/core/IconButton';\nimport MuiDeleteIcon from '@material-ui/icons/Delete';\n\nimport Input from 'src/components/common/Input';\nimport Select from 'src/components/common/Select';\nimport CalendarPicker from 'src/components/common/CalendarPicker';\nimport { PREPAYMENT_REPEAT, addEmptyPrepayment, removePrepayment, setPrepaymentParam } from 'src/reducers/creditParams';\nimport { formatDateISO } from 'src/utils/date';\n\nexport default function Prepayments() {\n    const { creditParams } = useSelector((state) => state);\n    const [isOpen, setIsOpen] = useState(creditParams.prepayments.length > 0);\n    const dispatch = useDispatch();\n\n    const togglePrepayments = () => {\n        if (!isOpen && creditParams.prepayments.length === 0) {\n            dispatch(addEmptyPrepayment());\n        }\n        setIsOpen(!isOpen);\n    };\n\n    const onChange = (id, name, value) => {\n        dispatch(setPrepaymentParam(id, name, value));\n    };\n\n    const onDateChange = (id, value) => {\n        dispatch(setPrepaymentParam(id, 'date', formatDateISO(value)));\n    };\n\n    const addPrepaymentHandler = () => {\n        dispatch(addEmptyPrepayment());\n    };\n\n    const removePrepaymentHandler = (id) => {\n        dispatch(removePrepayment(id));\n    };\n\n    return (\n        <>\n            <MuiGrid container spacing={3}>\n                <MuiGrid item xs={12} md={12} lg={12}>\n                    <MuiButton color=\"primary\" onClick={togglePrepayments}>\n                        Досрочные платежи\n                    </MuiButton>\n                    {creditParams.prepayments.length > 0 && !isOpen && (\n                        <div>есть {creditParams.prepayments.length} досрочных платежа</div>\n                    )}\n                </MuiGrid>\n            </MuiGrid>\n            {isOpen && (\n                <>\n                    {creditParams.prepayments.map(({ id, date, payment, repeat }) => (\n                        <MuiGrid key={id} container spacing={3}>\n                            <MuiGrid item xs={12} md={3} lg={3}>\n                                <CalendarPicker\n                                    value={date}\n                                    onChange={(value) => onDateChange(id, value)}\n                                    label=\"Дата\"\n                                />\n                            </MuiGrid>\n                            <MuiGrid item xs={12} md={3} lg={3}>\n                                <Input\n                                    value={payment}\n                                    onChange={({ target }) => onChange(id, 'payment', parseFloat(target.value))}\n                                    label=\"Платеж, руб.\"\n                                />\n                            </MuiGrid>\n                            <MuiGrid item xs={12} md={3} lg={3}>\n                                <Select\n                                    value={repeat}\n                                    onChange={({ target }) => onChange(id, 'repeat', target.value)}\n                                    label=\"Периодичность\"\n                                >\n                                    {Object.values(PREPAYMENT_REPEAT).map((repeat) => (\n                                        <MuiMenuItem key={repeat.id} value={repeat.id}>\n                                            {repeat.name}\n                                        </MuiMenuItem>\n                                    ))}\n                                </Select>\n                            </MuiGrid>\n                            <MuiGrid item xs={12} md={3} lg={3}>\n                                <MuiIconButton onClick={() => removePrepaymentHandler(id)}>\n                                    <MuiDeleteIcon fontSize=\"small\" />\n                                </MuiIconButton>\n                            </MuiGrid>\n                        </MuiGrid>\n                    ))}\n                    <MuiGrid container spacing={3}>\n                        <MuiGrid item xs={12} md={3} lg={3}>\n                            <MuiButton variant=\"contained\" color=\"secondary\" fullWidth onClick={addPrepaymentHandler}>\n                                Добавить платеж\n                            </MuiButton>\n                        </MuiGrid>\n                    </MuiGrid>\n                </>\n            )}\n        </>\n    );\n}\n","export function priceFormat(value) {\n    const roundedValue = Math.round(value);\n    return roundedValue.toLocaleString('ru-RU').replace(/\\s/g, '\\u2009');\n}\n\nexport function roundValue(value) {\n    return Math.round(value);\n}\n\nexport function numConversion(number, words) {\n    const textCases = [2, 0, 1, 1, 1, 2];\n    const textInt = number % 100 > 4 && number % 100 < 20 ? 2 : textCases[Math.min(number % 10, 5)];\n    return words[textInt];\n}\n\nexport function removeItem(array, item) {\n    return array.filter((current) => current !== item);\n}\n\nexport function addItemIfNotExists(array, item) {\n    return array.includes(item) ? array : array.concat(item);\n}\n\nexport function removeProperty(object, property) {\n    const result = { ...object };\n    delete result[property];\n    return result;\n}\n","/* eslint-disable import/prefer-default-export */\nimport { getDaysCountBetweenDates, getDaysCountInYear } from 'src/utils/date';\n\nexport function calculatePercentage(value, base) {\n    return Math.round((value / base) * 10000) / 100;\n}\n\nexport function getBaseLog(x, y) {\n    return Math.log(y) / Math.log(x);\n}\n\nexport function calculateMoneyByPercentage(sum, percentage, startDate, endDate) {\n    const daysCountInPreviousYear = getDaysCountInYear(startDate.getFullYear());\n    const daysCountInCurrentYear = getDaysCountInYear(endDate.getFullYear());\n    let paymentByPercents = 0;\n    // Случай, когда одна часть платежного периода находится в невисокосном году, а вторая в високосном или наоборот\n    // В таком случае стоимость одного дня кредита будет разной для каждой части\n    if (startDate.getMonth() === 11 && endDate.getMonth() === 0 && daysCountInPreviousYear !== daysCountInCurrentYear) {\n        const daysCountInPreviousMonth = getDaysCountBetweenDates(\n            startDate,\n            new Date(`${startDate.getFullYear()}-12-31`)\n        );\n        const daysCountInCurrentMonth = getDaysCountBetweenDates(new Date(`${startDate.getFullYear()}-12-31`), endDate);\n\n        const oneDayCreditCostForPreviousMonth = (sum * percentage) / daysCountInPreviousYear;\n        const oneDayCreditCostForCurrentMonth = (sum * percentage) / daysCountInCurrentYear;\n\n        paymentByPercents =\n            oneDayCreditCostForPreviousMonth * daysCountInPreviousMonth +\n            oneDayCreditCostForCurrentMonth * daysCountInCurrentMonth;\n    } else {\n        // обычный случай\n        const oneDayCreditCost = (sum * percentage) / daysCountInPreviousYear;\n        paymentByPercents = oneDayCreditCost * getDaysCountBetweenDates(startDate, endDate);\n    }\n\n    return paymentByPercents;\n}\n","import { normalizeDate, getNextMonth, formatDate, formatDateISO, getDateAfterXMonth } from 'src/utils/date';\nimport { roundValue } from 'src/utils/common';\nimport { calculatePercentage, calculateMoneyByPercentage, getBaseLog } from 'src/calc/common';\nimport { CALCULATING_TYPE, PREPAYMENT_REPEAT } from 'src/reducers/creditParams';\n\nexport const MAX_MONTHS_COUNT = 360;\nconst startDate = normalizeDate(new Date());\n// const ERROR_SUM_INCREASED = 'Невозможно взять такой кредит, проценты больше минимального платежа.';\nconst ERROR_TOO_LONG = 'Невозможно взять кредит более чем на 30 лет';\n\nfunction addFormattedFields(row) {\n    row.dateFormatted = formatDate(row.date);\n    row.paymentRounded = roundValue(row.payment);\n    row.paymentByPercentsRounded = roundValue(row.paymentByPercents);\n    row.paymentByCreditRounded = roundValue(row.paymentByCredit);\n    row.overpaymentRounded = roundValue(row.overpayment);\n    row.creditLeftRounded = roundValue(row.creditLeft);\n}\n\nfunction calculateAnnuityPayment(sum, percentage, period) {\n    const percentageInMonth = percentage / 12;\n    const pow = Math.pow(1 + percentageInMonth, period);\n    const annuityFactor = (percentageInMonth * pow) / (pow - 1);\n    const annuityPayment = sum * annuityFactor;\n    return Math.ceil(annuityPayment);\n}\n\nclass Credit {\n    constructor({\n        calculatingType = CALCULATING_TYPE.BY_PAYMENT,\n        creditSum,\n        creditPercent,\n        creditPeriod = 1,\n        paymentPerMonth,\n        prepayments = [],\n    }) {\n        this.calculatingType = calculatingType;\n        this.creditSum = creditSum;\n        this.percentage = creditPercent / 100;\n        this.period = creditPeriod;\n        this.payment = paymentPerMonth;\n        this.prepayments = [];\n        prepayments.forEach((prepayment) => {\n            for (let i = 0; i < MAX_MONTHS_COUNT; i++) {\n                if (prepayment.repeat === PREPAYMENT_REPEAT.NONE.id) {\n                    this.prepayments.push(prepayment);\n                    break;\n                }\n\n                if (\n                    prepayment.repeat === PREPAYMENT_REPEAT.EVERY_MONTH.id ||\n                    (prepayment.repeat === PREPAYMENT_REPEAT.EVERY_THREE_MONTHS.id && i % 3 === 0) ||\n                    (prepayment.repeat === PREPAYMENT_REPEAT.EVERY_HALF_YEAR.id && i % 6 === 0) ||\n                    (prepayment.repeat === PREPAYMENT_REPEAT.EVERY_YEAR.id && i % 12 === 0)\n                ) {\n                    this.prepayments.push({\n                        date: getDateAfterXMonth(prepayment.date, i),\n                        payment: prepayment.payment,\n                    });\n                }\n            }\n        });\n\n        this.creditData = [];\n        this.creditLeft = creditSum;\n\n        this.monthCount = 0;\n        this.currentPaymentDate = new Date(startDate);\n        this.nextPaymentDate = getNextMonth(this.currentPaymentDate);\n        this.error = false;\n    }\n\n    checkCreditEnd() {\n        return this.creditLeft <= 0;\n    }\n\n    makePrepayments() {\n        const currentPaymentDate = formatDateISO(this.currentPaymentDate);\n        const nextPaymentDate = formatDateISO(this.nextPaymentDate);\n\n        // досрочные платежи, которые нужно учесть между платежными датами по графику платежей\n        const currentPrepayments = this.prepayments.filter((prepayment) => {\n            return currentPaymentDate <= prepayment.date && prepayment.date < nextPaymentDate;\n        });\n\n        // периодичные досрочные платежи, которые нужно учесть между платежными датами по графику платежей\n        // const prepaymentEveryMonth = this.prepayments.find((prepayment) => {\n        //     return (\n        //         prepayment.repeat === PREPAYMENT_REPEAT.EVERY_MONTH.id &&\n        //         prepayment.date < nextPaymentDate &&\n        //         !(currentPaymentDate <= prepayment.date && prepayment.date < nextPaymentDate)\n        //     );\n        // });\n        //\n        // // добавляем в список текущих досрочных платежей периодичные досрочные платежи\n        // if (prepaymentEveryMonth) {\n        //     let nextRepeatedDate;\n        //     const date = normalizeDate(new Date(prepaymentEveryMonth.date));\n        //     const day = date.getDate();\n        //\n        //     if (day >= this.currentPaymentDate.getDate()) {\n        //         nextRepeatedDate = new Date(\n        //             this.currentPaymentDate.getFullYear(),\n        //             this.currentPaymentDate.getMonth(),\n        //             day + 1\n        //         );\n        //     } else {\n        //         nextRepeatedDate = new Date(\n        //             this.nextPaymentDate.getFullYear(),\n        //             this.nextPaymentDate.getMonth(),\n        //             day + 1\n        //         );\n        //     }\n        //\n        //     const prepayment = {\n        //         date: formatDateISO(nextRepeatedDate),\n        //         payment: prepaymentEveryMonth.payment,\n        //     };\n        //     currentPrepayments.push(prepayment);\n        // }\n\n        for (let i = 0; i < currentPrepayments.length; i++) {\n            const { date, payment } = currentPrepayments[i];\n            this.calculateSomePayment(normalizeDate(date), payment, true);\n            if (this.checkCreditEnd()) {\n                break;\n            }\n        }\n    }\n\n    calculateSomePayment(date, payment, isPrepayment) {\n        const previousPayment = this.creditData[this.creditData.length - 1];\n        const currentPayment = {\n            number: previousPayment.number + 1,\n            date,\n            payment,\n            isPrepayment,\n        };\n\n        let debtByPercents = calculateMoneyByPercentage(\n            previousPayment.creditLeft,\n            this.percentage,\n            previousPayment.date,\n            currentPayment.date\n        );\n        debtByPercents += previousPayment.debtByPercents;\n\n        // последний платежный месяц\n        if (previousPayment.creditLeft <= payment) {\n            currentPayment.payment = previousPayment.creditLeft + debtByPercents;\n        }\n\n        // Если совершаем досрочный платеж на сумму меньше, чем накало процентов, то погашаем часть процентов,\n        // а остальной долг по процентам запоминаем в debtByPercents, чтобы учесть при следующем платеже\n        const paymentByPercents = Math.min(currentPayment.payment, debtByPercents);\n        const paymentByCredit = Math.max(0, currentPayment.payment - paymentByPercents);\n\n        currentPayment.paymentByPercents = paymentByPercents;\n        currentPayment.debtByPercents = debtByPercents - paymentByPercents;\n        currentPayment.paymentByCredit = paymentByCredit;\n        currentPayment.overpayment = previousPayment.overpayment + currentPayment.paymentByPercents;\n        currentPayment.creditLeft = previousPayment.creditLeft - currentPayment.paymentByCredit;\n\n        addFormattedFields(currentPayment);\n        this.creditLeft = currentPayment.creditLeft;\n        this.creditData.push(currentPayment);\n    }\n\n    calculate() {\n        if (this.calculatingType === CALCULATING_TYPE.BY_PERIOD) {\n            this.payment = calculateAnnuityPayment(this.creditSum, this.percentage, this.period);\n        }\n\n        this.creditData[0] = {\n            number: 0,\n            date: startDate,\n            payment: 0,\n            paymentByPercents: 0,\n            debtByPercents: 0,\n            paymentByCredit: 0,\n            overpayment: 0,\n            creditLeft: this.creditSum,\n        };\n\n        addFormattedFields(this.creditData[0]);\n\n        while (!this.checkCreditEnd()) {\n            this.makePrepayments();\n            if (this.checkCreditEnd()) {\n                break;\n            }\n\n            this.calculateSomePayment(this.nextPaymentDate, this.payment);\n\n            this.monthCount += 1;\n            this.currentPaymentDate = new Date(this.nextPaymentDate);\n            this.nextPaymentDate = getNextMonth(this.nextPaymentDate);\n            if (this.monthCount >= MAX_MONTHS_COUNT) {\n                this.error = ERROR_TOO_LONG;\n                break;\n            }\n        }\n\n        const firstPayment = this.creditData[1];\n        const lastPayment = this.creditData[this.creditData.length - 1];\n\n        return {\n            table: this.creditData,\n            summary: {\n                overpayment: lastPayment.overpayment,\n                overpaymentPercent: calculatePercentage(lastPayment.overpayment, this.creditSum),\n                monthCount: this.monthCount,\n                lastPaymentDate: lastPayment.date,\n                payment: this.payment,\n                onPercentage: calculatePercentage(firstPayment.paymentByPercents, this.payment),\n            },\n            error: this.error,\n        };\n    }\n}\n\nexport function calcApproximateCreditSummary(sum, percentage, payment) {\n    const i = percentage / 12 / 100;\n    const monthCount = getBaseLog(i + 1, payment / (payment - i * sum));\n    const overpayment = payment * monthCount - sum;\n    return {\n        monthCount: Math.ceil(monthCount),\n        overpayment: Math.round(overpayment),\n    };\n}\n\nexport default function calculateCredit(params) {\n    const credit = new Credit(params);\n    return credit.calculate();\n}\n","import calculatePayments from 'src/calc/credit';\nimport { initialCreditParams } from 'src/reducers/creditParams';\n\nconst SET_CREDIT_DATA = 'SET_CREDIT_DATA';\n\nexport function setCreditData(data) {\n    return {\n        type: SET_CREDIT_DATA,\n        data,\n    };\n}\n\nconst initialState = calculatePayments(initialCreditParams);\n\nexport default function creditData(state = initialState, action) {\n    switch (action.type) {\n        case SET_CREDIT_DATA:\n            return action.data;\n        default:\n            return state;\n    }\n}\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport MuiButton from '@material-ui/core/Button';\nimport MuiGrid from '@material-ui/core/Grid';\nimport MuiMenuItem from '@material-ui/core/MenuItem';\n\nimport Box from 'src/components/common/Box';\nimport BoxTitle from 'src/components/common/Box/Title';\nimport Input from 'src/components/common/Input';\nimport Select from 'src/components/common/Select';\nimport Prepayments from 'src/components/CreditForm/Prepayments';\nimport { CALCULATING_TYPE, setCreditParam } from 'src/reducers/creditParams';\nimport { setCreditData } from 'src/reducers/creditData';\nimport calculateCredit from 'src/calc/credit';\n\nexport default function CreditForm() {\n    const { creditParams } = useSelector((state) => state);\n    const dispatch = useDispatch();\n\n    const onChange = (name, value) => {\n        dispatch(setCreditParam(name, value));\n    };\n\n    const onSubmit = (event) => {\n        event.preventDefault();\n        const creditData = calculateCredit(creditParams);\n        dispatch(setCreditData(creditData));\n    };\n\n    return (\n        <>\n            <BoxTitle>Параметры кредита</BoxTitle>\n            <Box>\n                <form onSubmit={onSubmit} noValidate autoComplete=\"off\">\n                    <MuiGrid container spacing={3}>\n                        <MuiGrid item xs={12} md={3} lg={3}>\n                            <Select\n                                value={creditParams.calculatingType}\n                                onChange={({ target }) => onChange('calculatingType', target.value)}\n                                label=\"Способ расчета\"\n                            >\n                                <MuiMenuItem value={CALCULATING_TYPE.BY_PAYMENT}>По сумме платежа</MuiMenuItem>\n                                <MuiMenuItem value={CALCULATING_TYPE.BY_PERIOD}>По сроку кредита</MuiMenuItem>\n                            </Select>\n                        </MuiGrid>\n                        <MuiGrid item xs={12} md={3} lg={3}>\n                            <Input\n                                value={creditParams.creditSum}\n                                onChange={({ target }) => onChange('creditSum', parseFloat(target.value))}\n                                label=\"Сумма кредита\"\n                            />\n                        </MuiGrid>\n                        <MuiGrid item xs={12} md={3} lg={3}>\n                            <Input\n                                value={creditParams.creditPercent}\n                                onChange={({ target }) => onChange('creditPercent', parseFloat(target.value))}\n                                label=\"Процентная ставка\"\n                            />\n                        </MuiGrid>\n                        <MuiGrid item xs={12} md={3} lg={3}>\n                            {creditParams.calculatingType === CALCULATING_TYPE.BY_PAYMENT && (\n                                <Input\n                                    value={creditParams.paymentPerMonth}\n                                    onChange={({ target }) => onChange('paymentPerMonth', parseFloat(target.value))}\n                                    label=\"Ежемесячный платеж\"\n                                />\n                            )}\n                            {creditParams.calculatingType === CALCULATING_TYPE.BY_PERIOD && (\n                                <Input\n                                    value={creditParams.creditPeriod}\n                                    onChange={({ target }) => onChange('creditPeriod', parseFloat(target.value))}\n                                    label=\"Срок кредита, мес.\"\n                                />\n                            )}\n                        </MuiGrid>\n                    </MuiGrid>\n                    <Prepayments />\n                    <MuiGrid container justify=\"flex-end\" spacing={3}>\n                        <MuiGrid item xs={12} md={3} lg={3}>\n                            <MuiButton variant=\"contained\" color=\"primary\" fullWidth type=\"submit\" onClick={onSubmit}>\n                                Рассчитать\n                            </MuiButton>\n                        </MuiGrid>\n                    </MuiGrid>\n                </form>\n            </Box>\n        </>\n    );\n}\n","import React from 'react';\nimport classnames from 'classnames';\nimport MuiTypography from '@material-ui/core/Typography';\nimport MuiDivider from '@material-ui/core/Divider';\n\nimport 'src/components/common/Summary/Summary.css';\nimport Box from 'src/components/common/Box';\n\nexport default function Summary({ icon, iconType, title, value, units, footer }) {\n    return (\n        <Box>\n            <div\n                className={classnames('summary__icon', {\n                    [`summary__icon_${iconType}`]: iconType,\n                })}\n            >\n                {icon}\n            </div>\n            <div className=\"summary__content\">\n                <div className=\"summary__title\">\n                    <MuiTypography component=\"h3\" variant=\"body1\" color=\"textSecondary\">\n                        {title}\n                    </MuiTypography>\n                </div>\n                <MuiTypography component=\"p\" variant=\"h3\">\n                    {value}\n                    <MuiTypography component=\"span\" variant=\"h5\">\n                        {' '}\n                        {units}\n                    </MuiTypography>\n                </MuiTypography>\n            </div>\n            <MuiDivider />\n            <div className=\"summary__footer\">\n                <MuiTypography component=\"p\" color=\"textSecondary\" variant=\"body2\">\n                    {footer}\n                </MuiTypography>\n            </div>\n        </Box>\n    );\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport MuiGrid from '@material-ui/core/Grid';\nimport MuiEventAvailableIcon from '@material-ui/icons/EventAvailable';\nimport MuiAttachMoneyIcon from '@material-ui/icons/AttachMoney';\nimport MuiAccountBalanceWalletIcon from '@material-ui/icons/AccountBalanceWallet';\n\nimport Summary from 'src/components/common/Summary';\nimport { formatDate } from 'src/utils/date';\nimport { priceFormat } from 'src/utils/common';\n\nexport default function CreditSummary() {\n    const {\n        creditData: { summary },\n    } = useSelector((state) => state);\n    return (\n        <MuiGrid container spacing={4}>\n            <MuiGrid item xs={12} md={4} lg={4}>\n                <Summary\n                    title=\"Срок кредита\"\n                    icon={<MuiEventAvailableIcon />}\n                    value={summary.monthCount}\n                    units=\"мес.\"\n                    footer={`Последний платеж – ${formatDate(summary.lastPaymentDate)}`}\n                    iconType=\"success\"\n                />\n            </MuiGrid>\n            <MuiGrid item xs={12} md={4} lg={4}>\n                <Summary\n                    title=\"Минимальный платеж\"\n                    icon={<MuiAccountBalanceWalletIcon />}\n                    value={priceFormat(summary.payment)}\n                    units=\"руб.\"\n                    footer={`${summary.onPercentage}% от этой суммы уйдет на погашение процентов в первый месяц`}\n                    iconType=\"info\"\n                />\n            </MuiGrid>\n            <MuiGrid item xs={12} md={4} lg={4}>\n                <Summary\n                    title=\"Переплата\"\n                    icon={<MuiAttachMoneyIcon />}\n                    value={`${priceFormat(summary.overpayment)}`}\n                    units=\"руб.\"\n                    footer={`Это ${summary.overpaymentPercent}% от суммы кредита`}\n                    iconType=\"warning\"\n                />\n            </MuiGrid>\n        </MuiGrid>\n    );\n}\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport MuiTable from '@material-ui/core/Table';\nimport MuiTableBody from '@material-ui/core/TableBody';\nimport MuiTableCell from '@material-ui/core/TableCell';\nimport MuiTableHead from '@material-ui/core/TableHead';\nimport MuiTableRow from '@material-ui/core/TableRow';\n\nimport 'src/components/CreditDataTable/CreditDataTable.css';\nimport Box from 'src/components/common/Box';\nimport BoxTitle from 'src/components/common/Box/Title';\nimport { priceFormat } from 'src/utils/common';\nimport { formatDate } from 'src/utils/date';\nimport MuiGrid from '@material-ui/core/Grid';\nimport MuiButton from '@material-ui/core/Button';\n\n// В первой строке нулевой платёж,\n// сдвигаем всё на 1 вперёд\nconst SHIFT = 1;\nconst MONTHS_PER_PAGE = 30;\n\nexport default function CreditDataTable() {\n    const { creditData } = useSelector((state) => state);\n\n    const [visibleRows, setVisibleRows] = useState(0);\n    useEffect(() => {\n        setVisibleRows(MONTHS_PER_PAGE);\n    }, [creditData]);\n    const rows = creditData.table.slice(SHIFT, visibleRows + SHIFT);\n    const totalRows = creditData.table.length - SHIFT;\n    const restOfRows = Math.max(totalRows - visibleRows, 0);\n    const nextRows = restOfRows < MONTHS_PER_PAGE * 1.3 ? restOfRows : MONTHS_PER_PAGE;\n    const showMoreRows = useCallback(() => {\n        setVisibleRows(visibleRows + nextRows);\n    }, [nextRows, visibleRows]);\n\n    return useMemo(\n        () => (\n            <Box>\n                <BoxTitle>График платежей</BoxTitle>\n                <MuiTable size=\"small\" stickyHeader>\n                    <MuiTableHead>\n                        <MuiTableRow>\n                            <MuiTableCell>№</MuiTableCell>\n                            <MuiTableCell>Дата</MuiTableCell>\n                            <MuiTableCell align=\"right\">Платеж</MuiTableCell>\n                            <MuiTableCell align=\"right\">По процентам</MuiTableCell>\n                            <MuiTableCell align=\"right\">По кредиту</MuiTableCell>\n                            <MuiTableCell align=\"right\">Переплата</MuiTableCell>\n                            <MuiTableCell align=\"right\">Остаток долга</MuiTableCell>\n                        </MuiTableRow>\n                    </MuiTableHead>\n                    <MuiTableBody>\n                        {rows.map((row) => (\n                            <MuiTableRow key={row.number}>\n                                <MuiTableCell>{row.number}.</MuiTableCell>\n                                <MuiTableCell>\n                                    {formatDate(row.date)}\n                                    &nbsp;\n                                    {row.isPrepayment && '*'}\n                                </MuiTableCell>\n                                <MuiTableCell align=\"right\">{priceFormat(row.payment)}</MuiTableCell>\n                                <MuiTableCell align=\"right\">{priceFormat(row.paymentByPercents)}</MuiTableCell>\n                                <MuiTableCell align=\"right\">{priceFormat(row.paymentByCredit)}</MuiTableCell>\n                                <MuiTableCell align=\"right\">{priceFormat(row.overpayment)}</MuiTableCell>\n                                <MuiTableCell align=\"right\">{priceFormat(row.creditLeft)}</MuiTableCell>\n                            </MuiTableRow>\n                        ))}\n                    </MuiTableBody>\n                </MuiTable>\n                {nextRows ? (\n                    <MuiGrid item xs={12} onClick={showMoreRows}>\n                        <MuiButton color=\"primary\">{`Показать ещё ${nextRows}`}</MuiButton>\n                    </MuiGrid>\n                ) : null}\n            </Box>\n        ),\n        [nextRows, rows, showMoreRows]\n    );\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport MuiGrid from '@material-ui/core/Grid';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nimport CreditSummary from 'src/components/CreditSummary';\nimport CreditDataTable from 'src/components/CreditDataTable';\n\nconst CreditCalculation = () => {\n    const {\n        creditData: { error },\n    } = useSelector((state) => state);\n    return error ? (\n        <MuiGrid item xs={12}>\n            <MuiAlert severity=\"error\">{error}</MuiAlert>\n        </MuiGrid>\n    ) : (\n        <>\n            <CreditSummary />\n            <MuiGrid container spacing={4}>\n                <MuiGrid item xs={12}>\n                    <CreditDataTable />\n                </MuiGrid>\n            </MuiGrid>\n        </>\n    );\n};\n\nexport default CreditCalculation;\n","const SET_DEPOSIT_PARAM = 'SET_DEPOSIT_PARAM';\n\nexport function setDepositParam(name, value) {\n    return {\n        type: SET_DEPOSIT_PARAM,\n        name,\n        value,\n    };\n}\n\nexport const initialDepositParams = {\n    initialSum: 0,\n    percentage: 5,\n    payment: 50000,\n    period: 12,\n};\n\nexport default function depositParams(state = initialDepositParams, action) {\n    switch (action.type) {\n        case SET_DEPOSIT_PARAM:\n            return {\n                ...state,\n                [action.name]: action.value,\n            };\n        default:\n            return state;\n    }\n}\n","import { calculateMoneyByPercentage } from 'src/calc/common';\n\nimport { normalizeDate, getNextMonth } from 'src/utils/date';\n\nconst startDate = normalizeDate(new Date());\n\nclass Deposit {\n    constructor({ initialSum, percentage, payment, period }) {\n        this.sum = initialSum;\n        this.percentage = percentage / 100;\n        this.payment = payment;\n        this.period = period;\n\n        this.depositeDate = [];\n    }\n\n    calculateSomePayment() {\n        const previousMonth = this.depositeDate[this.depositeDate.length - 1];\n        const currentMonth = {\n            number: previousMonth.number + 1,\n            date: getNextMonth(previousMonth.date),\n            payment: this.payment,\n        };\n\n        const income = calculateMoneyByPercentage(\n            previousMonth.sum,\n            this.percentage,\n            previousMonth.date,\n            currentMonth.date\n        );\n\n        currentMonth.income = income;\n        currentMonth.totalIncome = previousMonth.totalIncome + income;\n        currentMonth.sum = previousMonth.sum + income + this.payment;\n\n        this.depositeDate.push(currentMonth);\n    }\n\n    calculate() {\n        this.depositeDate[0] = {\n            number: 0,\n            date: startDate,\n            sum: this.sum,\n            income: 0,\n            totalIncome: 0,\n            payment: 0,\n        };\n\n        while (this.period) {\n            this.calculateSomePayment();\n            this.period -= 1;\n        }\n\n        const lastPayment = this.depositeDate[this.depositeDate.length - 1];\n\n        return {\n            table: this.depositeDate,\n            summary: {\n                period: this.depositeDate.length - 1,\n                endDate: lastPayment.date,\n                totalIncome: lastPayment.totalIncome,\n                totalSum: lastPayment.sum,\n            },\n        };\n    }\n}\n\nexport function calcApproximateDepositSummary(percentage, payment, monthCount) {\n    const i = percentage / 12 / 100;\n    const sum = (payment * (Math.pow(1 + i, monthCount) - 1)) / i;\n    return Math.round(sum);\n}\n\nexport default function calculateDeposit(params) {\n    const deposit = new Deposit(params);\n    return deposit.calculate();\n}\n","import calculateDeposit from 'src/calc/deposit';\nimport { initialDepositParams } from 'src/reducers/depositParams';\n\nconst SET_DEPOSIT_DATA = 'SET_DEPOSIT_DATA';\n\nexport function setDepositData(data) {\n    return {\n        type: SET_DEPOSIT_DATA,\n        data,\n    };\n}\n\nconst initialState = calculateDeposit(initialDepositParams);\n\nexport default function depositData(state = initialState, action) {\n    switch (action.type) {\n        case SET_DEPOSIT_DATA:\n            return action.data;\n        default:\n            return state;\n    }\n}\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport MuiButton from '@material-ui/core/Button';\nimport MuiGrid from '@material-ui/core/Grid';\n\nimport Box from 'src/components/common/Box';\nimport BoxTitle from 'src/components/common/Box/Title';\nimport Input from 'src/components/common/Input';\nimport { setDepositParam } from 'src/reducers/depositParams';\nimport { setDepositData } from 'src/reducers/depositData';\nimport calculateDeposit from 'src/calc/deposit';\n\nexport default function CreditForm() {\n    const { depositParams } = useSelector((state) => state);\n    const dispatch = useDispatch();\n\n    const onChange = (name, value) => {\n        dispatch(setDepositParam(name, value));\n    };\n\n    const onSubmit = (event) => {\n        event.preventDefault();\n        const depositData = calculateDeposit(depositParams);\n        dispatch(setDepositData(depositData));\n    };\n\n    return (\n        <>\n            <BoxTitle>Параметры вклада</BoxTitle>\n            <Box>\n                <form onSubmit={onSubmit} noValidate autoComplete=\"off\">\n                    <MuiGrid container spacing={3}>\n                        <MuiGrid item xs={12} md={3} lg={3}>\n                            <Input\n                                value={depositParams.initialSum}\n                                onChange={({ target }) => onChange('initialSum', parseFloat(target.value))}\n                                label=\"Первоначальный вклад\"\n                            />\n                        </MuiGrid>\n                        <MuiGrid item xs={12} md={3} lg={3}>\n                            <Input\n                                value={depositParams.percentage}\n                                onChange={({ target }) => onChange('percentage', parseFloat(target.value))}\n                                label=\"Процентная ставка\"\n                            />\n                        </MuiGrid>\n                        <MuiGrid item xs={12} md={3} lg={3}>\n                            <Input\n                                value={depositParams.payment}\n                                onChange={({ target }) => onChange('payment', parseFloat(target.value))}\n                                label=\"Ежемесячное пополнение\"\n                            />\n                        </MuiGrid>\n                        <MuiGrid item xs={12} md={3} lg={3}>\n                            <Input\n                                value={depositParams.period}\n                                onChange={({ target }) => onChange('period', parseFloat(target.value))}\n                                label=\"Срок вклада, мес.\"\n                            />\n                        </MuiGrid>\n                    </MuiGrid>\n                    <MuiGrid container justify=\"flex-end\" spacing={3}>\n                        <MuiGrid item xs={12} md={3} lg={3}>\n                            <MuiButton variant=\"contained\" color=\"primary\" fullWidth type=\"submit\" onClick={onSubmit}>\n                                Рассчитать\n                            </MuiButton>\n                        </MuiGrid>\n                    </MuiGrid>\n                </form>\n            </Box>\n        </>\n    );\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport MuiGrid from '@material-ui/core/Grid';\nimport MuiEventAvailableIcon from '@material-ui/icons/EventAvailable';\nimport MuiAttachMoneyIcon from '@material-ui/icons/AttachMoney';\nimport MuiAccountBalanceWalletIcon from '@material-ui/icons/AccountBalanceWallet';\n\nimport Summary from 'src/components/common/Summary';\nimport { formatDate } from 'src/utils/date';\nimport { priceFormat } from 'src/utils/common';\n\nexport default function DepositSummary() {\n    const {\n        depositData: { summary },\n    } = useSelector((state) => state);\n\n    return (\n        <MuiGrid container spacing={4}>\n            <MuiGrid item xs={12} md={4} lg={4}>\n                <Summary\n                    title=\"Срок кредита\"\n                    icon={<MuiEventAvailableIcon />}\n                    value={summary.period}\n                    units=\"мес.\"\n                    footer={`Дата выплаты вклада – ${formatDate(summary.endDate)}`}\n                    iconType=\"success\"\n                />\n            </MuiGrid>\n            <MuiGrid item xs={12} md={4} lg={4}>\n                <Summary\n                    title=\"Доход от процентов\"\n                    icon={<MuiAccountBalanceWalletIcon />}\n                    value={priceFormat(summary.totalIncome)}\n                    units=\"руб.\"\n                    iconType=\"info\"\n                />\n            </MuiGrid>\n            <MuiGrid item xs={12} md={4} lg={4}>\n                <Summary\n                    title=\"Итоговая сумма вклада\"\n                    icon={<MuiAttachMoneyIcon />}\n                    value={priceFormat(summary.totalSum)}\n                    units=\"руб.\"\n                    iconType=\"warning\"\n                />\n            </MuiGrid>\n        </MuiGrid>\n    );\n}\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport MuiTable from '@material-ui/core/Table';\nimport MuiTableBody from '@material-ui/core/TableBody';\nimport MuiTableCell from '@material-ui/core/TableCell';\nimport MuiTableHead from '@material-ui/core/TableHead';\nimport MuiTableRow from '@material-ui/core/TableRow';\nimport MuiButton from '@material-ui/core/Button';\nimport MuiGrid from '@material-ui/core/Grid';\n\nimport Box from 'src/components/common/Box';\nimport BoxTitle from 'src/components/common/Box/Title';\nimport { priceFormat } from 'src/utils/common';\nimport { formatDate } from 'src/utils/date';\n\n// В первой строке нулевой платёж,\n// сдвигаем всё на 1 вперёд\nconst SHIFT = 1;\nconst MONTHS_PER_PAGE = 30;\n\nexport default function DepositDataTable() {\n    const { depositData } = useSelector((state) => state);\n\n    const [visibleRows, setVisibleRows] = useState(0);\n    useEffect(() => {\n        setVisibleRows(MONTHS_PER_PAGE);\n    }, [depositData]);\n    const rows = depositData.table.slice(SHIFT, visibleRows + SHIFT);\n    const totalRows = depositData.table.length - SHIFT;\n    const restOfRows = Math.max(totalRows - visibleRows, 0);\n    const nextRows = restOfRows < MONTHS_PER_PAGE * 1.3 ? restOfRows : MONTHS_PER_PAGE;\n    const showMoreRows = useCallback(() => {\n        setVisibleRows(visibleRows + nextRows);\n    }, [nextRows, visibleRows]);\n\n    return useMemo(\n        () => (\n            <>\n                <BoxTitle>Вклад по месяцам</BoxTitle>\n                <Box>\n                    <MuiTable size=\"small\" stickyHeader>\n                        <MuiTableHead>\n                            <MuiTableRow>\n                                <MuiTableCell>№</MuiTableCell>\n                                <MuiTableCell>Дата</MuiTableCell>\n                                <MuiTableCell align=\"right\">Пополнение</MuiTableCell>\n                                <MuiTableCell align=\"right\">Доход по процентам</MuiTableCell>\n                                <MuiTableCell align=\"right\">Сумма вклада</MuiTableCell>\n                            </MuiTableRow>\n                        </MuiTableHead>\n                        <MuiTableBody>\n                            {rows.map((row, index) => (\n                                <MuiTableRow key={index}>\n                                    <MuiTableCell />\n                                    <MuiTableCell>{formatDate(row.date)}</MuiTableCell>\n                                    <MuiTableCell align=\"right\">{priceFormat(row.payment)}</MuiTableCell>\n                                    <MuiTableCell align=\"right\">{priceFormat(row.income)}</MuiTableCell>\n                                    <MuiTableCell align=\"right\">{priceFormat(row.sum)}</MuiTableCell>\n                                </MuiTableRow>\n                            ))}\n                        </MuiTableBody>\n                    </MuiTable>\n                    {nextRows ? (\n                        <MuiGrid item xs={12} onClick={showMoreRows}>\n                            <MuiButton color=\"primary\">{`Показать ещё ${nextRows}`}</MuiButton>\n                        </MuiGrid>\n                    ) : null}\n                </Box>\n            </>\n        ),\n        [nextRows, rows, showMoreRows]\n    );\n}\n","import React, { useState } from 'react';\nimport MuiButton from '@material-ui/core/Button';\nimport MuiGrid from '@material-ui/core/Grid';\n\nimport Box from 'src/components/common/Box';\nimport BoxTitle from 'src/components/common/Box/Title';\nimport Input from 'src/components/common/Input';\nimport calculateCredit, { calcApproximateCreditSummary } from 'src/calc/credit';\nimport calculateDeposit, { calcApproximateDepositSummary } from 'src/calc/deposit';\nimport { priceFormat } from 'src/utils/common';\n\nexport default function CreditStrategyForm() {\n    const [creditSum, setCreditSum] = useState(4000000);\n    const [creditPercentage, setCreditPercentage] = useState(10);\n    const [creditPayment, setCreditPayment] = useState(50000);\n\n    const [depositPercentage, setDepositPercentage] = useState(5);\n    const [depositPayment, setDepositPayment] = useState(50000);\n\n    const [strategyOnlyCredit, setStrategyOnlyCredit] = useState({});\n    const [strategyCreditAndDeposit, setStrategyCreditAndDeposit] = useState({});\n    const [strategyRepayCreditWithDeposit, setStrategyRepayCreditWithDeposit] = useState({});\n\n    const onSubmit = (event) => {\n        event.preventDefault();\n\n        const totalPayment = creditPayment + depositPayment;\n\n        // Старатегия 2. Платим кредит и параллельно пополняем вклад\n        const strategy2 = calcApproximateCreditSummary(creditSum, creditPercentage, creditPayment);\n        const strategy2Deposit = calcApproximateDepositSummary(depositPercentage, depositPayment, strategy2.monthCount);\n        setStrategyCreditAndDeposit({\n            monthCount: strategy2.monthCount,\n            overpayment: strategy2.overpayment,\n            depositSum: strategy2Deposit,\n        });\n\n        // Стратегия 1. Все платим за кредит\n        const strategy1 = calcApproximateCreditSummary(creditSum, creditPercentage, totalPayment);\n        // const strategy1Deposit = calcApproximateDepositSummary(\n        //     depositPercentage,\n        //     totalPayment,\n        //     strategy2.monthCount - strategy1.monthCount\n        // );\n        setStrategyOnlyCredit({\n            monthCount: strategy1.monthCount,\n            overpayment: strategy1.overpayment,\n            depositSum: 0,\n        });\n\n        // Стратегия 3. Платим кредит и параллельно пополняем вклад пока его не хватит на погашение остатка по кредиту\n        const strategy3 = {\n            creditData: calculateCredit({\n                creditSum,\n                creditPercent: creditPercentage,\n                paymentPerMonth: creditPayment,\n            }),\n        };\n        strategy3.depositData = calculateDeposit({\n            initialSum: 0,\n            percentage: depositPercentage,\n            payment: depositPayment,\n            period: strategy3.creditData.summary.monthCount,\n        });\n\n        // находим месяц, в котором сумма вклада будет больше остатка по кредиту\n        let monthCount = strategy3.creditData.table.length;\n        for (let i = 0; i < strategy3.creditData.table.length; i++) {\n            if (strategy3.depositData.table[i].sum >= strategy3.creditData.table[i].creditLeft) {\n                monthCount = i;\n                break;\n            }\n        }\n\n        console.log(monthCount);\n        console.log(strategy3.creditData.table);\n\n        setStrategyRepayCreditWithDeposit({\n            monthCount,\n            overpayment: strategy3.creditData.table[monthCount].overpayment,\n            depositSum: 0,\n        });\n    };\n\n    return (\n        <>\n            <BoxTitle>Стратегии погашения кредита</BoxTitle>\n            <Box>\n                <form onSubmit={onSubmit} noValidate autoComplete=\"off\">\n                    <MuiGrid container spacing={3}>\n                        <MuiGrid item xs={12} md={3} lg={3}>\n                            <Input\n                                value={creditSum}\n                                onChange={({ target }) => setCreditSum(parseFloat(target.value))}\n                                label=\"Сумма кредита\"\n                            />\n                        </MuiGrid>\n                        <MuiGrid item xs={12} md={3} lg={3}>\n                            <Input\n                                value={creditPercentage}\n                                onChange={({ target }) => setCreditPercentage(parseFloat(target.value))}\n                                label=\"Процентная ставка\"\n                            />\n                        </MuiGrid>\n                        <MuiGrid item xs={12} md={3} lg={3}>\n                            <Input\n                                value={creditPayment}\n                                onChange={({ target }) => setCreditPayment(parseFloat(target.value))}\n                                label=\"Платеж по кредиту\"\n                            />\n                        </MuiGrid>\n                    </MuiGrid>\n                    <MuiGrid container spacing={3}>\n                        <MuiGrid item xs={12} md={3} lg={3} />\n                        <MuiGrid item xs={12} md={3} lg={3}>\n                            <Input\n                                value={depositPercentage}\n                                onChange={({ target }) => setDepositPercentage(parseFloat(target.value))}\n                                label=\"Процентная ставка\"\n                            />\n                        </MuiGrid>\n                        <MuiGrid item xs={12} md={3} lg={3}>\n                            <Input\n                                value={depositPayment}\n                                onChange={({ target }) => setDepositPayment(parseFloat(target.value))}\n                                label=\"Поплнение вклада\"\n                            />\n                        </MuiGrid>\n                    </MuiGrid>\n                    <MuiGrid container justify=\"flex-end\" spacing={3}>\n                        <MuiGrid item xs={12} md={3} lg={3}>\n                            <MuiButton variant=\"contained\" color=\"primary\" fullWidth type=\"submit\" onClick={onSubmit}>\n                                Рассчитать\n                            </MuiButton>\n                        </MuiGrid>\n                    </MuiGrid>\n                </form>\n            </Box>\n\n            <MuiGrid container spacing={3}>\n                <MuiGrid item xs={12} md={3} lg={3}>\n                    <BoxTitle>Только кредит</BoxTitle>\n                    <Box>\n                        Скрок кредита <b>{strategyOnlyCredit.monthCount} мес</b>.\n                        <br />\n                        Переплата <b>{priceFormat(strategyOnlyCredit.overpayment)} руб.</b>\n                        <br />\n                        Сумма на вкладе в конце срока <b>{priceFormat(strategyOnlyCredit.depositSum)} руб.</b>\n                    </Box>\n                </MuiGrid>\n\n                <MuiGrid item xs={12} md={3} lg={3}>\n                    <BoxTitle>Кредит + Вклад</BoxTitle>\n                    <Box>\n                        Скрок кредита <b>{strategyCreditAndDeposit.monthCount} мес</b>.\n                        <br />\n                        Переплата <b>{priceFormat(strategyCreditAndDeposit.overpayment)} руб.</b>\n                        <br />\n                        Сумма на вкладе в конце срока <b>{priceFormat(strategyCreditAndDeposit.depositSum)} руб.</b>\n                    </Box>\n                </MuiGrid>\n\n                <MuiGrid item xs={12} md={3} lg={3}>\n                    <BoxTitle>Кредит + погашение вкладом</BoxTitle>\n                    <Box>\n                        Скрок кредита <b>{strategyRepayCreditWithDeposit.monthCount} мес</b>.\n                        <br />\n                        Переплата <b>{priceFormat(strategyRepayCreditWithDeposit.overpayment)} руб.</b>\n                        <br />\n                        Сумма на вкладе в конце срока{' '}\n                        <b>{priceFormat(strategyRepayCreditWithDeposit.depositSum)} руб.</b>\n                    </Box>\n                </MuiGrid>\n            </MuiGrid>\n        </>\n    );\n}\n","import { withStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\n\nconst LargeInput = withStyles(() => ({ input: { fontSize: 24 } }))(Input);\n\nexport default LargeInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport MuiInputLabel from '@material-ui/core/InputLabel';\nimport MuiFormControl from '@material-ui/core/FormControl';\n\nimport LargeInput from 'src/components/common/Input/LargeInput';\nimport MuiInputAdornment from '@material-ui/core/InputAdornment';\nimport MuiIconButton from '@material-ui/core/IconButton';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\n\nconst NumberInput = ({\n    label,\n    onChange,\n    units,\n    step,\n    shiftStep,\n    value,\n    minValue,\n    maxValue,\n    valueProcessor,\n    ...props\n}) => {\n    const parsedValue = valueProcessor(parseFloat(value));\n    const onInputChange = ({ target: { value } }) => {\n        const floatValue = parseFloat(value);\n        if (!isNaN(floatValue)) {\n            onChange(floatValue);\n        }\n    };\n    const onDecrease = ({ shiftKey }) => {\n        if (!isNaN(parsedValue)) {\n            onChange(Math.max(parsedValue - (shiftKey ? shiftStep : step), minValue));\n        }\n    };\n    const onIncrease = ({ shiftKey }) => {\n        if (!isNaN(parsedValue)) {\n            onChange(Math.min(parsedValue + (shiftKey ? shiftStep : step), maxValue));\n        }\n    };\n    return (\n        <MuiFormControl fullWidth>\n            <MuiInputLabel>{label}</MuiInputLabel>\n            <LargeInput\n                {...props}\n                value={valueProcessor(value)}\n                onChange={onInputChange}\n                startAdornment={\n                    <MuiInputAdornment position=\"start\">\n                        <MuiIconButton\n                            style={{ marginLeft: -15 }}\n                            aria-label={`Уменьшить`}\n                            onClick={onDecrease}\n                            disabled={isNaN(parsedValue)}\n                        >\n                            <RemoveIcon />\n                        </MuiIconButton>\n                    </MuiInputAdornment>\n                }\n                endAdornment={\n                    <MuiInputAdornment position=\"end\">\n                        <MuiIconButton\n                            style={{ marginRight: -15 }}\n                            aria-label={`Увеличить`}\n                            onClick={onIncrease}\n                            disabled={isNaN(parsedValue)}\n                        >\n                            <AddIcon />\n                        </MuiIconButton>\n                    </MuiInputAdornment>\n                }\n            />\n        </MuiFormControl>\n    );\n};\n\nNumberInput.defaultProps = {\n    valueProcessor: (value) => value,\n    minValue: 0,\n    maxValue: Infinity,\n};\n\nNumberInput.propTypes = {\n    label: PropTypes.string,\n    value: PropTypes.string,\n    minValue: PropTypes.number,\n    maxValue: PropTypes.number,\n    step: PropTypes.number,\n    onChange: PropTypes.func,\n};\n\nexport default NumberInput;\n","import React from 'react';\n\nimport MuiTextField from '@material-ui/core/TextField';\n\nconst LargeSelect = ({ children, ...otherProps }) => {\n    return (\n        <MuiTextField select fullWidth {...otherProps}>\n            {children}\n        </MuiTextField>\n    );\n};\n\nexport default LargeSelect;\n","import React from 'react';\n\nimport MuiTooltip from '@material-ui/core/Tooltip';\nimport MuiTypography from '@material-ui/core/Typography';\nimport MuiIconButton from '@material-ui/core/IconButton';\nimport HelpIcon from '@material-ui/icons/Help';\nimport { makeStyles } from '@material-ui/core/styles';\n\n// import { withStyles } from '@material-ui/core/styles';\n// const LightTooltip = withStyles((theme) => ({\n//     tooltip: {\n//         backgroundColor: theme.palette.common.white,\n//         color: 'rgba(0, 0, 0, 0.87)',\n//         boxShadow: theme.shadows[1],\n//         fontSize: 11,\n//     },\n// }))(MuiTooltip);\n\nconst useStylesBootstrap = makeStyles((theme) => ({\n    arrow: {\n        color: theme.palette.common.black,\n    },\n    tooltip: {\n        backgroundColor: theme.palette.common.black,\n    },\n}));\n\nfunction BootstrapTooltip(props) {\n    const classes = useStylesBootstrap();\n\n    return <MuiTooltip arrow classes={classes} {...props} />;\n}\n\nconst Wtf = ({ children }) => {\n    return (\n        <BootstrapTooltip title={<MuiTypography>{children}</MuiTypography>}>\n            <MuiIconButton size=\"small\">\n                <HelpIcon />\n            </MuiIconButton>\n        </BootstrapTooltip>\n    );\n};\n\nexport default Wtf;\n","import { addItemIfNotExists, removeItem, removeProperty } from 'src/utils/common';\nimport calculatePayments from 'src/calc/credit';\nimport { initialCreditParams } from 'src/reducers/creditParams';\n\nconst SAVE_CREDIT = 'SAVE_CREDIT';\nconst ADD_CREDIT = 'ADD_CREDIT';\nconst REMOVE_CREDIT = 'REMOVE_CREDIT';\nconst SET_ACTIVE = 'SET_ACTIVE';\n\nexport function addCredit(payload) {\n    return {\n        type: SAVE_CREDIT,\n        payload,\n    };\n}\n\nexport function saveCredit(payload) {\n    return {\n        type: SAVE_CREDIT,\n        payload,\n    };\n}\n\nexport function setActive({ name }) {\n    return {\n        type: SET_ACTIVE,\n        payload: { name },\n    };\n}\n\nconst initialPayments = calculatePayments(initialCreditParams);\nconst DEFAULT_NAME = 'default';\n\nexport const initialCredits = {\n    names: [DEFAULT_NAME],\n    active: DEFAULT_NAME,\n    creditByName: {\n        default: {\n            ...initialCreditParams,\n            name: DEFAULT_NAME,\n            creditPeriod: initialPayments.summary.monthCount,\n        },\n    },\n    scheduleByName: {\n        default: initialPayments,\n    },\n};\n\nexport default function credits(state = initialCredits, { type, payload }) {\n    switch (type) {\n        case ADD_CREDIT:\n        case SAVE_CREDIT: {\n            const creditParams = { ...payload };\n            return {\n                ...state,\n                names: addItemIfNotExists(state.names, payload.name),\n                creditByName: { ...state.creditByName, [payload.name]: creditParams },\n                scheduleByName: {\n                    ...state.scheduleByName,\n                    [payload.name]: calculatePayments(creditParams),\n                },\n            };\n        }\n        case REMOVE_CREDIT:\n            return {\n                ...state,\n                names: removeItem(state.names, payload.name),\n                creditByName: removeProperty(state.creditByName, payload.name),\n                scheduleByName: removeProperty(state.scheduleByName, payload.name),\n                active: state.active === payload.name ? null : state.active,\n            };\n        case SET_ACTIVE:\n            return {\n                ...state,\n                active: payload.name,\n            };\n        default:\n            return state;\n    }\n}\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport MuiBox from '@material-ui/core/Box';\nimport MuiGrid from '@material-ui/core/Grid';\nimport MuiButton from '@material-ui/core/Button';\nimport MuiTypography from '@material-ui/core/Typography';\n\nimport Box from 'src/components/common/Box';\nimport NumberInput from 'src/components/common/Input/NumberInput';\nimport LargeSelect from 'src/components/common/Select/LargeSelect';\nimport Wtf from 'src/components/common/Wtf';\nimport { saveCredit, setActive } from 'src/reducers/credits';\nimport { setCreditData } from 'src/reducers/creditData';\nimport { numConversion, priceFormat } from 'src/utils/common';\nimport MuiMenuItem from '@material-ui/core/MenuItem';\nimport { CALCULATING_TYPE } from 'src/reducers/creditParams';\nimport { MAX_MONTHS_COUNT } from 'src/calc/credit';\n\nexport default function CreditForm({ name }) {\n    const { creditByName, scheduleByName, active } = useSelector(({ credits }) => credits);\n    const creditParams = creditByName[name];\n    const creditSchedule = scheduleByName[name];\n    const isActive = active === creditParams.name;\n    const dispatch = useDispatch();\n\n    const onChange = (field, value) => {\n        if (creditParams.hasOwnProperty(field)) {\n            dispatch(\n                saveCredit({\n                    ...creditParams,\n                    name,\n                    [field]: value,\n                })\n            );\n        }\n    };\n\n    const onSubmit = (event) => {\n        event.preventDefault();\n        dispatch(setActive({ name: creditParams.name }));\n        dispatch(setCreditData(scheduleByName[creditParams.name]));\n    };\n\n    return (\n        <Box elevation={isActive ? 10 : 2}>\n            <form onSubmit={onSubmit} noValidate autoComplete=\"off\">\n                <MuiGrid container spacing={3} direction=\"column\">\n                    <MuiGrid item xs={12}>\n                        <LargeSelect\n                            value={creditParams.calculatingType}\n                            onChange={({ target }) => onChange('calculatingType', target.value)}\n                            label=\"Способ расчёта\"\n                        >\n                            <MuiMenuItem value={CALCULATING_TYPE.BY_PAYMENT}>По сумме платежа</MuiMenuItem>\n                            <MuiMenuItem value={CALCULATING_TYPE.BY_PERIOD}>По сроку кредита</MuiMenuItem>\n                        </LargeSelect>\n                    </MuiGrid>\n                    <MuiGrid item xs={12}>\n                        <NumberInput\n                            value={String(creditParams.creditPercent)}\n                            onChange={(value) => onChange('creditPercent', value)}\n                            label=\"Процентная ставка\"\n                            units=\"%\"\n                            step={0.5}\n                            shiftStep={0.1}\n                            minValue={0}\n                            maxValue={100}\n                            valueProcessor={(value) => Math.round(value * 10) / 10}\n                        />\n                    </MuiGrid>\n                    <MuiGrid item xs={12}>\n                        <NumberInput\n                            value={String(creditParams.creditSum)}\n                            onChange={(value) => onChange('creditSum', value)}\n                            label=\"Сумма кредита\"\n                            units=\"₽\"\n                            step={500000}\n                            shiftStep={100000}\n                            minValue={50000}\n                            maxValue={100000000}\n                        />\n                    </MuiGrid>\n                    <MuiGrid item xs={12}>\n                        {creditParams.calculatingType === CALCULATING_TYPE.BY_PAYMENT && (\n                            <NumberInput\n                                value={String(creditParams.paymentPerMonth)}\n                                onChange={(value) => onChange('paymentPerMonth', value)}\n                                label=\"Платёж в месяц\"\n                                units=\"₽\"\n                                step={5000}\n                                shiftStep={1000}\n                                minValue={1000}\n                                maxValue={100000000}\n                            />\n                        )}\n                        {creditParams.calculatingType === CALCULATING_TYPE.BY_PERIOD && (\n                            <NumberInput\n                                value={String(creditParams.creditPeriod)}\n                                onChange={(value) => onChange('creditPeriod', value)}\n                                label=\"Срок кредита, мес.\"\n                                units=\"мес\"\n                                step={12}\n                                shiftStep={1}\n                                minValue={1}\n                                maxValue={MAX_MONTHS_COUNT}\n                            />\n                        )}\n                    </MuiGrid>\n                    {creditParams.calculatingType === CALCULATING_TYPE.BY_PAYMENT && (\n                        <MuiGrid item xs={12}>\n                            <MuiTypography component=\"h3\" variant=\"subtitle1\" color=\"textSecondary\">\n                                Срок кредита\n                            </MuiTypography>\n                            {creditSchedule.error ? (\n                                <MuiTypography component=\"span\" variant=\"h4\">\n                                    <MuiTypography component=\"span\" variant=\"h5\">\n                                        Ошибка <Wtf>{creditSchedule.error}</Wtf>\n                                    </MuiTypography>\n                                </MuiTypography>\n                            ) : (\n                                <>\n                                    <MuiTypography component=\"span\" variant=\"h4\">\n                                        {creditSchedule.summary.monthCount}&thinsp;\n                                    </MuiTypography>\n                                    <MuiTypography component=\"span\" variant=\"h5\">\n                                        {numConversion(creditSchedule.summary.monthCount, [\n                                            'месяц',\n                                            'месяца',\n                                            'месяцев',\n                                        ])}\n                                    </MuiTypography>\n                                </>\n                            )}\n                        </MuiGrid>\n                    )}\n                    {creditParams.calculatingType === CALCULATING_TYPE.BY_PERIOD && (\n                        <MuiGrid item xs={12}>\n                            <MuiTypography component=\"h3\" variant=\"subtitle1\" color=\"textSecondary\">\n                                Минимальный платёж\n                            </MuiTypography>\n                            {creditSchedule.error ? (\n                                <MuiTypography component=\"span\" variant=\"h4\">\n                                    <MuiTypography component=\"span\" variant=\"h5\">\n                                        Ошибка <Wtf>{creditSchedule.error}</Wtf>\n                                    </MuiTypography>\n                                </MuiTypography>\n                            ) : (\n                                <>\n                                    <MuiTypography component=\"span\" variant=\"h4\">\n                                        {priceFormat(creditSchedule.summary.payment)}&thinsp;\n                                    </MuiTypography>\n                                    <MuiTypography component=\"span\" variant=\"h5\">\n                                        ₽\n                                    </MuiTypography>\n                                </>\n                            )}\n                        </MuiGrid>\n                    )}\n                    <MuiGrid item xs={12}>\n                        <MuiBox mt={-2}>\n                            <MuiTypography component=\"h3\" variant=\"subtitle1\" color=\"textSecondary\">\n                                Переплата\n                            </MuiTypography>\n                            {creditSchedule.error ? (\n                                <MuiTypography component=\"span\" variant=\"h4\">\n                                    <MuiTypography component=\"span\" variant=\"h5\">\n                                        Ошибка <Wtf>{creditSchedule.error}</Wtf>\n                                    </MuiTypography>\n                                </MuiTypography>\n                            ) : (\n                                <>\n                                    <MuiTypography component=\"span\" variant=\"h4\">\n                                        {priceFormat(creditSchedule.summary.overpayment)}&thinsp;\n                                    </MuiTypography>\n                                    <MuiTypography component=\"span\" variant=\"h5\">\n                                        ₽\n                                    </MuiTypography>\n                                </>\n                            )}\n                        </MuiBox>\n                    </MuiGrid>\n                    <MuiGrid item xs={12}>\n                        <MuiButton\n                            size=\"large\"\n                            variant=\"contained\"\n                            color={isActive ? 'primary' : 'default'}\n                            fullWidth\n                            type=\"submit\"\n                        >\n                            Рассчитать\n                        </MuiButton>\n                    </MuiGrid>\n                </MuiGrid>\n            </form>\n        </Box>\n    );\n}\n\nCreditForm.propTypes = {\n    name: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport MuiGrid from '@material-ui/core/Grid';\nimport MuiBox from '@material-ui/core/Box';\nimport MuiIconButton from '@material-ui/core/IconButton';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\n\nimport BoxTitle from 'src/components/common/Box/Title';\nimport CreditForm from 'src/components/MultiCreditForm/components/CreditForm';\nimport { addCredit } from 'src/reducers/credits';\n\nlet creditNameCounter = 1;\n\nexport default function MultiCreditForm() {\n    const { names, creditByName } = useSelector((state) => state.credits);\n    const dispatch = useDispatch();\n\n    const addOneMoreCredit = () => {\n        dispatch(addCredit({ ...creditByName[names[names.length - 1]], name: `credit${creditNameCounter}` }));\n        creditNameCounter += 1;\n    };\n\n    return (\n        <MuiBox mb={2}>\n            <BoxTitle>Параметры кредита</BoxTitle>\n            <MuiGrid item xs={12}>\n                <MuiGrid container spacing={3}>\n                    {names.map((name) => (\n                        <MuiGrid key={name} item xs={12} md={3} lg={3}>\n                            <CreditForm name={name} />\n                        </MuiGrid>\n                    ))}\n                    <MuiGrid key={name} item xs={12} md={3} lg={3}>\n                        <MuiIconButton aria-label={`Добавить кредит`} onClick={addOneMoreCredit}>\n                            <AddCircleIcon fontSize=\"large\" style={{ fontSize: 50 }} color=\"primary\" />\n                        </MuiIconButton>\n                    </MuiGrid>\n                </MuiGrid>\n            </MuiGrid>\n        </MuiBox>\n    );\n}\n","import React from 'react';\nimport CreditCardIcon from '@material-ui/icons/CreditCard';\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\nimport CompareArrowsIcon from '@material-ui/icons/CompareArrows';\nimport BookmarksIcon from '@material-ui/icons/Bookmarks';\n\nimport MainPage from 'src/pages/Main';\nimport DepositPage from 'src/pages/Deposit';\nimport SavedCreditsPage from 'src/pages/SavedCredits';\nimport CreditStrategyPage from 'src/pages/CreditStrategy';\nimport CompareCreditsPage from 'src/pages/CompareCredits';\n\nconst routes = [\n    {\n        path: '/',\n        component: MainPage(),\n        title: 'Кредитный калькулятор',\n        menuIcon: <CreditCardIcon />,\n    },\n    {\n        path: '/deposit',\n        component: DepositPage(),\n        title: 'Калькулятор вклада',\n        menuIcon: <MonetizationOnIcon />,\n    },\n    {\n        path: '/compare-credits',\n        component: CompareCreditsPage(),\n        title: 'Сравнение кредитов',\n        menuIcon: <CompareArrowsIcon />,\n    },\n    {\n        path: '/credit-strategy',\n        component: CreditStrategyPage(),\n        title: 'Стратегии пагашения',\n        menuIcon: <BookmarksIcon />,\n    },\n    {\n        path: '/saved-credits',\n        component: SavedCreditsPage(),\n        title: 'Сохраненные кредиты',\n        menuIcon: <BookmarksIcon />,\n    },\n];\n\nexport default routes;\n","import React from 'react';\n\nimport MuiGrid from '@material-ui/core/Grid';\n\nimport CreditForm from 'src/components/CreditForm';\nimport CreditCalculation from 'src/components/CreditCalculation';\n\nexport default function MainPage() {\n    return (\n        <>\n            <MuiGrid container spacing={4}>\n                <MuiGrid item xs={12} md={12} lg={12}>\n                    <CreditForm />\n                </MuiGrid>\n            </MuiGrid>\n            <CreditCalculation />\n        </>\n    );\n}\n","import React from 'react';\nimport MuiGrid from '@material-ui/core/Grid';\n\nimport DepositForm from 'src/components/DepositForm';\nimport DepositSummary from 'src/components/DepositSummary';\nimport DepositDataTable from 'src/components/DepositDataTable';\n\nexport default function DepositPage() {\n    return (\n        <>\n            <MuiGrid container spacing={4}>\n                <MuiGrid item xs={12} md={12} lg={12}>\n                    <DepositForm />\n                </MuiGrid>\n            </MuiGrid>\n            <DepositSummary />\n            <MuiGrid container spacing={4}>\n                <MuiGrid item xs={12} md={12} lg={12}>\n                    <DepositDataTable />\n                </MuiGrid>\n            </MuiGrid>\n        </>\n    );\n}\n","import React from 'react';\nimport MuiGrid from '@material-ui/core/Grid';\n\nimport MultiCreditForm from 'src/components/MultiCreditForm';\nimport CreditCalculation from 'src/components/CreditCalculation';\n\nexport default function MainPage() {\n    return (\n        <>\n            <MuiGrid container spacing={4}>\n                <MuiGrid item xs={12} md={12} lg={12}>\n                    <MultiCreditForm />\n                </MuiGrid>\n            </MuiGrid>\n            <CreditCalculation />\n        </>\n    );\n}\n","import React from 'react';\nimport MuiGrid from '@material-ui/core/Grid';\n\nimport CreditStrategyForm from 'src/components/CreditStrategyForm';\n\nexport default function CreditStrategyPage() {\n    return (\n        <>\n            <MuiGrid container spacing={4}>\n                <MuiGrid item xs={12} md={12} lg={12}>\n                    <CreditStrategyForm />\n                </MuiGrid>\n            </MuiGrid>\n        </>\n    );\n}\n","import React from 'react';\n\nexport default function SavedCreditsPage() {\n    return <div>SavedCreditsPage</div>;\n}\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport MuiBox from '@material-ui/core/Box';\nimport MuiToolbar from '@material-ui/core/Toolbar';\nimport MuiTypography from '@material-ui/core/Typography';\nimport MuiAppBar from '@material-ui/core/AppBar/AppBar';\n\nimport routes from 'src/routes';\n\nexport default function Header() {\n    return (\n        <MuiBox mb={4}>\n            <MuiAppBar position=\"static\">\n                <MuiToolbar>\n                    <MuiTypography component=\"h1\" variant=\"h5\" color=\"inherit\">\n                        <Switch>\n                            {routes.map((route, index) => (\n                                <Route key={index} path={route.path} exact>\n                                    {route.title}\n                                </Route>\n                            ))}\n                        </Switch>\n                    </MuiTypography>\n                </MuiToolbar>\n            </MuiAppBar>\n        </MuiBox>\n    );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport MuiDivider from '@material-ui/core/Divider';\nimport MuiList from '@material-ui/core/List';\nimport MuiDrawer from '@material-ui/core/Drawer/Drawer';\nimport MuiListItem from '@material-ui/core/ListItem';\nimport MuiListItemIcon from '@material-ui/core/ListItemIcon/ListItemIcon';\nimport MuiListItemText from '@material-ui/core/ListItemText/ListItemText';\n\nimport 'src/components/Menu/Menu.css';\nimport routes from 'src/routes';\n\nexport default function Menu() {\n    return (\n        <MuiDrawer variant=\"permanent\" className=\"menu\" open={true}>\n            <div className=\"menu__toolbar\" />\n            <MuiDivider />\n            <MuiList>\n                {routes.map((route, index) => (\n                    <MuiListItem key={index} button component={Link} to={route.path}>\n                        <MuiListItemIcon>{route.menuIcon}</MuiListItemIcon>\n                        <MuiListItemText primary={route.title} />\n                    </MuiListItem>\n                ))}\n            </MuiList>\n        </MuiDrawer>\n    );\n}\n","import React from 'react';\nimport MuiTypography from '@material-ui/core/Typography';\nimport MuiBox from '@material-ui/core/Box';\n\nexport default function Footer() {\n    return (\n        <MuiBox mt={4} mb={4}>\n            <MuiTypography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n                {'Copyright © '}\n                Calculator {new Date().getFullYear()}\n            </MuiTypography>\n        </MuiBox>\n    );\n}\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport 'src/App.css';\n\nimport MuiCssBaseline from '@material-ui/core/CssBaseline';\nimport MuiContainer from '@material-ui/core/Container';\n\nimport routes from 'src/routes';\nimport Header from 'src/components/Header';\nimport Menu from 'src/components/Menu';\nimport Footer from 'src/components/Footer';\n\nexport default function Dashboard() {\n    return (\n        <Router>\n            <div className=\"app-container\">\n                <MuiCssBaseline />\n                <Menu />\n                <div className=\"app-content\">\n                    <Header />\n                    <main>\n                        <MuiContainer maxWidth=\"lg\">\n                            <Switch>\n                                {routes.map((route, index) => (\n                                    <Route key={index} path={route.path} exact>\n                                        {route.component}\n                                    </Route>\n                                ))}\n                            </Switch>\n                            <Footer />\n                        </MuiContainer>\n                    </main>\n                </div>\n            </div>\n        </Router>\n    );\n}\n","import 'date-fns';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport 'src/index.css';\nimport App from 'src/App';\n\nimport configureStore from 'src/store';\n\nconst store = configureStore();\n\nReactDOM.render(\n    <Provider store={store}>\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <App />\n        </MuiPickersUtilsProvider>\n    </Provider>,\n    document.getElementById('root')\n);\n","import { createStore, combineReducers } from 'redux';\nimport credits from 'src/reducers/credits';\nimport creditParams from 'src/reducers/creditParams';\nimport creditData from 'src/reducers/creditData';\nimport depositParams from 'src/reducers/depositParams';\nimport depositData from 'src/reducers/depositData';\n\nconst configureStore = () => {\n    return createStore(\n        combineReducers({\n            credits,\n            creditParams,\n            creditData,\n            depositParams,\n            depositData,\n        }),\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    );\n};\n\nexport default configureStore;\n"],"sourceRoot":""}