{"version":3,"sources":["components/common/Box/index.js","components/common/Box/Title.js","components/common/Input/index.js","components/common/Select/index.js","reducers/creditParams.js","utils/date.js","utils/common.js","calc/common.js","calc/credit.js","reducers/credits.js","reducers/creditData.js","components/CreditForm/index.js","components/common/Summary/index.js","components/CreditSummary/index.js","components/CreditDataTable/index.js","calc/deposit.js","reducers/depositParams.js","reducers/depositData.js","components/DepositForm/index.js","components/DepositSummary/index.js","components/DepositDataTable/index.js","components/common/Input/LargeInput.js","components/common/Input/NumberInput.js","components/MultiCreditForm/components/CreditForm.js","components/MultiCreditForm/index.js","routes.js","pages/Main/index.js","pages/Deposit/index.js","pages/CompareCredits/index.js","pages/SavedCredits/index.js","components/Header/index.js","components/Menu/index.js","components/Footer/index.js","App.js","index.js","store.js"],"names":["Box","children","props","Paper","className","Title","component","variant","color","paragraph","Input","TextField","size","fullWidth","Select","otherProps","select","CALCULATING_TYPE","initialCreditParams","calculatingType","creditSum","creditPercent","paymentPerMonth","creditPeriod","creditParams","state","action","type","params","formatDateISO","date","toISOString","substr","formatDate","splittedDate","split","getNextMonth","newDate","Date","day","getDate","setMonth","getMonth","setDate","getDaysCountInYear","year","getDaysCountBetweenDates","start","end","priceFormat","value","Math","round","toLocaleString","replace","roundValue","removeItem","array","item","filter","current","addItemIfNotExists","includes","concat","removeProperty","object","property","result","calculatePercentage","base","calculateMoneyByPercentage","sum","percentage","startDate","endDate","daysCountInPreviousYear","getFullYear","daysCountInCurrentYear","paymentByPercents","addFormattedFields","row","dateFormatted","paymentRounded","payment","paymentByPercentsRounded","paymentByCreditRounded","paymentByCredit","overpaymentRounded","overpayment","creditLeftRounded","creditLeft","Credit","prepayments","this","period","sort","a","b","creditData","monthCount","currentPaymentDate","nextPaymentDate","currentPrepayments","prepayment","repeat","prepaymentEveryMonth","find","nextRepeatedDate","push","i","length","calculateSomePayment","checkCreditEnd","isPrepayment","previousPayment","currentPayment","number","percentageInMonth","pow","calculateAnnuityPayment","makePrepayments","firstPayment","lastPayment","table","summary","overpaymentPercent","lastPaymentDate","onPercentage","calculateCredit","calculate","months","locked","initialCredits","names","active","creditByName","default","name","scheduleByName","calculatePayments","credits","payload","field","setCreditData","data","initialState","CreditForm","useSelector","dispatch","useDispatch","onSubmit","values","parseFloat","initialValues","render","handleSubmit","noValidate","autoComplete","container","spacing","xs","md","lg","input","label","justify","Summary","icon","iconType","title","units","footer","classnames","CreditSummary","CreditDataTable","useMemo","stickyHeader","align","map","key","Deposit","initialSum","depositeDate","previousMonth","currentMonth","income","totalIncome","totalSum","calculateDeposit","initialDepositParams","depositParams","depositData","DepositSummary","DepositDataTable","index","LargeInput","withStyles","fontSize","NumberInput","onChange","step","shiftStep","minValue","maxValue","valueProcessor","parsedValue","target","floatValue","isNaN","startAdornment","position","style","marginLeft","aria-label","onClick","shiftKey","max","disabled","endAdornment","marginRight","min","defaultProps","Infinity","propTypes","PropTypes","string","func","creditSchedule","isActive","hasOwnProperty","elevation","event","preventDefault","direction","mt","isRequired","creditNameCounter","MultiCreditForm","mb","routes","path","menuIcon","Header","route","exact","Menu","open","button","Link","to","primary","Footer","Dashboard","maxWidth","store","createStore","combineReducers","window","__REDUX_DEVTOOLS_EXTENSION__","configureStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e29e82be.chunk.js","sourcesContent":["import React from 'react';\nimport { Paper } from '@material-ui/core';\n\nimport 'src/components/common/Box/Box.css';\n\nexport default function Box({ children, ...props }) {\n    return (\n        <Paper className=\"box\" {...props}>\n            {children}\n        </Paper>\n    );\n}\n","import React from 'react';\nimport MuiTypography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n    return (\n        <MuiTypography component=\"h2\" variant=\"h6\" color=\"primary\" paragraph>\n            {props.children}\n        </MuiTypography>\n    );\n}\n","import React from 'react';\nimport { TextField } from '@material-ui/core';\n\nexport default function Input(props) {\n    return <TextField variant=\"outlined\" size=\"small\" fullWidth {...props} />;\n}\n","import React from 'react';\nimport MuiTextField from '@material-ui/core/TextField';\n\nexport default function Select({ children, ...otherProps }) {\n    return (\n        <MuiTextField select variant=\"outlined\" size=\"small\" fullWidth {...otherProps}>\n            {children}\n        </MuiTextField>\n    );\n}\n","const SET_CREDIT_PARAMS = 'SET_CREDIT_PARAMS';\n\nexport const CALCULATING_TYPE = {\n    BY_PERIOD: 'by_period',\n    BY_PAYMENT: 'by_payment',\n};\n\nexport function setCreditParams(params) {\n    return {\n        type: SET_CREDIT_PARAMS,\n        params,\n    };\n}\n\nexport const initialCreditParams = {\n    calculatingType: CALCULATING_TYPE.BY_PAYMENT,\n    creditSum: 4000000,\n    creditPercent: 9.4,\n    paymentPerMonth: 100000,\n    creditPeriod: 60,\n};\n\nexport default function creditParams(state = initialCreditParams, action) {\n    switch (action.type) {\n        case SET_CREDIT_PARAMS:\n            return { ...action.params };\n        default:\n            return state;\n    }\n}\n","const MILLISECONDS_IN_DAY = 1000 * 60 * 60 * 24;\n\nexport const formatDateISO = (date) => date.toISOString().substr(0, 10);\n\nexport const formatDate = (date) => {\n    const strDate = formatDateISO(date);\n    const splittedDate = strDate.split('-');\n    return `${splittedDate[2]}.${splittedDate[1]}.${splittedDate[0]}`;\n};\n\nexport const getNextMonth = (date) => {\n    const newDate = new Date(date);\n    const day = date.getDate();\n    newDate.setMonth(date.getMonth() + 1);\n    if (newDate.getDate() !== day) {\n        newDate.setDate(0);\n    }\n    return newDate;\n};\n\nexport const getDaysCountInYear = (year) => {\n    if (year % 4 === 0) {\n        return 366;\n    }\n    return 365;\n};\n\nexport const getDaysCountBetweenDates = (start, end) => (end - start) / MILLISECONDS_IN_DAY;\n","export function priceFormat(value) {\n    const roundedValue = Math.round(value);\n    return roundedValue.toLocaleString('ru-RU').replace(/\\s/g, '\\u2009');\n}\n\nexport function roundValue(value) {\n    return Math.round(value);\n}\n\nexport function numConversion(number, words) {\n    const textCases = [2, 0, 1, 1, 1, 2];\n    const textInt = number % 100 > 4 && number % 100 < 20 ? 2 : textCases[Math.min(number % 10, 5)];\n    return words[textInt];\n}\n\nexport function removeItem(array, item) {\n    return array.filter((current) => current !== item);\n}\n\nexport function addItemIfNotExists(array, item) {\n    return array.includes(item) ? array : array.concat(item);\n}\n\nexport function removeProperty(object, property) {\n    const result = { ...object };\n    delete result[property];\n    return result;\n}\n","/* eslint-disable import/prefer-default-export */\nimport { getDaysCountBetweenDates, getDaysCountInYear } from 'src/utils/date';\n\nexport function calculatePercentage(value, base) {\n    return Math.round((value / base) * 10000) / 100;\n}\n\nexport function calculateMoneyByPercentage(sum, percentage, startDate, endDate) {\n    const daysCountInPreviousYear = getDaysCountInYear(startDate.getFullYear());\n    const daysCountInCurrentYear = getDaysCountInYear(endDate.getFullYear());\n    let paymentByPercents = 0;\n    // Случай, когда одна часть платежного периода находится в невисокосном году, а вторая в високосном или наоборот\n    // В таком случае стоимость одного дня кредита будет разной для каждой части\n    if (startDate.getMonth() === 11 && endDate.getMonth() === 0 && daysCountInPreviousYear !== daysCountInCurrentYear) {\n        const daysCountInPreviousMonth = getDaysCountBetweenDates(\n            startDate,\n            new Date(`${startDate.getFullYear()}-12-31`)\n        );\n        const daysCountInCurrentMonth = getDaysCountBetweenDates(new Date(`${startDate.getFullYear()}-12-31`), endDate);\n\n        const oneDayCreditCostForPreviousMonth = (sum * percentage) / daysCountInPreviousYear;\n        const oneDayCreditCostForCurrentMonth = (sum * percentage) / daysCountInCurrentYear;\n\n        paymentByPercents =\n            oneDayCreditCostForPreviousMonth * daysCountInPreviousMonth +\n            oneDayCreditCostForCurrentMonth * daysCountInCurrentMonth;\n    } else {\n        // обычный случай\n        const oneDayCreditCost = (sum * percentage) / daysCountInPreviousYear;\n        paymentByPercents = oneDayCreditCost * getDaysCountBetweenDates(startDate, endDate);\n    }\n\n    return paymentByPercents;\n}\n","import { getNextMonth, formatDate, formatDateISO } from 'src/utils/date';\nimport { roundValue } from 'src/utils/common';\nimport { calculatePercentage, calculateMoneyByPercentage } from 'src/calc/common';\nimport { CALCULATING_TYPE } from 'src/reducers/creditParams';\n\nconst MAX_MONTHS_COUNT = 360;\nconst startDate = new Date();\n\nfunction addFormattedFields(row) {\n    row.dateFormatted = formatDate(row.date);\n    row.paymentRounded = roundValue(row.payment);\n    row.paymentByPercentsRounded = roundValue(row.paymentByPercents);\n    row.paymentByCreditRounded = roundValue(row.paymentByCredit);\n    row.overpaymentRounded = roundValue(row.overpayment);\n    row.creditLeftRounded = roundValue(row.creditLeft);\n}\n\nfunction calculateAnnuityPayment(sum, percentage, period) {\n    const percentageInMonth = percentage / 12;\n    const pow = Math.pow(1 + percentageInMonth, period);\n    const annuityFactor = (percentageInMonth * pow) / (pow - 1);\n    const annuityPayment = sum * annuityFactor;\n    return roundValue(annuityPayment);\n}\n\nclass Credit {\n    constructor({\n        calculatingType = CALCULATING_TYPE.BY_PAYMENT,\n        creditSum,\n        creditPercent,\n        creditPeriod = 1,\n        paymentPerMonth,\n        prepayments = [\n            // {\n            //     date: '2020-09-11',\n            //     payment: 5000,\n            //     repeat: 'everyMonth',\n            // },\n        ],\n    }) {\n        this.calculatingType = calculatingType;\n        this.creditSum = creditSum;\n        this.percentage = creditPercent / 100;\n        this.period = creditPeriod;\n        this.payment = paymentPerMonth;\n        this.prepayments = prepayments.sort((a, b) => (a.date > b.date ? 1 : -1));\n\n        this.creditData = [];\n        this.creditLeft = creditSum;\n\n        this.monthCount = 0;\n        this.currentPaymentDate = new Date(startDate);\n        this.nextPaymentDate = getNextMonth(this.currentPaymentDate);\n    }\n\n    checkCreditEnd() {\n        return this.creditLeft <= 0 || this.monthCount > MAX_MONTHS_COUNT;\n    }\n\n    makePrepayments() {\n        const currentPaymentDate = formatDateISO(this.currentPaymentDate);\n        const nextPaymentDate = formatDateISO(this.nextPaymentDate);\n        // находим досрочные платежи, которые нужно учесть между платежными датами по графику платежей\n        const currentPrepayments = this.prepayments.filter((prepayment) => {\n            return currentPaymentDate <= prepayment.date && prepayment.date < nextPaymentDate && !prepayment.repeat;\n        });\n\n        const prepaymentEveryMonth = this.prepayments.find((prepayment) => {\n            return prepayment.repeat === 'everyMonth' && prepayment.date < nextPaymentDate;\n        });\n\n        // добавляем в список текущих досрочных платежей периодичные досрочные платежи\n        if (prepaymentEveryMonth) {\n            let nextRepeatedDate;\n            const date = new Date(prepaymentEveryMonth.date);\n            const day = date.getDate();\n\n            if (day > this.currentPaymentDate.getDate()) {\n                nextRepeatedDate = new Date(\n                    this.currentPaymentDate.getFullYear(),\n                    this.currentPaymentDate.getMonth(),\n                    day\n                );\n            } else {\n                nextRepeatedDate = new Date(this.nextPaymentDate.getFullYear(), this.nextPaymentDate.getMonth(), day);\n            }\n\n            const prepayment = {\n                date: formatDateISO(nextRepeatedDate),\n                payment: prepaymentEveryMonth.payment,\n            };\n            currentPrepayments.push(prepayment);\n        }\n\n        for (let i = 0; i < currentPrepayments.length; i++) {\n            const { date, payment } = currentPrepayments[i];\n            this.calculateSomePayment(new Date(date), payment, true);\n            if (this.checkCreditEnd()) {\n                break;\n            }\n        }\n    }\n\n    calculateSomePayment(date, payment, isPrepayment) {\n        const previousPayment = this.creditData[this.creditData.length - 1];\n        const currentPayment = {\n            number: previousPayment.number + 1,\n            date,\n            payment,\n            isPrepayment,\n        };\n\n        const paymentByPercents = calculateMoneyByPercentage(\n            previousPayment.creditLeft,\n            this.percentage,\n            previousPayment.date,\n            currentPayment.date\n        );\n\n        // последний платежный месяц\n        if (previousPayment.creditLeft <= payment) {\n            currentPayment.payment = previousPayment.creditLeft + paymentByPercents;\n        }\n\n        const paymentByCredit = currentPayment.payment - paymentByPercents;\n\n        currentPayment.paymentByPercents = paymentByPercents;\n        currentPayment.paymentByCredit = paymentByCredit;\n        currentPayment.overpayment = previousPayment.overpayment + paymentByPercents;\n        currentPayment.creditLeft = previousPayment.creditLeft - paymentByCredit;\n\n        addFormattedFields(currentPayment);\n        this.creditData.push(currentPayment);\n        this.creditLeft = currentPayment.creditLeft;\n    }\n\n    calculate() {\n        if (this.calculatingType === CALCULATING_TYPE.BY_PERIOD) {\n            this.payment = calculateAnnuityPayment(this.creditSum, this.percentage, this.period);\n        }\n\n        this.creditData[0] = {\n            number: 0,\n            date: startDate,\n            payment: 0,\n            paymentByPercents: 0,\n            paymentByCredit: 0,\n            overpayment: 0,\n            creditLeft: this.creditSum,\n        };\n\n        addFormattedFields(this.creditData[0]);\n\n        while (!this.checkCreditEnd()) {\n            this.makePrepayments();\n            if (this.checkCreditEnd()) {\n                break;\n            }\n            this.calculateSomePayment(this.nextPaymentDate, this.payment);\n            this.monthCount += 1;\n            this.currentPaymentDate = new Date(this.nextPaymentDate);\n            this.nextPaymentDate = getNextMonth(this.nextPaymentDate);\n        }\n\n        const firstPayment = this.creditData[1];\n        const lastPayment = this.creditData[this.creditData.length - 1];\n\n        return {\n            table: this.creditData,\n            summary: {\n                overpayment: lastPayment.overpayment,\n                overpaymentPercent: calculatePercentage(lastPayment.overpayment, this.creditSum),\n                monthCount: this.monthCount,\n                lastPaymentDate: lastPayment.date,\n                payment: this.payment,\n                onPercentage: calculatePercentage(firstPayment.paymentByPercents, this.payment),\n            },\n        };\n    }\n}\n\nexport default function calculateCredit(params) {\n    const credit = new Credit(params);\n    return credit.calculate();\n}\n","import { addItemIfNotExists, removeItem, removeProperty } from 'src/utils/common';\nimport calculatePayments from 'src/calc/credit';\n\nconst SAVE_CREDIT = 'SAVE_CREDIT';\nconst LOCK_FIELD = 'LOCK_FIELD';\nconst ADD_CREDIT = 'ADD_CREDIT';\nconst REMOVE_CREDIT = 'REMOVE_CREDIT';\nconst SET_ACTIVE = 'SET_ACTIVE';\n\nexport function addCredit(payload) {\n    return {\n        type: SAVE_CREDIT,\n        payload,\n    };\n}\n\nexport function saveCredit(payload) {\n    return {\n        type: SAVE_CREDIT,\n        payload,\n    };\n}\n\nexport function lockField({ name, field, value }) {\n    return {\n        type: LOCK_FIELD,\n        payload: { name, field, value },\n    };\n}\n\nexport function setActive({ name }) {\n    return {\n        type: SET_ACTIVE,\n        payload: { name },\n    };\n}\n\nexport const initialCreditParams = {\n    creditSum: 5000000,\n    creditPercent: 9.5,\n    paymentPerMonth: 50000,\n    months: null,\n    overpayment: null,\n    locked: {\n        creditSum: true,\n        creditPercent: true,\n        paymentPerMonth: true,\n        months: false,\n        overpayment: false,\n    },\n};\n\nconst DEFAULT_NAME = 'default';\n\nexport const initialCredits = {\n    names: [DEFAULT_NAME],\n    active: DEFAULT_NAME,\n    creditByName: {\n        default: { ...initialCreditParams, name: DEFAULT_NAME },\n    },\n    scheduleByName: {\n        default: calculatePayments(initialCreditParams),\n    },\n};\n\nexport default function credits(state = initialCredits, { type, payload }) {\n    switch (type) {\n        case ADD_CREDIT:\n        case SAVE_CREDIT: {\n            const creditParams = { ...payload };\n            return {\n                ...state,\n                names: addItemIfNotExists(state.names, payload.name),\n                creditByName: { ...state.creditByName, [payload.name]: creditParams },\n                scheduleByName: {\n                    ...state.scheduleByName,\n                    [payload.name]: calculatePayments(creditParams),\n                },\n            };\n        }\n        case REMOVE_CREDIT:\n            return {\n                ...state,\n                names: removeItem(state.names, payload.name),\n                creditByName: removeProperty(state.creditByName, payload.name),\n                scheduleByName: removeProperty(state.scheduleByName, payload.name),\n                active: state.active === payload.name ? null : state.active,\n            };\n        case LOCK_FIELD:\n            return {\n                ...state,\n                creditByName: {\n                    ...state.creditByName,\n                    [payload.name]: {\n                        ...state.creditByName[payload.name],\n                        locked: { ...state.creditByName[payload.name].locked, [payload.field]: payload.value },\n                    },\n                },\n            };\n        case SET_ACTIVE:\n            return {\n                ...state,\n                active: payload.name,\n            };\n        default:\n            return state;\n    }\n}\n","import calculatePayments from 'src/calc/credit';\nimport { initialCreditParams } from 'src/reducers/credits';\n\nconst SET_CREDIT_DATA = 'SET_CREDIT_DATA';\n\nexport function setCreditData(data) {\n    return {\n        type: SET_CREDIT_DATA,\n        data,\n    };\n}\n\nconst initialState = calculatePayments(initialCreditParams);\n\nexport default function creditData(state = initialState, action) {\n    switch (action.type) {\n        case SET_CREDIT_DATA:\n            return action.data;\n        default:\n            return state;\n    }\n}\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Form, Field } from 'react-final-form';\nimport MuiButton from '@material-ui/core/Button';\nimport MuiGrid from '@material-ui/core/Grid';\nimport MuiMenuItem from '@material-ui/core/MenuItem';\n\nimport Box from 'src/components/common/Box';\nimport BoxTitle from 'src/components/common/Box/Title';\nimport Input from 'src/components/common/Input';\nimport Select from 'src/components/common/Select';\nimport { CALCULATING_TYPE } from 'src/reducers/creditParams';\nimport { setCreditData } from 'src/reducers/creditData';\nimport calculateCredit from 'src/calc/credit';\n\nexport default function CreditForm() {\n    const { creditParams } = useSelector((state) => state);\n    const dispatch = useDispatch();\n\n    const onSubmit = (values) => {\n        const creditSum = parseFloat(values.creditSum);\n        const creditPercent = parseFloat(values.creditPercent);\n        const paymentPerMonth = parseFloat(values.paymentPerMonth);\n        const creditPeriod = parseFloat(values.creditPeriod);\n\n        const creditData = calculateCredit({\n            calculatingType: values.calculatingType,\n            creditSum,\n            creditPercent,\n            paymentPerMonth,\n            creditPeriod,\n        });\n        dispatch(setCreditData(creditData));\n    };\n\n    return (\n        <>\n            <BoxTitle>Параметры кредита</BoxTitle>\n            <Box>\n                <Form\n                    onSubmit={onSubmit}\n                    initialValues={creditParams}\n                    render={({ handleSubmit, values }) => (\n                        <form onSubmit={handleSubmit} noValidate autoComplete=\"off\">\n                            <MuiGrid container spacing={3}>\n                                <MuiGrid item xs={12} md={3} lg={3}>\n                                    <Field name=\"calculatingType\">\n                                        {({ input }) => (\n                                            <Select {...input} label=\"Способ расчета\">\n                                                <MuiMenuItem value={CALCULATING_TYPE.BY_PAYMENT}>\n                                                    По сумме платежа\n                                                </MuiMenuItem>\n                                                <MuiMenuItem value={CALCULATING_TYPE.BY_PERIOD}>\n                                                    По сроку кредита\n                                                </MuiMenuItem>\n                                            </Select>\n                                        )}\n                                    </Field>\n                                </MuiGrid>\n                                <MuiGrid item xs={12} md={3} lg={3}>\n                                    <Field name=\"creditSum\">\n                                        {({ input }) => <Input {...input} label=\"Сумма кредита\" />}\n                                    </Field>\n                                </MuiGrid>\n                                <MuiGrid item xs={12} md={3} lg={3}>\n                                    <Field name=\"creditPercent\">\n                                        {({ input }) => <Input {...input} label=\"Процентная ставка\" />}\n                                    </Field>\n                                </MuiGrid>\n                                <MuiGrid item xs={12} md={3} lg={3}>\n                                    {values.calculatingType === CALCULATING_TYPE.BY_PAYMENT && (\n                                        <Field name=\"paymentPerMonth\">\n                                            {({ input }) => <Input {...input} label=\"Ежемесячный платеж\" />}\n                                        </Field>\n                                    )}\n                                    {values.calculatingType === CALCULATING_TYPE.BY_PERIOD && (\n                                        <Field name=\"creditPeriod\">\n                                            {({ input }) => <Input {...input} label=\"Срок кредита, мес.\" />}\n                                        </Field>\n                                    )}\n                                </MuiGrid>\n                            </MuiGrid>\n                            <MuiGrid container justify=\"flex-end\" spacing={3}>\n                                <MuiGrid item xs={12} md={3} lg={3}>\n                                    <MuiButton variant=\"contained\" color=\"primary\" fullWidth type=\"submit\">\n                                        Рассчитать\n                                    </MuiButton>\n                                </MuiGrid>\n                            </MuiGrid>\n                        </form>\n                    )}\n                />\n            </Box>\n        </>\n    );\n}\n","import React from 'react';\nimport classnames from 'classnames';\nimport MuiTypography from '@material-ui/core/Typography';\nimport MuiDivider from '@material-ui/core/Divider';\n\nimport 'src/components/common/Summary/Summary.css';\nimport Box from 'src/components/common/Box';\n\nexport default function Summary({ icon, iconType, title, value, units, footer }) {\n    return (\n        <Box>\n            <div\n                className={classnames('summary__icon', {\n                    [`summary__icon_${iconType}`]: iconType,\n                })}\n            >\n                {icon}\n            </div>\n            <div className=\"summary__content\">\n                <div className=\"summary__title\">\n                    <MuiTypography component=\"h3\" variant=\"body1\" color=\"textSecondary\">\n                        {title}\n                    </MuiTypography>\n                </div>\n                <MuiTypography component=\"p\" variant=\"h3\">\n                    {value}\n                    <MuiTypography component=\"span\" variant=\"h5\">\n                        {' '}\n                        {units}\n                    </MuiTypography>\n                </MuiTypography>\n            </div>\n            <MuiDivider />\n            <div className=\"summary__footer\">\n                <MuiTypography component=\"p\" color=\"textSecondary\" variant=\"body2\">\n                    {footer}\n                </MuiTypography>\n            </div>\n        </Box>\n    );\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport MuiGrid from '@material-ui/core/Grid';\nimport MuiEventAvailableIcon from '@material-ui/icons/EventAvailable';\nimport MuiAttachMoneyIcon from '@material-ui/icons/AttachMoney';\nimport MuiAccountBalanceWalletIcon from '@material-ui/icons/AccountBalanceWallet';\n\nimport Summary from 'src/components/common/Summary';\nimport { formatDate } from 'src/utils/date';\nimport { priceFormat } from 'src/utils/common';\n\nexport default function CreditSummary() {\n    const {\n        creditData: { summary },\n    } = useSelector((state) => state);\n    return (\n        <MuiGrid container spacing={4}>\n            <MuiGrid item xs={12} md={4} lg={4}>\n                <Summary\n                    title=\"Срок кредита\"\n                    icon={<MuiEventAvailableIcon />}\n                    value={summary.monthCount}\n                    units=\"мес.\"\n                    footer={`Последний платеж – ${formatDate(summary.lastPaymentDate)}`}\n                    iconType=\"success\"\n                />\n            </MuiGrid>\n            <MuiGrid item xs={12} md={4} lg={4}>\n                <Summary\n                    title=\"Минимальный платеж\"\n                    icon={<MuiAccountBalanceWalletIcon />}\n                    value={priceFormat(summary.payment)}\n                    units=\"руб.\"\n                    footer={`${summary.onPercentage}% от этой суммы уйдет на погашение процентов в первый месяц`}\n                    iconType=\"info\"\n                />\n            </MuiGrid>\n            <MuiGrid item xs={12} md={4} lg={4}>\n                <Summary\n                    title=\"Переплата\"\n                    icon={<MuiAttachMoneyIcon />}\n                    value={`${priceFormat(summary.overpayment)}`}\n                    units=\"руб.\"\n                    footer={`Это ${summary.overpaymentPercent}% от суммы кредита`}\n                    iconType=\"warning\"\n                />\n            </MuiGrid>\n        </MuiGrid>\n    );\n}\n","import React, { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport MuiTable from '@material-ui/core/Table';\nimport MuiTableBody from '@material-ui/core/TableBody';\nimport MuiTableCell from '@material-ui/core/TableCell';\nimport MuiTableHead from '@material-ui/core/TableHead';\nimport MuiTableRow from '@material-ui/core/TableRow';\n\nimport 'src/components/CreditDataTable/CreditDataTable.css';\nimport Box from 'src/components/common/Box';\nimport BoxTitle from 'src/components/common/Box/Title';\nimport { priceFormat } from 'src/utils/common';\nimport { formatDate } from 'src/utils/date';\n\nexport default function CreditDataTable() {\n    const { creditData } = useSelector((state) => state);\n\n    return useMemo(\n        () => (\n            <Box>\n                <BoxTitle>График платежей</BoxTitle>\n                <MuiTable size=\"small\" stickyHeader>\n                    <MuiTableHead>\n                        <MuiTableRow>\n                            <MuiTableCell>№</MuiTableCell>\n                            <MuiTableCell>Дата</MuiTableCell>\n                            <MuiTableCell align=\"right\">Платеж</MuiTableCell>\n                            <MuiTableCell align=\"right\">По процентам</MuiTableCell>\n                            <MuiTableCell align=\"right\">По кредиту</MuiTableCell>\n                            <MuiTableCell align=\"right\">Переплата</MuiTableCell>\n                            <MuiTableCell align=\"right\">Остаток долга</MuiTableCell>\n                        </MuiTableRow>\n                    </MuiTableHead>\n                    <MuiTableBody>\n                        {creditData.table.map((row) => (\n                            <MuiTableRow key={row.number}>\n                                <MuiTableCell>{row.number}.</MuiTableCell>\n                                <MuiTableCell>\n                                    {formatDate(row.date)}\n                                    &nbsp;\n                                    {row.isPrepayment && '*'}\n                                </MuiTableCell>\n                                <MuiTableCell align=\"right\">{priceFormat(row.payment)}</MuiTableCell>\n                                <MuiTableCell align=\"right\">{priceFormat(row.paymentByPercents)}</MuiTableCell>\n                                <MuiTableCell align=\"right\">{priceFormat(row.paymentByCredit)}</MuiTableCell>\n                                <MuiTableCell align=\"right\">{priceFormat(row.overpayment)}</MuiTableCell>\n                                <MuiTableCell align=\"right\">{priceFormat(row.creditLeft)}</MuiTableCell>\n                            </MuiTableRow>\n                        ))}\n                    </MuiTableBody>\n                </MuiTable>\n            </Box>\n        ),\n        [creditData]\n    );\n}\n","import { calculateMoneyByPercentage } from 'src/calc/common';\n\nimport { getNextMonth } from 'src/utils/date';\n\nconst startDate = new Date();\n\nclass Deposit {\n    constructor({ initialSum, percentage, payment, period }) {\n        this.sum = initialSum;\n        this.percentage = percentage / 100;\n        this.payment = payment;\n        this.period = period;\n\n        this.depositeDate = [];\n    }\n\n    calculateSomePayment() {\n        const previousMonth = this.depositeDate[this.depositeDate.length - 1];\n        const currentMonth = {\n            number: previousMonth.number + 1,\n            date: getNextMonth(previousMonth.date),\n            payment: this.payment,\n        };\n\n        const income = calculateMoneyByPercentage(\n            previousMonth.sum,\n            this.percentage,\n            previousMonth.date,\n            currentMonth.date\n        );\n\n        currentMonth.income = income;\n        currentMonth.totalIncome = previousMonth.totalIncome + income;\n        currentMonth.sum = previousMonth.sum + income + this.payment;\n\n        this.depositeDate.push(currentMonth);\n    }\n\n    calculate() {\n        this.depositeDate[0] = {\n            number: 0,\n            date: startDate,\n            sum: this.sum,\n            income: 0,\n            totalIncome: 0,\n            payment: 0,\n        };\n\n        while (this.period) {\n            this.calculateSomePayment();\n            this.period -= 1;\n        }\n\n        const lastPayment = this.depositeDate[this.depositeDate.length - 1];\n\n        return {\n            table: this.depositeDate,\n            summary: {\n                period: this.depositeDate.length - 1,\n                endDate: lastPayment.date,\n                totalIncome: lastPayment.totalIncome,\n                totalSum: lastPayment.sum,\n            },\n        };\n    }\n}\n\nexport default function calculateDeposit(params) {\n    const deposit = new Deposit(params);\n    return deposit.calculate();\n}\n","const SET_DEPOSIT_PARAMS = 'SET_DEPOSIT_PARAMS';\n\nexport function setDepositParams(params) {\n    return {\n        type: SET_DEPOSIT_PARAMS,\n        params,\n    };\n}\n\nexport const initialDepositParams = {\n    initialSum: 0,\n    percentage: 5,\n    payment: 50000,\n    period: 12,\n};\n\nexport default function depositParams(state = initialDepositParams, action) {\n    switch (action.type) {\n        case SET_DEPOSIT_PARAMS:\n            return { ...action.params };\n        default:\n            return state;\n    }\n}\n","import calculateDeposit from 'src/calc/deposit';\nimport { initialDepositParams } from 'src/reducers/depositParams';\n\nconst SET_DEPOSIT_DATA = 'SET_DEPOSIT_DATA';\n\nexport function setDepositData(data) {\n    return {\n        type: SET_DEPOSIT_DATA,\n        data,\n    };\n}\n\nconst initialState = calculateDeposit(initialDepositParams);\n\nexport default function depositData(state = initialState, action) {\n    switch (action.type) {\n        case SET_DEPOSIT_DATA:\n            return action.data;\n        default:\n            return state;\n    }\n}\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Form, Field } from 'react-final-form';\nimport MuiButton from '@material-ui/core/Button';\nimport MuiGrid from '@material-ui/core/Grid';\n\nimport Box from 'src/components/common/Box';\nimport BoxTitle from 'src/components/common/Box/Title';\nimport Input from 'src/components/common/Input';\nimport { setDepositData } from 'src/reducers/depositData';\nimport calculateDeposit from 'src/calc/deposit';\n\nexport default function CreditForm() {\n    const { depositParams } = useSelector((state) => state);\n    const dispatch = useDispatch();\n\n    const onSubmit = (values) => {\n        const initialSum = parseFloat(values.initialSum);\n        const percentage = parseFloat(values.percentage);\n        const payment = parseFloat(values.payment);\n        const period = parseFloat(values.period);\n\n        const depositData = calculateDeposit({\n            initialSum,\n            percentage,\n            payment,\n            period,\n        });\n        dispatch(setDepositData(depositData));\n    };\n\n    return (\n        <>\n            <BoxTitle>Параметры вклада</BoxTitle>\n            <Box>\n                <Form\n                    onSubmit={onSubmit}\n                    initialValues={depositParams}\n                    render={({ handleSubmit }) => (\n                        <form onSubmit={handleSubmit} noValidate autoComplete=\"off\">\n                            <MuiGrid container spacing={3}>\n                                <MuiGrid item xs={12} md={3} lg={3}>\n                                    <Field name=\"initialSum\">\n                                        {({ input }) => <Input {...input} label=\"Первоначальный вклад\" />}\n                                    </Field>\n                                </MuiGrid>\n                                <MuiGrid item xs={12} md={3} lg={3}>\n                                    <Field name=\"percentage\">\n                                        {({ input }) => <Input {...input} label=\"Процентная ставка\" />}\n                                    </Field>\n                                </MuiGrid>\n                                <MuiGrid item xs={12} md={3} lg={3}>\n                                    <Field name=\"payment\">\n                                        {({ input }) => <Input {...input} label=\"Ежемесячное пополнение\" />}\n                                    </Field>\n                                </MuiGrid>\n                                <MuiGrid item xs={12} md={3} lg={3}>\n                                    <Field name=\"period\">\n                                        {({ input }) => <Input {...input} label=\"Срок вклада, мес.\" />}\n                                    </Field>\n                                </MuiGrid>\n                            </MuiGrid>\n                            <MuiGrid container justify=\"flex-end\" spacing={3}>\n                                <MuiGrid item xs={12} md={3} lg={3}>\n                                    <MuiButton variant=\"contained\" color=\"primary\" fullWidth type=\"submit\">\n                                        Рассчитать\n                                    </MuiButton>\n                                </MuiGrid>\n                            </MuiGrid>\n                        </form>\n                    )}\n                />\n            </Box>\n        </>\n    );\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport MuiGrid from '@material-ui/core/Grid';\nimport MuiEventAvailableIcon from '@material-ui/icons/EventAvailable';\nimport MuiAttachMoneyIcon from '@material-ui/icons/AttachMoney';\nimport MuiAccountBalanceWalletIcon from '@material-ui/icons/AccountBalanceWallet';\n\nimport Summary from 'src/components/common/Summary';\nimport { formatDate } from 'src/utils/date';\nimport { priceFormat } from 'src/utils/common';\n\nexport default function DepositSummary() {\n    const {\n        depositData: { summary },\n    } = useSelector((state) => state);\n\n    return (\n        <MuiGrid container spacing={4}>\n            <MuiGrid item xs={12} md={4} lg={4}>\n                <Summary\n                    title=\"Срок кредита\"\n                    icon={<MuiEventAvailableIcon />}\n                    value={summary.period}\n                    units=\"мес.\"\n                    footer={`Дата выплаты вклада – ${formatDate(summary.endDate)}`}\n                    iconType=\"success\"\n                />\n            </MuiGrid>\n            <MuiGrid item xs={12} md={4} lg={4}>\n                <Summary\n                    title=\"Доход от процентов\"\n                    icon={<MuiAccountBalanceWalletIcon />}\n                    value={priceFormat(summary.totalIncome)}\n                    units=\"руб.\"\n                    iconType=\"info\"\n                />\n            </MuiGrid>\n            <MuiGrid item xs={12} md={4} lg={4}>\n                <Summary\n                    title=\"Итоговая сумма вклада\"\n                    icon={<MuiAttachMoneyIcon />}\n                    value={priceFormat(summary.totalSum)}\n                    units=\"руб.\"\n                    iconType=\"warning\"\n                />\n            </MuiGrid>\n        </MuiGrid>\n    );\n}\n","import React, { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport MuiTable from '@material-ui/core/Table';\nimport MuiTableBody from '@material-ui/core/TableBody';\nimport MuiTableCell from '@material-ui/core/TableCell';\nimport MuiTableHead from '@material-ui/core/TableHead';\nimport MuiTableRow from '@material-ui/core/TableRow';\n\nimport Box from 'src/components/common/Box';\nimport BoxTitle from 'src/components/common/Box/Title';\nimport { priceFormat } from 'src/utils/common';\nimport { formatDate } from 'src/utils/date';\n\nexport default function DepositDataTable() {\n    const { depositData } = useSelector((state) => state);\n\n    return useMemo(\n        () => (\n            <>\n                <BoxTitle>Вклад по месяцам</BoxTitle>\n                <Box>\n                    <MuiTable size=\"small\" stickyHeader>\n                        <MuiTableHead>\n                            <MuiTableRow>\n                                <MuiTableCell>№</MuiTableCell>\n                                <MuiTableCell>Дата</MuiTableCell>\n                                <MuiTableCell align=\"right\">Пополнение</MuiTableCell>\n                                <MuiTableCell align=\"right\">Доход по процентам</MuiTableCell>\n                                <MuiTableCell align=\"right\">Сумма вклада</MuiTableCell>\n                            </MuiTableRow>\n                        </MuiTableHead>\n                        <MuiTableBody>\n                            {depositData.table.map((row, index) => (\n                                <MuiTableRow key={index}>\n                                    <MuiTableCell />\n                                    <MuiTableCell>{formatDate(row.date)}</MuiTableCell>\n                                    <MuiTableCell align=\"right\">{priceFormat(row.payment)}</MuiTableCell>\n                                    <MuiTableCell align=\"right\">{priceFormat(row.income)}</MuiTableCell>\n                                    <MuiTableCell align=\"right\">{priceFormat(row.sum)}</MuiTableCell>\n                                </MuiTableRow>\n                            ))}\n                        </MuiTableBody>\n                    </MuiTable>\n                </Box>\n            </>\n        ),\n        [depositData]\n    );\n}\n","import { withStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\n\nconst LargeInput = withStyles(() => ({ input: { fontSize: 24 } }))(Input);\n\nexport default LargeInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport MuiInputLabel from '@material-ui/core/InputLabel';\nimport MuiFormControl from '@material-ui/core/FormControl';\n\nimport LargeInput from 'src/components/common/Input/LargeInput';\nimport MuiInputAdornment from '@material-ui/core/InputAdornment';\nimport MuiIconButton from '@material-ui/core/IconButton';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\n\nconst NumberInput = ({\n    label,\n    onChange,\n    units,\n    step,\n    shiftStep,\n    value,\n    minValue,\n    maxValue,\n    valueProcessor,\n    ...props\n}) => {\n    const parsedValue = valueProcessor(parseFloat(value));\n    const onInputChange = ({ target: { value } }) => {\n        const floatValue = parseFloat(value);\n        if (!isNaN(floatValue)) {\n            onChange(floatValue);\n        }\n    };\n    const onDecrease = ({ shiftKey }) => {\n        if (!isNaN(parsedValue)) {\n            onChange(Math.max(parsedValue - (shiftKey ? shiftStep : step), minValue));\n        }\n    };\n    const onIncrease = ({ shiftKey }) => {\n        if (!isNaN(parsedValue)) {\n            onChange(Math.min(parsedValue + (shiftKey ? shiftStep : step), maxValue));\n        }\n    };\n    return (\n        <MuiFormControl fullWidth>\n            <MuiInputLabel>{label}</MuiInputLabel>\n            <LargeInput\n                {...props}\n                value={valueProcessor(value)}\n                onChange={onInputChange}\n                startAdornment={\n                    <MuiInputAdornment position=\"start\">\n                        <MuiIconButton\n                            style={{ marginLeft: -15 }}\n                            aria-label={`Уменьшить`}\n                            onClick={onDecrease}\n                            disabled={isNaN(parsedValue)}\n                        >\n                            <RemoveIcon />\n                        </MuiIconButton>\n                    </MuiInputAdornment>\n                }\n                endAdornment={\n                    <MuiInputAdornment position=\"end\">\n                        <MuiIconButton\n                            style={{ marginRight: -15 }}\n                            aria-label={`Увеличить`}\n                            onClick={onIncrease}\n                            disabled={isNaN(parsedValue)}\n                        >\n                            <AddIcon />\n                        </MuiIconButton>\n                    </MuiInputAdornment>\n                }\n            />\n        </MuiFormControl>\n    );\n};\n\nNumberInput.defaultProps = {\n    valueProcessor: (value) => value,\n    minValue: 0,\n    maxValue: Infinity,\n};\n\nNumberInput.propTypes = {\n    label: PropTypes.string,\n    value: PropTypes.string,\n    minValue: PropTypes.number,\n    maxValue: PropTypes.number,\n    step: PropTypes.number,\n    onChange: PropTypes.func,\n};\n\nexport default NumberInput;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport MuiBox from '@material-ui/core/Box';\nimport MuiGrid from '@material-ui/core/Grid';\nimport MuiButton from '@material-ui/core/Button';\nimport MuiTypography from '@material-ui/core/Typography';\n\nimport Box from 'src/components/common/Box';\nimport NumberInput from 'src/components/common/Input/NumberInput';\nimport { saveCredit, setActive } from 'src/reducers/credits';\nimport { setCreditData } from 'src/reducers/creditData';\nimport { numConversion, priceFormat } from 'src/utils/common';\n\nexport default function CreditForm({ name }) {\n    const { creditByName, scheduleByName, active } = useSelector(({ credits }) => credits);\n    const creditParams = creditByName[name];\n    const creditSchedule = scheduleByName[name];\n    const isActive = active === creditParams.name;\n    const dispatch = useDispatch();\n\n    const onChange = (field, value) => {\n        if (creditParams.hasOwnProperty(field) && !isNaN(value)) {\n            dispatch(\n                saveCredit({\n                    ...creditParams,\n                    name,\n                    [field]: value,\n                    locked: {\n                        ...creditParams.locked,\n                        [field]: true,\n                    },\n                })\n            );\n        }\n    };\n\n    const onSubmit = (event) => {\n        event.preventDefault();\n        dispatch(setActive({ name: creditParams.name }));\n        dispatch(setCreditData(scheduleByName[creditParams.name]));\n    };\n\n    return (\n        <Box elevation={isActive ? 10 : 2}>\n            <form onSubmit={onSubmit} noValidate autoComplete=\"off\">\n                <MuiGrid container spacing={3} direction=\"column\">\n                    <MuiGrid item xs={12}>\n                        <NumberInput\n                            value={creditParams.creditPercent}\n                            onChange={(value) => onChange('creditPercent', value)}\n                            label=\"Процентная ставка\"\n                            units=\"%\"\n                            step={0.5}\n                            shiftStep={0.1}\n                            minValue={0}\n                            maxValue={100}\n                            valueProcessor={(value) => Math.round(value * 10) / 10}\n                        />\n                    </MuiGrid>\n                    <MuiGrid item xs={12}>\n                        <NumberInput\n                            value={creditParams.creditSum}\n                            onChange={(value) => onChange('creditSum', value)}\n                            label=\"Сумма кредита\"\n                            units=\"₽\"\n                            step={500000}\n                            shiftStep={100000}\n                            minValue={50000}\n                            maxValue={100000000}\n                        />\n                    </MuiGrid>\n                    <MuiGrid item xs={12}>\n                        <NumberInput\n                            value={creditParams.paymentPerMonth}\n                            onChange={(value) => onChange('paymentPerMonth', value)}\n                            label=\"Платёж в месяц\"\n                            units=\"₽\"\n                            step={5000}\n                            shiftStep={1000}\n                            minValue={1000}\n                            maxValue={100000000}\n                        />\n                    </MuiGrid>\n                    <MuiGrid item xs={12}>\n                        <MuiTypography component=\"h3\" variant=\"subtitle1\" color=\"textSecondary\">\n                            Срок кредита\n                        </MuiTypography>\n                        <MuiTypography component=\"span\" variant=\"h4\">\n                            {creditSchedule.summary.monthCount}&thinsp;\n                        </MuiTypography>\n                        <MuiTypography component=\"span\" variant=\"h5\">\n                            {numConversion(creditSchedule.summary.monthCount, ['месяц', 'месяца', 'месяцев'])}\n                        </MuiTypography>\n                    </MuiGrid>\n                    <MuiGrid item xs={12}>\n                        <MuiBox mt={-2}>\n                            <MuiTypography component=\"h3\" variant=\"subtitle1\" color=\"textSecondary\">\n                                Переплата\n                            </MuiTypography>\n                            <MuiTypography component=\"span\" variant=\"h4\">\n                                {priceFormat(creditSchedule.summary.overpayment)}&thinsp;\n                            </MuiTypography>\n                            <MuiTypography component=\"span\" variant=\"h5\">\n                                ₽\n                            </MuiTypography>\n                        </MuiBox>\n                    </MuiGrid>\n                    <MuiGrid item xs={12}>\n                        <MuiButton\n                            size=\"large\"\n                            variant=\"contained\"\n                            color={isActive ? 'primary' : 'default'}\n                            fullWidth\n                            type=\"submit\"\n                        >\n                            Рассчитать\n                        </MuiButton>\n                    </MuiGrid>\n                </MuiGrid>\n            </form>\n        </Box>\n    );\n}\n\nCreditForm.propTypes = {\n    name: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport MuiGrid from '@material-ui/core/Grid';\nimport MuiBox from '@material-ui/core/Box';\nimport MuiIconButton from '@material-ui/core/IconButton';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\n\nimport BoxTitle from 'src/components/common/Box/Title';\nimport CreditForm from 'src/components/MultiCreditForm/components/CreditForm';\nimport { addCredit } from 'src/reducers/credits';\n\nlet creditNameCounter = 1;\n\nexport default function MultiCreditForm() {\n    const { names, creditByName } = useSelector((state) => state.credits);\n    const dispatch = useDispatch();\n\n    const addOneMoreCredit = () => {\n        dispatch(addCredit({ ...creditByName[names[names.length - 1]], name: `credit${creditNameCounter}` }));\n        creditNameCounter += 1;\n    };\n\n    return (\n        <MuiBox mb={2}>\n            <BoxTitle>Параметры кредита</BoxTitle>\n            <MuiGrid container xs={12} spacing={3}>\n                {names.map((name) => (\n                    <MuiGrid key={name} item xs={12} md={3} lg={3}>\n                        <CreditForm name={name} />\n                    </MuiGrid>\n                ))}\n                <MuiGrid key={name} item xs={12} md={3} lg={3}>\n                    <MuiIconButton aria-label={`Добавить кредит`} onClick={addOneMoreCredit}>\n                        <AddCircleIcon fontSize=\"large\" style={{ fontSize: 50 }} color=\"primary\" />\n                    </MuiIconButton>\n                </MuiGrid>\n            </MuiGrid>\n        </MuiBox>\n    );\n}\n","import React from 'react';\nimport CreditCardIcon from '@material-ui/icons/CreditCard';\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\nimport CompareArrowsIcon from '@material-ui/icons/CompareArrows';\nimport BookmarksIcon from '@material-ui/icons/Bookmarks';\n\nimport MainPage from 'src/pages/Main';\nimport DepositPage from 'src/pages/Deposit';\nimport SavedCreditsPage from 'src/pages/SavedCredits';\nimport CompareCreditsPage from 'src/pages/CompareCredits';\n\nconst routes = [\n    {\n        path: '/',\n        component: MainPage(),\n        title: 'Кредитный калькулятор',\n        menuIcon: <CreditCardIcon />,\n    },\n    {\n        path: '/deposit',\n        component: DepositPage(),\n        title: 'Калькулятор вклада',\n        menuIcon: <MonetizationOnIcon />,\n    },\n    {\n        path: '/compare-credits',\n        component: CompareCreditsPage(),\n        title: 'Сравнение кредитов',\n        menuIcon: <CompareArrowsIcon />,\n    },\n    {\n        path: '/saved-credits',\n        component: SavedCreditsPage(),\n        title: 'Сохраненные кредиты',\n        menuIcon: <BookmarksIcon />,\n    },\n];\n\nexport default routes;\n","import React from 'react';\nimport MuiGrid from '@material-ui/core/Grid';\n\nimport CreditForm from 'src/components/CreditForm';\nimport CreditSummary from 'src/components/CreditSummary';\nimport CreditDataTable from 'src/components/CreditDataTable';\n\nexport default function MainPage() {\n    return (\n        <>\n            <MuiGrid container spacing={4}>\n                <MuiGrid item xs={12} md={12} lg={12}>\n                    <CreditForm />\n                </MuiGrid>\n            </MuiGrid>\n            <CreditSummary />\n            <MuiGrid container spacing={4}>\n                <MuiGrid item xs={12}>\n                    <CreditDataTable />\n                </MuiGrid>\n            </MuiGrid>\n        </>\n    );\n}\n","import React from 'react';\nimport MuiGrid from '@material-ui/core/Grid';\n\nimport DepositForm from 'src/components/DepositForm';\nimport DepositSummary from 'src/components/DepositSummary';\nimport DepositDataTable from 'src/components/DepositDataTable';\n\nexport default function DepositPage() {\n    return (\n        <>\n            <MuiGrid container spacing={4}>\n                <MuiGrid item xs={12} md={12} lg={12}>\n                    <DepositForm />\n                </MuiGrid>\n            </MuiGrid>\n            <DepositSummary />\n            <MuiGrid container spacing={4}>\n                <MuiGrid item xs={12} md={12} lg={12}>\n                    <DepositDataTable />\n                </MuiGrid>\n            </MuiGrid>\n        </>\n    );\n}\n","import React from 'react';\nimport MuiGrid from '@material-ui/core/Grid';\n\nimport MultiCreditForm from 'src/components/MultiCreditForm';\nimport CreditSummary from 'src/components/CreditSummary';\nimport CreditDataTable from 'src/components/CreditDataTable';\n\nexport default function MainPage() {\n    return (\n        <>\n            <MuiGrid container spacing={4}>\n                <MuiGrid item xs={12} md={12} lg={12}>\n                    <MultiCreditForm />\n                </MuiGrid>\n            </MuiGrid>\n            <CreditSummary />\n            <MuiGrid container spacing={4}>\n                <MuiGrid item xs={12}>\n                    <CreditDataTable />\n                </MuiGrid>\n            </MuiGrid>\n        </>\n    );\n}\n","import React from 'react';\n\nexport default function SavedCreditsPage() {\n    return <div>SavedCreditsPage</div>;\n}\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport MuiBox from '@material-ui/core/Box';\nimport MuiToolbar from '@material-ui/core/Toolbar';\nimport MuiTypography from '@material-ui/core/Typography';\nimport MuiAppBar from '@material-ui/core/AppBar/AppBar';\n\nimport routes from 'src/routes';\n\nexport default function Header() {\n    return (\n        <MuiBox mb={4}>\n            <MuiAppBar position=\"static\">\n                <MuiToolbar>\n                    <MuiTypography component=\"h1\" variant=\"h5\" color=\"inherit\">\n                        <Switch>\n                            {routes.map((route, index) => (\n                                <Route key={index} path={route.path} exact>\n                                    {route.title}\n                                </Route>\n                            ))}\n                        </Switch>\n                    </MuiTypography>\n                </MuiToolbar>\n            </MuiAppBar>\n        </MuiBox>\n    );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport MuiDivider from '@material-ui/core/Divider';\nimport MuiList from '@material-ui/core/List';\nimport MuiDrawer from '@material-ui/core/Drawer/Drawer';\nimport MuiListItem from '@material-ui/core/ListItem';\nimport MuiListItemIcon from '@material-ui/core/ListItemIcon/ListItemIcon';\nimport MuiListItemText from '@material-ui/core/ListItemText/ListItemText';\n\nimport 'src/components/Menu/Menu.css';\nimport routes from 'src/routes';\n\nexport default function Menu() {\n    return (\n        <MuiDrawer variant=\"permanent\" className=\"menu\" open={true}>\n            <div className=\"menu__toolbar\" />\n            <MuiDivider />\n            <MuiList>\n                {routes.map((route, index) => (\n                    <MuiListItem key={index} button component={Link} to={route.path}>\n                        <MuiListItemIcon>{route.menuIcon}</MuiListItemIcon>\n                        <MuiListItemText primary={route.title} />\n                    </MuiListItem>\n                ))}\n            </MuiList>\n        </MuiDrawer>\n    );\n}\n","import React from 'react';\nimport MuiTypography from '@material-ui/core/Typography';\nimport MuiBox from '@material-ui/core/Box';\n\nexport default function Footer() {\n    return (\n        <MuiBox mt={4} mb={4}>\n            <MuiTypography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n                {'Copyright © '}\n                Calculator {new Date().getFullYear()}\n            </MuiTypography>\n        </MuiBox>\n    );\n}\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport 'src/App.css';\n\nimport MuiCssBaseline from '@material-ui/core/CssBaseline';\nimport MuiContainer from '@material-ui/core/Container';\n\nimport routes from 'src/routes';\nimport Header from 'src/components/Header';\nimport Menu from 'src/components/Menu';\nimport Footer from 'src/components/Footer';\n\nexport default function Dashboard() {\n    return (\n        <Router>\n            <div className=\"app-container\">\n                <MuiCssBaseline />\n                <Menu />\n                <div className=\"app-content\">\n                    <Header />\n                    <main>\n                        <MuiContainer maxWidth=\"lg\">\n                            <Switch>\n                                {routes.map((route, index) => (\n                                    <Route key={index} path={route.path} exact>\n                                        {route.component}\n                                    </Route>\n                                ))}\n                            </Switch>\n                            <Footer />\n                        </MuiContainer>\n                    </main>\n                </div>\n            </div>\n        </Router>\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport 'src/index.css';\nimport App from 'src/App';\n\nimport configureStore from 'src/store';\n\nconst store = configureStore();\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n","import { createStore, combineReducers } from 'redux';\nimport credits from 'src/reducers/credits';\nimport creditParams from 'src/reducers/creditParams';\nimport creditData from 'src/reducers/creditData';\nimport depositParams from 'src/reducers/depositParams';\nimport depositData from 'src/reducers/depositData';\n\nconst configureStore = () => {\n    return createStore(\n        combineReducers({\n            credits,\n            creditParams,\n            creditData,\n            depositParams,\n            depositData,\n        }),\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    );\n};\n\nexport default configureStore;\n"],"sourceRoot":""}